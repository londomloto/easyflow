{"version":3,"sources":["core.js","class.js","matrix.js","point.js","path.js","bbox.js","curve.js","element.js","vector.js","paper.js","circle.js","ellipse.js","group.js","image.js","line.js","polygon.js","rect.js","text.js","manhattan.js","collector.js","connector.js","definer.js","hinter.js","link.js","linker.js","obstacle.js","port.js","router.js","spotlight.js","animator.js","dragger.js","dropper.js","history.js","network.js","resizer.js","sorter.js","transformer.js","base.js","page.js","action.js","initial.js","pool.js","swimlane.js","terminal.js","shape.js"],"names":["global","this","_","float","parseFloat","format","params","toArray","arguments","shift","replace","match","number","insert","array","index","Array","prototype","splice","apply","concat","move","from","to","size","length","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","isIE","na","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","finddot","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t","t1","x","Math","pow","y","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_TRAN_STR","REGEX_TRAN_SUB","REGEX_POLY_STR","REGEX_PATH_CMD","GLOBAL","document","Graph","config","VERSION","AUTHOR","extend","base","svg","version","xmlns","xlink","html","font","family","line","cached","setup","name","isPlainObject","toString","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","ns","namespace","lookup","clazz","current","i","parts","split","parent","len","factory","args","Function","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","mixin","tag","token","join","credit","debounce","v","memoize","func","memo","param","cache","saved","ii","deg","rad","round","PI","angle","x1","y1","x2","y2","dx","dy","atan2","theta","r","d","toFixed","magnitude","a","b","sqrt","sign","num","quadrant","props","lang","Class","point","Point","bbox","BBox","path","command","Path","curve","Curve","matrix","c","e","f","Matrix","get","element","$","data","paper","Paper","page","shape","Page","find","selector","context","elems","items","each","vector","collection","Vector","polygon2dots","$0","polygon2path","dots","seg2cmd","segments","cmd2seg","sizes","h","l","m","q","s","z","cloneDeep","cmd","val","cmd2transform","valid","translate","rotate","scale","skewX","skewY","transform","matches","forEach","sub","map","catmull2bezier","def","p","line2curve","quad2curve","ax","ay","_13","_23","arc2curve","rx","ry","large_arc_flag","sweep_flag","recursive","xy","_120","res","X","cos","sin","Y","f1","f2","cx","cy","rx2","ry2","abs","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","curvebox","dot","t2","min","max","initializing","tokenizer","test","xyz","$super","proto","defs","tmp","ret","init","me","ct","listeners","superclass","author","on","handler","part","fire","orig","off","lsnr","rgex","RegExp","escapeRegExp","defprop","prop","chr","multiply","invert","clone","sx","sy","determinant","delta","px","py","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","radian","toFilter","snap","isString","trim","toNumber","distance","manhattan","triangle","difference","equals","stringify","sep","serialize","__CLASS__","paths","absolute","mx","my","start","seg","itm","toUpperCase","toUpper","slice","j","jj","pop","kk","ll","pointAt","end","relative","toLower","process","segment","attr","prev","nx","ny","tq","T","Q","qx","qy","bx","by","fixarc","pi","com1","p2","com2","p1","fixmove","segments1","segments2","a1","a2","processPath","attrs2","pcom","fixArc","l1","l2","width","height","box","xmin","ymin","xmax","ymax","ps","sp","n","origin","center","corner","contain","dw","dh","intersect","tbox","poly","n1","n2","n3","n4","LG_N","LG_T","LG_C","unshift","x3","y3","x4","y4","sum","xb","yb","co","step","arr","t13","t12","t3","alpha","isNaN","E","elem","jQuery","node","setAttributeNS","setAttribute","show","hide","offset","position","addClass","classes","removeClass","hasClass","className","baseVal","append","prepend","appendTo","types","fn","one","call","borrows","method","$svg","type","createElementNS","doc","cascade","child","children","collectable","parentNode","nodeName","getBoundingClientRect","top","left","guid","canvas","dirty","transformer","collector","history","dragger","dropper","resizer","sorter","linker","rendered","tree","next","text","selectable","selected","focusable","attrs","stroke","stroke-width","fill","style","class","events","render","resize","reset","select","deselect","collect","decollect","dragstart","dragmove","dragend","touchedBBox","pristinBBox","onAppendChild","pull","onRemoveChild","onPrependChild","id","plugin","Transformer","onTransform","removeAttr","resizable","Resizer","onResizerResize","draggable","Dragger","onDraggerStart","onDraggerMove","onDraggerEnd","droppable","Dropper","sortable","Sorter","Snapper","linkable","network","Network","clickable","removeAttribute","css","predicate","added","uniq","removed","pullAll","pathinfo","vertices","pa","dt","ctm","dotval","mat","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","flush","isNull","bottom","right","nbox","pbox","getCTM","pristin","vectors","holder","isCanvas","ancestors","papa","descendants","remove","empty","globalMatrix","native","screenMatrix","getScreenCTM","deltaMatrix","backward","forward","front","back","focus","state","timer","spotlight","delay","clearTimeout","isGroup","isCollectable","isSelectable","isDraggable","isResizable","$collector","syncDragStart","syncDragMove","syncDragEnd","hinter","definer","container","scroller","pointer","xmlns:link","overflow","util","Collector","Definer","Linker","router","Router","Spotlight","defineArrowMarker","click","capitalize","autoScroll","ellipse","circle","rect","polygon","group","image","connector","Circle","ar","Ellipse","gx","gy","bb","magnify","Group","Image","preserveAspectRatio","src","xlink:href","align","aspect","ms","ro","w","Line","startAt","stopAt","count","lineTo","close","expandBy","rd","ox","oy","Polygon","points","Rect","origpath","Text","text-anchor","lineHeight","rows","font-size","font-family","arrange","span","fontSize","appendChild","createTextNode","textBox","targetBox","Collection","has","not","filter","o","dirangle","floor","dirchange","angle1","angle2","backtrace","parents","route","prevdiff","diff","Manhattan","grid","perpendicular","maxLoops","maxAngle","startdirs","enddirs","mapdirs","obstacle","options","Obstacle","build","directions","dirs","penalties","0","45","90","ways","loop","location","permit","prevangle","currkey","currpoint","currdist","currangle","nextkey","nextpoint","deltadir","dist","dir","heap","Heap","distances","srckey","tarkey","add","isEmpty","console","log","isClose","isOpen","costs","sortedIndexBy","suspended","components","rubber","beforedrag","afterdrag","interact","manualStart","onstart","pageX","pageY","onmove","onend","suspend","single","ctrlKey","shiftKey","clearCollection","action","interaction","pointerIsDown","interacting","resume","interactable","styleCursor","silent","scrollTop","scrollLeft","enabled","helper","syncdrag","tdx","tdy","redraw","Connector","ports","initComponent","comp","block","wrap","stopPropagation","core","marker-end","connect","x0","y0","port","moveTo","closeTo","expandTo","component","definitions","marker","refX","refY","markerWidth","markerHeight","orient","Hinter","G","V","H","sources","M","C","targets","bearing","register","activate","col","watch","fm","fc","deactivate","Link","link","revert","commit","hash","padding","margin","excludes","chain","dat","g","every","Port","weight","slot","snapping","connection","connecting","connectors","onPortRender","pointer-events","pcanvas","pos","inertia","createSnapGrid","setOptions","currentTarget","dropzone","overlap","accept","dropactivate","onLinkerActivate","dropdeactivate","onLinkerDeactivate","dragenter","onLinkerEnter","dragleave","onLinkerLeave","drop","onLinkerDrop","relocate","range","Infinity","endOnly","N","S","W","tsvg","Animator","ghost","bound","axis","hint","snaps","trans","onVectorTransform","onVectorRender","onVectorReset","onDragStart","onDragMove","onDragEnd","down","onPointerDown","onPointerMove","dragRotate","dragSnap","mode","enable","disable","stroke-dasharray","vbox","hbox","fixsnap","resetSnap","dragBound","edata","tx","ty","axs","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","History","limit","save","lim","last","go","clear","dragging","createPort","mouseenter","mouseleave","relatedTarget","onVectorDragStart","onVectorDragEnd","onVectorSelect","onVectorDeselect","onVectorResize","handlePath","handleSize","handle","ow","oh","cw","ch","ne","se","sw","nw","stopImmediatePropagation","onHandleMoveStart","onHandleMove","onHandleMoveEnd","b1","b2","bw","bh","hw","hh","hs","vx","tr","offsetTop","offsetLeft","sortables","origins","guests","batch","sorting","drag","$sorter","appendchild","onItemAdded","prependchild","onSortActivate","onSortDeactivate","onSortEnter","onSortLeave","onSort","drage","pointe","swap","$master","$sorting","resumeBatch","stacks","sort","ta","tb","orders","swaps","repos","sbox","suspendBatch","enroll","item","release","onItemRender","onItemResize","onItemDragStart","onItemDragEnd","onItemCollect","onItemDecollect","suppress","defer","bsize","actions","queue","act","arg","inv","Base","Shape","warn","drawer","isPage","draw","tail","erase","common","activity","Action","onGroupRender","onBlockResize","onTextRender","centerText","Initial","Pool","lane","Swimlane","headerHeight","textRotate","resize.sortable","onGroupResize","onBlockCollect","onBlockRender","headGroup","head","onPageScroll","currX","origX","bmat","Terminal","shapes"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Lodash polyfill\r\n */\r\n(function(){\r\n    var global = this;\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n}());\r\n\r\n/**\r\n * Graph core\r\n */\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    \r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    \r\n    var DOCUMENT = document;\r\n\r\n    var GLOBAL = this;\r\n\r\n    GLOBAL.Graph = GLOBAL.Graph || function(config) {};\r\n    \r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'PT. Kreasindo Cipta Teknologi';\r\n    \r\n    _.extend(Graph, {\r\n        config: {\r\n            base: 'easyflow/',\r\n            svg: {\r\n                version: '1.1'\r\n            },\r\n            xmlns: {\r\n                svg: 'http://www.w3.org/2000/svg',\r\n                xlink: 'http://www.w3.org/1999/xlink',\r\n                html: 'http://www.w3.org/1999/xhtml'\r\n            },\r\n            font: {\r\n                family: 'Segoe UI',\r\n                size: '12px',\r\n                line: 1\r\n            }\r\n        }\r\n    });\r\n\r\n    _.extend(Graph, {\r\n        cached: {},\r\n        setup: function(name, value) {\r\n            if (_.isPlainObject(name)) {\r\n                _.extend(Graph.config, name);\r\n            } else {\r\n                Graph.config[name] = value;\r\n            }\r\n        },\r\n        toString: function() {\r\n            return 'Graph SVG Library presented by Kreasindo Cipta Teknologi';\r\n        }\r\n    });\r\n\r\n    _.extend(Graph, {\r\n        isHTML: function(obj) {\r\n            return obj instanceof HTMLElement;\r\n        },\r\n        isSVG: function(obj) {\r\n            return obj instanceof SVGElement;\r\n        },\r\n        isElement: function(obj) {\r\n            return obj instanceof Graph.dom.Element;\r\n        }\r\n    });\r\n\r\n    _.extend(Graph, {\r\n        ns: function(namespace) {\r\n            var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n            if (cached.clazz) {\r\n                return cached.clazz;\r\n            }\r\n\r\n            var parts = _.split(namespace, '.'),\r\n                parent = GLOBAL,\r\n                len = parts.length,\r\n                current,\r\n                i;\r\n\r\n            for (i = 0; i < len; i++) {\r\n                current = parts[i];\r\n                parent[current] = parent[current] || {};\r\n                parent = parent[current];\r\n            }\r\n\r\n            if (_.isFunction(parent)) {\r\n                cached.clazz = parent;\r\n            }\r\n\r\n            return parent;\r\n        },\r\n\r\n        factory: function(clazz, args) {\r\n            args = [clazz].concat(args);\r\n            return new (Function.prototype.bind.apply(clazz, args));\r\n        },\r\n\r\n        expand: function(target, source, scope) {\r\n            var tproto = target.constructor.prototype,\r\n                sproto = source.constructor.prototype;\r\n\r\n            scope = _.defaultTo(source);\r\n\r\n            _.forOwn(sproto, function(value, key){\r\n                if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                    (function(key, value){\r\n                        tproto[key] = _.bind(value, scope);\r\n                    }(key, value));    \r\n                }\r\n            });\r\n        },\r\n        \r\n        mixin: function(target, source) {\r\n            this.extend(target, source, target);\r\n        },\r\n\r\n        lookup: function(/* tag, ...tokens */) {\r\n            var args = _.toArray(arguments),\r\n                tag = args.shift(),\r\n                token = _.join(args, '|'),\r\n                cached = Graph.cached[tag] = Graph.cached[tag] || {};\r\n\r\n            if (cached[token]) {\r\n                cached[token].credit = 100;\r\n            } else {\r\n                cached[token] = {\r\n                    credit: 100\r\n                }\r\n            }\r\n\r\n            _.debounce(function(t){\r\n                _.forOwn(cached, function(v, k){\r\n                    if (k != t) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                });\r\n            })(token);\r\n\r\n            return cached[token];\r\n        },\r\n\r\n        memoize: function(func) {\r\n            return function memo() {\r\n                var param = _.toArray(arguments),\r\n                    token = _.join(param, \"\\u2400\"),\r\n                    cache = memo.cache = memo.cache || {},\r\n                    saved = memo.saved = memo.saved || [];\r\n\r\n                if ( ! _.isUndefined(cache[token])) {\r\n                    for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                        if (saved[i] == token) {\r\n                            saved.push(saved.splice(i, 1)[0]);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return cache[token];\r\n                }\r\n\r\n                if (saved.length >= 1e3) {\r\n                    delete cache[saved.shift()];\r\n                }\r\n\r\n                saved.push(token);\r\n                cache[token] = func.apply(this, param);\r\n\r\n                return cache[token];\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Expand namespaces\r\n     */\r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.dom');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.svg');\r\n    Graph.ns('Graph.svg.fn');\r\n    Graph.ns('Graph.router');\r\n    Graph.ns('Graph.util');\r\n    Graph.ns('Graph.plugin');\r\n    Graph.ns('Graph.shape');\r\n    Graph.ns('Graph.shape.common');\r\n    Graph.ns('Graph.shape.activity');\r\n    \r\n    /**\r\n     * Math\r\n     */\r\n    _.extend(Graph, {\r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        /**\r\n         * Convert degree to radian\r\n         */\r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        /**\r\n         * Angle\r\n         */\r\n        angle: function(x1, y1, x2, y2) {\r\n            var dx = x1 - x2,\r\n                dy = y1 - y2;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        /**\r\n         * Angle at quadrant\r\n         */\r\n        theta: function(x1, y1, x2, y2) {\r\n            var y = -(y2 - y1),\r\n                x =   x2 - x1;\r\n\r\n            var r, d;\r\n\r\n            if (y.toFixed(10) == 0 && x.toFixed(10) == 0) {\r\n                r = 0;\r\n            } else {\r\n                r = Math.atan2(y, x);\r\n            }\r\n            \r\n            if (r < 0) {\r\n                r = 2 * Math.PI + r;\r\n            }\r\n\r\n            d = 180 * r / Math.PI;\r\n\r\n            // normalize\r\n            d = (d % 360) + (d < 0 ? 360 : 0);\r\n\r\n            return d;\r\n        },\r\n\r\n        /**\r\n         * Get hypotenuse (magnitude) of triangle\r\n         */\r\n        magnitude: function(a, b) {\r\n            return Math.sqrt(a * a + b * b);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n        \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Lang\r\n     */\r\n    _.extend(Graph, {\r\n        extend: function(clazz, props) {\r\n            if (_.isPlainObject(clazz)) {\r\n                props = clazz;\r\n                clazz = Graph.lang.Class;\r\n            }\r\n            return clazz.extend(props);\r\n        },\r\n        point: function(x, y) {\r\n            return new Graph.lang.Point(x, y);\r\n        },\r\n        bbox: function(bbox) {\r\n            return new Graph.lang.BBox(bbox);\r\n        },\r\n        path: function(command) {\r\n            return new Graph.lang.Path(command);\r\n        },\r\n        curve: function(command) {\r\n            return new Graph.lang.Curve(command);\r\n        },\r\n        matrix: function(a, b, c, d, e, f) {\r\n            return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n        }\r\n    });\r\n\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    _.extend(Graph, {\r\n        get: function(element) {\r\n            return Graph.$(element).data('vector');\r\n        },\r\n        \r\n        paper: function() {\r\n            var args = _.toArray(arguments);\r\n            return Graph.factory(Graph.svg.Paper, args);\r\n        },\r\n\r\n        page: function() {\r\n            var args = _.toArray(arguments);\r\n            return Graph.factory(Graph.shape.Page, args);\r\n        },\r\n        \r\n        find: function(selector, context) {\r\n            var elems = Graph.$(selector, context),\r\n                items = [];\r\n            \r\n            elems.each(function(i, dom){\r\n                var vector = Graph.$(dom).data('vector');\r\n                vector && items.push(vector);\r\n            });\r\n\r\n            return new Graph.collection.Vector(items);\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        seg2cmd: function(segments) {\r\n            return _.join(segments, ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        /**\r\n         * Convert path command into segments\r\n         */\r\n        cmd2seg: function(command) {\r\n            if ( ! command) {\r\n                return null;\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph', 'cmd2seg', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = segments;\r\n            return segments;\r\n        },\r\n        cmd2transform: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [],\r\n                matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        /**\r\n         * Convert catmull-rom to bezier segment\r\n         * https://advancedweb.hu/2014/10/28/plotting_charts_with_svg/\r\n         */\r\n        catmull2bezier: function(dots, z) {\r\n            var segments = [],\r\n                def = _.defaultTo;\r\n\r\n            for (var i = 0, ii = dots.length; ii - 2 * !z > i; i += 2) {\r\n                var p = [\r\n                    {x: def(dots[i - 2], 0), y: def(dots[i - 1], 0)},\r\n                    {x: def(dots[i], 0),     y: def(dots[i + 1], 0)},\r\n                    {x: def(dots[i + 2], 0), y: def(dots[i + 3], 0)},\r\n                    {x: def(dots[i + 4], 0), y: def(dots[i + 5], 0)}\r\n                ];  \r\n\r\n                if (z) {\r\n                    if (!i) {\r\n                        p[0] = {x: def(dots[ii - 2], 0), y: def(dots[ii - 1], 0)};\r\n                    } else if (ii - 4 == i) {\r\n                        p[3] = {x: def(dots[0], 0), y: def(dots[1], 0)};\r\n                    } else if (ii - 2 == i) {\r\n                        p[2] = {x: def(dots[0], 0), y: def(dots[1], 0)};\r\n                        p[3] = {x: def(dots[2], 0), y: def(dots[3], 0)};\r\n                    }\r\n                } else {\r\n                    if (ii - 4 == i) {\r\n                        p[3] = p[2];\r\n                    } else if (!i) {\r\n                        p[0] = {x: def(dots[i], 0), y: def(dots[i + 1], 0)};\r\n                    }\r\n                }\r\n\r\n                segments = [\r\n                    (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n                    (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n                    ( p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n                    ( p[1].y + 6 * p[2].y - p[3].y) / 6,\r\n                    p[2].x,\r\n                    p[2].y\r\n                ];\r\n            }\r\n\r\n            return segments;\r\n        },\r\n\r\n        /**\r\n         * Convert line to curve\r\n         */\r\n        line2curve: function(x1, y1, x2, y2) {\r\n            return [x1, y1, x2, y2, x2, y2];\r\n        },\r\n\r\n        /**\r\n         * Convert quadratic to curve\r\n         */\r\n        quad2curve: function(x1, y1, ax, ay, x2, y2) {\r\n            var _13 = 1 / 3, \r\n                _23 = 2 / 3;\r\n                \r\n            return [\r\n                _13 * x1 + _23 * ax,\r\n                _13 * y1 + _23 * ay,\r\n                _13 * x2 + _23 * ax,\r\n                _13 * y2 + _23 * ay,\r\n                x2,\r\n                y2\r\n            ];\r\n        },\r\n\r\n        arc2curve: function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n            var \r\n                _120 = Math.PI * 120 / 180,\r\n                rad = Math.PI / 180 * (+angle || 0),\r\n                res = [],\r\n                xy,\r\n                rotate = Graph.memoize(function (x, y, rad) {\r\n                    var X = x * Math.cos(rad) - y * Math.sin(rad),\r\n                        Y = x * Math.sin(rad) + y * Math.cos(rad);\r\n                    return {x: X, y: Y};\r\n                });\r\n\r\n            if ( ! recursive) {\r\n                xy = rotate(x1, y1, -rad);\r\n                x1 = xy.x;\r\n                y1 = xy.y;\r\n                xy = rotate(x2, y2, -rad);\r\n                x2 = xy.x;\r\n                y2 = xy.y;\r\n                var cos = Math.cos(Math.PI / 180 * angle),\r\n                    sin = Math.sin(Math.PI / 180 * angle),\r\n                    x = (x1 - x2) / 2,\r\n                    y = (y1 - y2) / 2;\r\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n                if (h > 1) {\r\n                    h = Math.sqrt(h);\r\n                    rx = h * rx;\r\n                    ry = h * ry;\r\n                }\r\n                var rx2 = rx * rx,\r\n                    ry2 = ry * ry,\r\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n                        Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\r\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n                    f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\r\n                    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n                f1 = x1 < cx ? Math.PI - f1 : f1;\r\n                f2 = x2 < cx ? Math.PI - f2 : f2;\r\n                f1 < 0 && (f1 = Math.PI * 2 + f1);\r\n                f2 < 0 && (f2 = Math.PI * 2 + f2);\r\n                if (sweep_flag && f1 > f2) {\r\n                    f1 = f1 - Math.PI * 2;\r\n                }\r\n                if (!sweep_flag && f2 > f1) {\r\n                    f2 = f2 - Math.PI * 2;\r\n                }\r\n            } else {\r\n                f1 = recursive[0];\r\n                f2 = recursive[1];\r\n                cx = recursive[2];\r\n                cy = recursive[3];\r\n            }\r\n            var df = f2 - f1;\r\n            if (Math.abs(df) > _120) {\r\n                var f2old = f2,\r\n                    x2old = x2,\r\n                    y2old = y2;\r\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n                x2 = cx + rx * Math.cos(f2);\r\n                y2 = cy + ry * Math.sin(f2);\r\n                res = Graph.arc2curve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n            }\r\n            df = f2 - f1;\r\n            var c1 = Math.cos(f1),\r\n                s1 = Math.sin(f1),\r\n                c2 = Math.cos(f2),\r\n                s2 = Math.sin(f2),\r\n                t = Math.tan(df / 4),\r\n                hx = 4 / 3 * rx * t,\r\n                hy = 4 / 3 * ry * t,\r\n                m1 = [x1, y1],\r\n                m2 = [x1 + hx * s1, y1 - hy * c1],\r\n                m3 = [x2 + hx * s2, y2 - hy * c2],\r\n                m4 = [x2, y2];\r\n\r\n            m2[0] = 2 * m1[0] - m2[0];\r\n            m2[1] = 2 * m1[1] - m2[1];\r\n\r\n            if (recursive) {\r\n                return [m2, m3, m4].concat(res);\r\n            } else {\r\n                res = [m2, m3, m4].concat(res).join().split(\",\");\r\n                var result = [];\r\n                for (var i = 0, ii = res.length; i < ii; i++) {\r\n                    result[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n\r\n        curvebox: Graph.memoize(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n            var \r\n                a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\r\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\r\n                c = p1x - c1x,\r\n                t1 = (-b + Math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                t2 = (-b - Math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                y = [p1y, p2y],\r\n                x = [p1x, p2x],\r\n                dot;\r\n            \r\n            Math.abs(t1) > \"1e12\" && (t1 = .5);\r\n            Math.abs(t2) > \"1e12\" && (t2 = .5);\r\n\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = finddot(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = finddot(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n\r\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\r\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\r\n            c = p1y - c1y;\r\n            t1 = (-b + Math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            t2 = (-b - Math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            \r\n            Math.abs(t1) > \"1e12\" && (t1 = .5);\r\n            Math.abs(t2) > \"1e12\" && (t2 = .5);\r\n\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = finddot(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = finddot(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            \r\n            return {\r\n                min: {x: _.min(x), y: _.min(y)},\r\n                max: {x: _.max(x), y: _.max(y)}\r\n            };\r\n\r\n        })\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n    function finddot(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n        var t1 = 1 - t;\r\n        return {\r\n            x: Math.pow(t1, 3) * p1x + Math.pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + Math.pow(t, 3) * p2x,\r\n            y: Math.pow(t1, 3) * p1y + Math.pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + Math.pow(t, 3) * p2y\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var initializing = false;\r\n    var tokenizer = /xyz/.test(function(){ xyz; }) ? /\\$super/ : /.*/;\r\n    var Class = Graph.lang.Class = function() {};\r\n    \r\n    Class.extend = function extend(config) {\r\n        var $super, proto, name, value, defs;\r\n        \r\n        $super = this.prototype;\r\n        defs = {};\r\n        \r\n        initializing = true;\r\n        proto = new this();\r\n        initializing = false;\r\n        \r\n\r\n        for (var name in config) {\r\n            value = config[name];\r\n            if ( ! _.isFunction(value)) {\r\n                proto[name] = defs[name] = value;\r\n            } else {\r\n                proto[name] = _.isFunction($super[name]) && tokenizer.test(value)\r\n                    ? (function(name, value){\r\n                        return function() {\r\n                            var tmp, ret;\r\n                            tmp = this.$super;\r\n                            this.$super = $super[name];\r\n                            ret = value.apply(this, _.toArray(arguments));\r\n                            this.$super = tmp;\r\n                        \r\n                            return ret;\r\n                        };\r\n                    }(name, value)) : value;\r\n            }\r\n        }\r\n\r\n        var clazz, init;\r\n\r\n        if ( ! _.isUndefined(proto.constructor)) {\r\n            init = proto.constructor;\r\n            delete proto.constructor;\r\n        }\r\n\r\n        clazz = function () {\r\n            var me = this,\r\n                ct = me.constructor;\r\n            \r\n            me.listeners = {};\r\n\r\n            if (me.superclass.defs) {\r\n                _.forOwn(me.superclass.defs, function(v, k){\r\n                    me[k] = _.cloneDeep(v);\r\n                });\r\n            }\r\n\r\n            _.forOwn(ct.defs, function(v, k){\r\n                me[k] = _.cloneDeep(v);\r\n            });\r\n            \r\n            if ( ! initializing) {\r\n                init && init.apply(me, _.toArray(arguments));\r\n            }\r\n        }\r\n\r\n        // statics\r\n        clazz.extend = extend;\r\n        clazz.defs = defs;\r\n        clazz.version = '1.0.0';\r\n        clazz.author = 'londomloto';\r\n\r\n        // instance\r\n        clazz.prototype = proto;\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.prototype.superclass = $super.constructor;\r\n\r\n        /**\r\n         * Register event handler\r\n         */\r\n        clazz.prototype.on = function(name, handler) {\r\n            var me = this, data;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.on(k, v);\r\n                });\r\n                return me;\r\n            }\r\n\r\n            var part = _.split(name, '.'),\r\n                fire = part.shift();\r\n\r\n            me.listeners[fire] = me.listeners[fire] || [];\r\n            \r\n            data = {\r\n                name: name,\r\n                orig: handler,\r\n                func: _.bind(handler, this)\r\n            };\r\n\r\n            me.listeners[fire].push(data);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Unregister event handler\r\n         */\r\n        clazz.prototype.off = function(name, handler) {\r\n            var part, fire, lsnr, rgex;\r\n\r\n            part = _.split(name, '.');\r\n            rgex = new RegExp(_.escapeRegExp(name), 'gi');\r\n            fire = part.shift();\r\n            lsnr = fire ? (this.listeners[fire] || []) : [];\r\n\r\n            if (lsnr.length) {\r\n                for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                    if (handler) {\r\n                        if (rgex.test(lsnr[i].name) && lsnr[i].orig === handler) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    } else {\r\n                        if (rgex.test(lsnr[i].name)) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var me = this;\r\n                for (fire in me.listeners) {\r\n                    (function(lsnr){\r\n                        for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                            if (handler) {\r\n                                if (rgex.test(lsnr[i].name) && lsnr[i].orig === handler) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            } else {\r\n                                if (rgex.test(lsnr[i].name)) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }(me.listeners[fire]))\r\n                }\r\n            }\r\n\r\n            rgex = null;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Execute event handler\r\n         */\r\n        clazz.prototype.fire = function(/* name, param1, param2, ...paramN */) {\r\n            var args = _.toArray(arguments),\r\n                name = args.shift(),\r\n                part = _.split(name, '.'),\r\n                fire = part.shift(),\r\n                lsnr = this.listeners[fire] || [],\r\n                rgex = new RegExp(_.escapeRegExp(name), 'gi');\r\n            \r\n            if (lsnr.length) {\r\n                _.forEach(lsnr, function(data){\r\n                    if (fire != name) {\r\n                        if (rgex.test(data.name)){\r\n                            data.func.apply(data.func, args);    \r\n                        }\r\n                    } else {\r\n                        data.func.apply(data.func, args);\r\n                    }\r\n                });\r\n            }\r\n\r\n            rgex = null;\r\n        };\r\n\r\n        /**\r\n         * Get default properties (attached on class)\r\n         */\r\n        clazz.prototype.defprop = function(prop) {\r\n            var defs = this.constructor.defs || {};\r\n            return defs[prop];\r\n        };\r\n\r\n        return clazz;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = Graph.extend({\r\n\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0    \r\n        },\r\n\r\n        constructor: function(a, b, c, d, e, f) {\r\n            this.props.a = _.defaultTo(a, 1);\r\n            this.props.b = _.defaultTo(b, 0);\r\n            this.props.c = _.defaultTo(c, 0);\r\n            this.props.d = _.defaultTo(d, 1);\r\n            this.props.e = _.defaultTo(e, 0);\r\n            this.props.f = _.defaultTo(f, 0);\r\n        },\r\n\r\n        x: function(x, y) {\r\n            return x * this.props.a + y * this.props.c + this.props.e;\r\n        },\r\n\r\n        y: function(x, y) {\r\n            return x * this.props.b + y * this.props.d + this.props.f;\r\n        },\r\n\r\n        get: function(chr) {\r\n            return +this.props[chr].toFixed(4);\r\n        },\r\n\r\n        multiply: function(a, b, c, d, e, f) {\r\n            var \r\n                result = [[], [], []],\r\n                source = [\r\n                    [this.props.a, this.props.c, this.props.e], \r\n                    [this.props.b, this.props.d, this.props.f], \r\n                    [0, 0, 1]\r\n                ],\r\n                matrix = [\r\n                    [a, c, e], \r\n                    [b, d, f], \r\n                    [0, 0, 1]\r\n                ];\r\n\r\n            var x, y, z, tmp;\r\n\r\n            if (a instanceof Matrix) {\r\n                matrix = [\r\n                    [a.props.a, a.props.c, a.props.e], \r\n                    [a.props.b, a.props.d, a.props.f], \r\n                    [0, 0, 1]\r\n                ];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    tmp = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        tmp += source[x][z] * matrix[z][y];\r\n                    }\r\n                    result[x][y] = tmp;\r\n                }\r\n            }\r\n\r\n            this.props.a = result[0][0];\r\n            this.props.b = result[1][0];\r\n            this.props.c = result[0][1];\r\n            this.props.d = result[1][1];\r\n            this.props.e = result[0][2];\r\n            this.props.f = result[1][2];\r\n\r\n            return this;\r\n        },\r\n\r\n        invert: function(clone) {\r\n            var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n            var a, b, c, d, e, f;\r\n\r\n            clone = _.defaultTo(clone, false);\r\n\r\n            a =  this.props.d / x;\r\n            b = -this.props.b / x;\r\n            c = -this.props.c / x;\r\n            d =  this.props.a / x;\r\n            e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n            f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n            if (clone) {\r\n                return new Graph.matrix(a, b, c, d, e, f);\r\n            } else {\r\n                this.props.a = a;\r\n                this.props.b = b;\r\n                this.props.c = c;\r\n                this.props.d = d;\r\n                this.props.e = e;\r\n                this.props.f = f;    \r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        translate: function(x, y) {\r\n            x = _.defaultTo(x, 0);\r\n            y = _.defaultTo(y, 0);\r\n            this.multiply(1, 0, 0, 1, x, y);\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function(angle, cx, cy) {\r\n            angle = Graph.rad(angle);\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n\r\n            var cos = +Math.cos(angle).toFixed(9),\r\n                sin = +Math.sin(angle).toFixed(9);\r\n\r\n            this.multiply(cos, sin, -sin, cos, cx, cy);\r\n            this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n            return this;\r\n        },\r\n\r\n        scale: function(sx, sy, cx, cy) {\r\n            y = _.defaultTo(sy, sx);\r\n\r\n            if (cx || cy) {\r\n                cx = _.defaultTo(cx, 0);\r\n                cy = _.defaultTo(cy, 0);\r\n            }\r\n\r\n            (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n            this.multiply(sx, 0, 0, sy, 0, 0);\r\n            (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n            \r\n            return this;\r\n        },\r\n        \r\n        determinant: function() {\r\n            return this.props.a * this.props.d - this.props.b * this.props.c;\r\n        },\r\n\r\n        delta: function(x, y) {\r\n            return {\r\n                x: x * this.props.a + y * this.props.c + 0,\r\n                y: x * this.props.b + y * this.props.d + 0\r\n            };\r\n        },\r\n\r\n        data: function() {\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                radSkewX = Graph.rad(skewX),\r\n                cosSkewX = Math.cos(radSkewX),\r\n                sinSkewX = Math.sin(radSkewX),\r\n                scaleX = Graph.magnitude(this.props.a, this.props.b),\r\n                scaleY = Graph.magnitude(this.props.c, this.props.d),\r\n                radian = Graph.rad(skewX);\r\n\r\n            if (this.determinant() < 0) {\r\n                scaleX = -scaleX;\r\n            }\r\n\r\n            return {\r\n                x: this.props.e,\r\n                y: this.props.f,\r\n                dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n                dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n                skewX: -skewX,\r\n                skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n                scaleX: scaleX,\r\n                scaleY: scaleY,\r\n                rotate: skewX,\r\n                rad: radian,\r\n                sin: Math.sin(radian),\r\n                cos: Math.cos(radian),\r\n                a: this.props.a,\r\n                b: this.props.b,\r\n                c: this.props.c,\r\n                d: this.props.d,\r\n                e: this.props.e,\r\n                f: this.props.f\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Convert to `matrix(...)` toString\r\n         */\r\n        toString: function() {\r\n            var array = [\r\n                this.get('a'),\r\n                this.get('b'),\r\n                this.get('c'),\r\n                this.get('d'),\r\n                this.get('e'),\r\n                this.get('f')\r\n            ];\r\n\r\n            return 'matrix(' + _.join(array, ',') + ')';\r\n        },\r\n\r\n        toFilter: function() {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(\" + \r\n               \"M11=\" + this.get('a') + \", \" + \r\n               \"M12=\" + this.get('c') + \", \" + \r\n               \"M21=\" + this.get('b') + \", \" + \r\n               \"M22=\" + this.get('d') + \", \" + \r\n               \"Dx=\"  + this.get('e') + \", \" + \r\n               \"Dy=\"  + this.get('f') + \", \" + \r\n               \"sizingmethod='auto expand'\"  + \r\n            \")\";\r\n        },\r\n\r\n        toArray: function() {\r\n            return [\r\n                [this.get('a'), this.get('c'), this.get('e')], \r\n                [this.get('b'), this.get('d'), this.get('f')], \r\n                [0, 0, 1]\r\n            ];\r\n        },\r\n\r\n        clone: function() {\r\n            return new Matrix(\r\n                this.props.a, \r\n                this.props.b, \r\n                this.props.c, \r\n                this.props.d, \r\n                this.props.e, \r\n                this.props.f\r\n            );\r\n        }\r\n\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var Point = Graph.lang.Point = Graph.extend({\r\n\r\n        props: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n\r\n        constructor: function(x, y) {\r\n            if (_.isString(x)) {\r\n                var c = _.split(_.trim(x), ',');\r\n                x = _.toNumber(c[0]);\r\n                y = _.toNumber(c[1]);\r\n            }\r\n\r\n            this.props.x = x;\r\n            this.props.y = y;\r\n        },\r\n\r\n        distance: function(b) {\r\n            var dx = this.props.x - b.props.x,\r\n                dy = this.props.y - b.props.y;\r\n\r\n            return Math.sqrt(Math.pow(dy, 2) + Math.pow(dx, 2));\r\n        },\r\n\r\n        /**\r\n         * Manhattan (taxi-cab) distance\r\n         */\r\n        manhattan: function(p) {\r\n            return Math.abs(p.props.x - this.props.x) + Math.abs(p.props.y - this.props.y);\r\n        },\r\n\r\n        /**\r\n         * Angle to another point\r\n         */\r\n        angle: function(b) {\r\n            return Graph.angle(this.props.x, this.props.y, b.props.x, b.props.y);\r\n        },\r\n        \r\n        /**\r\n         * Angle created by two another points\r\n         */\r\n        triangle: function(b, c) {\r\n            return this.angle(c) - b.angle(c);\r\n        },\r\n\r\n        theta: function(p) {\r\n            return Graph.theta(this.props.x, this.props.y, p.props.x, p.props.y);\r\n        },\r\n\r\n        difference: function(p) {\r\n            return new Point(this.props.x - p.props.x, this.props.y - p.props.y);\r\n        },\r\n\r\n        /**\r\n         * Snap to grid\r\n         */\r\n        snap: function(x, y) {\r\n            y = _.defaultTo(y, x);\r\n\r\n            this.props.x = snap(this.props.x, x);\r\n            this.props.y = snap(this.props.y, y);\r\n\r\n            return this;\r\n        },\r\n\r\n        expand: function(dx, dy) {\r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n\r\n            return this;\r\n        },\r\n\r\n        equals: function(p) {\r\n            return this.props.x === p.props.x && this.props.y === p.props.y;\r\n        },\r\n\r\n        stringify: function(sep) {\r\n            sep = _.defaultTo(sep, ',');\r\n            return this.props.x + sep + this.props.y;\r\n        },\r\n\r\n        toString: function() {\r\n            return this.stringify();\r\n        },\r\n\r\n        serialize: function() {\r\n            return {\r\n                x: this.props.x, \r\n                y: this.props.y\r\n            };\r\n        },\r\n\r\n        clone: function(){\r\n            return new Point(this.props.x, this.props.y);\r\n        }\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n    function snap(value, size) {\r\n        return size * Math.round(value / size);\r\n    }\r\n    \r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': 'none',\r\n            'style': '',\r\n            'class': 'graph-elem graph-elem-path'\r\n        },\r\n\r\n        constructor: function(d) {\r\n            this.$super('path', {\r\n                d: Graph.path(d).absolute() + ''\r\n            });\r\n\r\n            this.cached = {\r\n                segments: null\r\n            };\r\n        },\r\n        \r\n        pathinfo: function() {\r\n            return new Graph.lang.Path(this.attrs.d);\r\n        },\r\n\r\n        segments: function() {\r\n            if (this.dirty || _.isNull(this.cached.segments)) {\r\n                this.cached.segments = this.pathinfo().segments;\r\n            }\r\n            return this.cached.segments;\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.pathinfo().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.pathinfo().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.pathinfo().length();\r\n        },\r\n        \r\n        startAt: function(x, y) {\r\n            var segments = this.segments(), command;\r\n            segments[0][1] = x;\r\n            segments[0][2] = y;\r\n            command = Graph.seg2cmd(segments);\r\n            \r\n            this.attr('d', command);\r\n            this.dirty = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        stopAt: function(x, y) {\r\n            var segments = this.segments(),\r\n                count = segments.length,\r\n                max = count - 1;\r\n\r\n            var command;\r\n\r\n            if (count === 1) {\r\n                segments.push(['L', x, y]);\r\n            } else {\r\n                if (segments[max][0] == 'Z') {\r\n                    segments[max - 1][1] = x;\r\n                    segments[max - 1][2] = y;\r\n                } else {\r\n                    segments[max][1] = x;\r\n                    segments[max][2] = y;\r\n                }\r\n            }\r\n\r\n            this.attr('d', Graph.seg2cmd(segments));\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y) {\r\n            var segments = this.segments(), command;\r\n            segments.push(['L', x, y]);\r\n            command = Graph.seg2cmd(segments);\r\n            \r\n            this.attr('d', command);\r\n            this.dirty = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        close: function() {\r\n            var segments = this.segments,\r\n                max = segments.length - 1;\r\n\r\n            var command;\r\n\r\n            if (segments[max][0] != 'Z') {\r\n                segments.push(['Z']);\r\n            }\r\n\r\n            this.attr('d', Graph.seg2cmd(segments));\r\n            return this;\r\n        },\r\n\r\n        expandBy: function(dx, dy) {\r\n            var segments = this.segments(),\r\n                count = segments.length,\r\n                max = count - 1;\r\n\r\n            var command, x, y;\r\n\r\n            if (count === 1) {\r\n                x = segments[0][1] + dx;\r\n                y = segments[0][2] + dy;\r\n                segments.push(['L', x, y]);\r\n            } else {\r\n                if (segments[max][0] == 'Z') {\r\n                    segments[max - 1][1] += dx;\r\n                    segments[max - 1][2] += dy;\r\n                } else {\r\n                    segments[max][1] += dx;\r\n                    segments[max][2] += dy;\r\n                }\r\n            }\r\n\r\n            command = Graph.seg2cmd(segments);\r\n            this.attr('d', command);\r\n            this.dirty = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix.clone(),\r\n                ro = this.matrix.data().rotate,\r\n                rd = Graph.rad(ro),\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.pathinfo(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            \r\n            this.attr('d', _.toString(pa));\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).apply(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var BBox = Graph.lang.BBox = Graph.extend({\r\n        \r\n        props: {\r\n            // origin\r\n            x: 0,\r\n            y: 0,\r\n\r\n            // corner\r\n            x2: 0,\r\n            y2: 0,\r\n\r\n            // dimension\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        constructor: function(bbox) {\r\n            this.props = _.cloneDeep(bbox);\r\n        },\r\n        \r\n        data: function(name, value) {\r\n            if (_.isUndefined(name) && _.isUndefined(value)) {\r\n                return this.props;\r\n            }\r\n\r\n            if (_.isUndefined(value)) {\r\n                return this.props[name];\r\n            }\r\n\r\n            return null;\r\n        },\r\n        \r\n        x: function() {\r\n            return this.props.x;\r\n        },\r\n        \r\n        y: function() {\r\n            return this.props.y;\r\n        },\r\n        \r\n        origin: function() {\r\n            return new Graph.lang.Point(this.props.x, this.props.y);\r\n        },\r\n\r\n        center: function() {\r\n            return new Graph.lang.Point(\r\n                this.props.x + this.props.width / 2,\r\n                this.props.y + this.props.height / 2\r\n            );\r\n        },\r\n\r\n        corner: function() {\r\n            return new Graph.lang.Point(\r\n                this.props.x + this.props.width, \r\n                this.props.y + this.props.height\r\n            );\r\n        },\r\n        \r\n        width: function() {\r\n            return this.props.width;\r\n        },\r\n        \r\n        height: function() {\r\n            return this.props.height;\r\n        },\r\n        \r\n        clone: function() {\r\n            return new BBox(_.cloneDeep(this.props));\r\n        },\r\n\r\n        contain: function(obj) {\r\n            var contain = true,\r\n                bbox = this.props,\r\n                dots = [];\r\n\r\n            var vbox, papa, mat, dot;\r\n\r\n            if (obj instanceof Graph.lang.Point) {\r\n                dots = [\r\n                    [obj.props.x, obj.props.y]\r\n                ];\r\n            } else if (obj instanceof Graph.svg.Vector) {\r\n                dots = obj.dots(true);\r\n            } else if (obj instanceof Graph.lang.BBox) {\r\n                dots = [\r\n                    [obj.props.x, obj.props.y],\r\n                    [obj.props.x2, obj.props.y2]\r\n                ];\r\n            } else {\r\n                var args = _.toArray(arguments);\r\n                if (args.length === 2) {\r\n                    dots = [args];\r\n                }\r\n            }\r\n\r\n            if (dots.length) {\r\n                var l = dots.length;\r\n                while(l--) {\r\n                    dot = dots[l];\r\n                    contain = dot[0] >= bbox.x  && \r\n                              dot[0] <= bbox.x2 && \r\n                              dot[1] >= bbox.y  && \r\n                              dot[1] <= bbox.y2;\r\n                    if ( ! contain) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return contain;\r\n        },\r\n\r\n        expand: function(dx, dy, dw, dh) {\r\n            this.props.x += _.defaultTo(dx, 0);\r\n            this.props.y += _.defaultTo(dy, 0);\r\n            this.props.width  += _.defaultTo(dw, 0);\r\n            this.props.height += _.defaultTo(dh, 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        intersect: function(tbox) {\r\n            var me = this,\r\n                bbox = me.props,\r\n                func = me.contain;\r\n\r\n            return tbox.contain(bbox.x, bbox.y)\r\n                || tbox.contain(bbox.x2, bbox.y)\r\n                || tbox.contain(bbox.x, bbox.y2)\r\n                || tbox.contain(bbox.x2, bbox.y2)\r\n                || me.contain(tbox.x, tbox.y)\r\n                || me.contain(tbox.x2, tbox.y)\r\n                || me.contain(tbox.x, tbox.y2)\r\n                || me.contain(tbox.x2, tbox.y2)\r\n                || (bbox.x < tbox.x2 && bbox.x > tbox.x || tbox.x < bbox.x2 && tbox.x > bbox.x)\r\n                && (bbox.y < tbox.y2 && bbox.y > tbox.y || tbox.y < bbox.y2 && tbox.y > bbox.y);\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    var LG_N = 12,\r\n\r\n        // abscissae\r\n        LG_T = [\r\n           -0.1252,\r\n            0.1252,\r\n           -0.3678,\r\n            0.3678,\r\n           -0.5873,\r\n            0.5873,\r\n           -0.7699,\r\n            0.7699,\r\n           -0.9041,\r\n            0.9041,\r\n           -0.9816,\r\n            0.9816\r\n        ],\r\n        // weights\r\n        LG_C = [\r\n            0.2491,\r\n            0.2491,\r\n            0.2335,\r\n            0.2335,\r\n            0.2032,\r\n            0.2032,\r\n            0.1601,\r\n            0.1601,\r\n            0.1069,\r\n            0.1069,\r\n            0.0472,\r\n            0.0472\r\n        ];\r\n\r\n    Graph.lang.Curve = Graph.extend({\r\n        segments: [],\r\n        \r\n        constructor: function(command) {\r\n            this.segments = _.isString(command) ? Graph.cmd2seg(command) : _.cloneDeep(command);\r\n            \r\n            if (this.segments[0][0] != 'M') {\r\n                this.segments.unshift(\r\n                    ['M', this.segments[0][1], this.segments[0][2]]\r\n                );\r\n            }\r\n\r\n            if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n                var x = this.segments[0][1],\r\n                    y = this.segments[0][2];\r\n                this.segments.push(['C', x, y, x, y, x, y]);\r\n            }\r\n        },\r\n        \r\n        length: function(t) {\r\n            \r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2, \r\n                s = this.segments,\r\n                x1 = s[0][1],\r\n                y1 = s[0][2],\r\n                x2 = s[1][1],\r\n                y2 = s[1][2],\r\n                x3 = s[1][3],\r\n                y3 = s[1][4],\r\n                x4 = s[1][5],\r\n                y4 = s[1][6],\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LG_N; i++) {\r\n                var ct = h * LG_T[i] + h,\r\n\r\n                    xb = poly(ct, x1, x2, x3, x4),\r\n                    yb = poly(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LG_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        t: function(length) {\r\n            if (length < 0 || this.length() < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = this.length(t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = this.length(t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAt: function(length, t) {\r\n            var arr = this.segments,\r\n                p1x = arr[0][1],\r\n                p1y = arr[0][2],\r\n                c1x = arr[1][1],\r\n                c1y = arr[1][2],\r\n                c2x = arr[1][3],\r\n                c2y = arr[1][4],\r\n                p2x = arr[1][5],\r\n                p2y = arr[1][6];\r\n\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            if (isNaN(x) || isNaN(y)) {\r\n                return null;\r\n            }\r\n\r\n            var point = Graph.point(x, y);\r\n            \r\n            _.extend(point, {\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end: {x: cx, y: cy},\r\n                alpha: alpha\r\n            });\r\n\r\n            return point;\r\n        }\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n            \r\n    function poly(t, n1, n2, n3, n4) {\r\n        var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n            t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n        return t * t2 - 3 * n1 + 3 * n2;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var E = Graph.dom.Element = function(elem) {\r\n        this.elem = elem instanceof jQuery ? elem : $(elem);\r\n    };\r\n\r\n    _.extend(E.prototype, {\r\n        node: function() {\r\n            return this.elem[0];\r\n        },\r\n        attr: function(name, value) {\r\n            var me = this, node = this.elem[0];\r\n\r\n            if (Graph.isHTML(node)) {\r\n                this.elem.attr(name, value);\r\n            } else if (Graph.isSVG(node)) {\r\n\r\n                if (_.isPlainObject(name)) {\r\n                    _.forOwn(name, function(v, k){\r\n                        me.attr(k, v);\r\n                    });\r\n                    return this;\r\n                }\r\n\r\n                if (name.substring(0, 6) == 'xlink:') {\r\n                    node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n                } else {\r\n                    node.setAttribute(name, _.toString(value));\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        width: function(value) {\r\n            if (_.isUndefined(value)) {\r\n                return this.elem.width();\r\n            }\r\n            this.elem.width(value);\r\n            return this;\r\n        },\r\n        height: function(value) {\r\n            if (_.isUndefined(value)) {\r\n                return this.elem.height();\r\n            }\r\n            this.elem.height(value);\r\n            return this;\r\n        },\r\n        show: function() {\r\n            this.elem.show();\r\n            return this;\r\n        },\r\n        hide: function() {\r\n            this.elem.hide();\r\n            return this;\r\n        },\r\n        offset: function() {\r\n            return this.elem.offset();\r\n        },\r\n        position: function() {\r\n            return this.elem.position();\r\n        },\r\n        addClass: function(classes) {\r\n            var node = this.elem[0];\r\n            if (Graph.isHTML(node)) {\r\n                this.elem.addClass(classes);\r\n            }\r\n            return this;\r\n        },\r\n        removeClass: function(classes) {\r\n            var node = this.elem[0];\r\n            if (Graph.isHTML(node)) {\r\n                this.elem.removeClass(classes);\r\n            }\r\n            return this;\r\n        },\r\n        hasClass: function(clazz) {\r\n            var node = this.elem[0];\r\n\r\n            if (Graph.isHTML(node)) {\r\n                return this.elem.hasClass(clazz); \r\n            } else if (Graph.isSVG(node)) {\r\n                var classes = _.split(node.className.baseVal, ' ');\r\n                return classes.indexOf(clazz) > -1;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        append: function(elem) {\r\n            if (Graph.isElement(elem)) {\r\n                this.elem.append(elem.elem);\r\n            } else {\r\n                this.elem.append(elem);\r\n            }\r\n            \r\n            return this;\r\n        },\r\n        prepend: function(elem) {\r\n            if (Graph.isElement(elem)) {\r\n                this.elem.prepend(elem.elem);\r\n            } else {\r\n                this.elem.prepend(elem);\r\n            }\r\n            return this;\r\n        },\r\n        appendTo: function(elem) {\r\n            if (Graph.isElement(elem)) {\r\n                this.elem.appendTo(elem.elem);\r\n            } else {\r\n                this.elem.appendTo(elem);\r\n            }\r\n            return this;\r\n        },\r\n        on: function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n            this.elem.on.call(this.elem, types, selector, data, fn, one);\r\n            return this;\r\n        },\r\n        off: function(types, selector, fn) {\r\n            this.elem.off.call(this.elem, types, selector, fn);\r\n            return this;\r\n        }\r\n    });\r\n    \r\n    var borrows = [\r\n        'css', \r\n        'prop', 'data', \r\n        'each', 'hover', 'empty', 'remove',\r\n        'trigger', 'scrollTop', 'scrollLeft', 'html',\r\n        'text'\r\n    ];\r\n\r\n    _.forEach(borrows, function(method) {\r\n        (function(method){\r\n            E.prototype[method] = function() {\r\n                var args = _.toArray(arguments), value;\r\n                value = this.elem[method].apply(this.elem, args);\r\n                return value instanceof jQuery ? this : value;\r\n            };\r\n        }(method));\r\n    });\r\n\r\n    /// SHORTHAND ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        return new Graph.dom.Element($(selector, context));\r\n    };\r\n\r\n    Graph.$svg = function(type) {\r\n        var node = document.createElementNS(Graph.config.xmlns.svg, type);\r\n        return new Graph.dom.Element($(node));\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        return document;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Vector = Graph.extend({\r\n\r\n        items: [],\r\n\r\n        constructor: function(items) {\r\n            this.items = items || [];\r\n        },\r\n\r\n        has: function(vector) {\r\n            return _.indexOf(this.items, vector) > -1;\r\n        },\r\n        \r\n        not: function(vector) {\r\n            var items = _.filter(this.items, function(o) {\r\n                return o !== vector;\r\n            });\r\n            return new Collection(items);\r\n        },\r\n        \r\n        length: function() {\r\n            return this.items.length;\r\n        },\r\n\r\n        indexOf: function(vector) {\r\n            return _.indexOf(this.items, vector);\r\n        },\r\n        \r\n        push: function(vector) {\r\n            this.items.push(vector);\r\n            this.fire('push', vector, this);\r\n            return this;\r\n        },\r\n\r\n        pop: function() {\r\n            this.items.pop();\r\n        },\r\n\r\n        shift: function() {\r\n            this.items.shift();\r\n        },\r\n\r\n        unshift: function(vector) {\r\n            this.items.unshift(vector);\r\n            this.fire('unshift', vector, this);\r\n            return this;\r\n        },\r\n\r\n        pull: function(vector) {\r\n            _.pull(this.items, vector);\r\n            this.fire('pull', vector, this);\r\n            return this;\r\n        },\r\n\r\n        each: function(handler) {\r\n            _.forEach(this.items, function(vector){\r\n                handler.call(vector, vector);\r\n            });\r\n        },\r\n        \r\n        pathinfo: function() {\r\n            var bbox = this.bbox(), path;\r\n            return new Graph.lang.Path([]);\r\n        },\r\n        \r\n        bbox: function() {\r\n            var x = [], y = [], x2 = [], y2 = [];\r\n            var box;\r\n\r\n            for (var i = this.items.length - 1; i >= 0; i--) {\r\n                box = this.items[i].bbox(false, false).data();\r\n\r\n                x.push(box.x);\r\n                y.push(box.y);\r\n                x2.push(box.x + box.width);\r\n                y2.push(box.y + box.height);\r\n            }   \r\n\r\n            x  = _.min(x);\r\n            y  = _.min(y);\r\n            x2 = _.max(x2);\r\n            y2 = _.max(y2);\r\n\r\n            return new Graph.lang.BBox({\r\n                x: x,\r\n                y: y,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: x2 - x,\r\n                height: y2 - y\r\n            });\r\n        },\r\n\r\n        toArray: function() {\r\n            return this.items;\r\n        }\r\n    });\r\n\r\n    _.forOwn(Graph.svg.Vector.prototype, function(value, name){\r\n        (function(name, value){\r\n            if (_.isUndefined(Collection.prototype[name]) && _.isFunction(value)) {\r\n                Collection.prototype[name] = function() {\r\n                    var args = _.toArray(arguments);\r\n                    \r\n                    this.each(function(vector){\r\n                        vector[name].apply(vector, args);\r\n                    });\r\n                    \r\n                    return this;\r\n                };\r\n            }\r\n        }(name, value));\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Paper = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            'class': 'graph-paper'\r\n        },\r\n\r\n        props: {\r\n            text: '',\r\n            angle: 0,\r\n            collectable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false\r\n        },\r\n\r\n        canvas: null,\r\n        hinter: null,\r\n        definer: null,\r\n        collector: null,\r\n        container: null,\r\n        scroller: null,\r\n        pointer: null,\r\n        linker: null,\r\n\r\n        constructor: function(width, height) {\r\n            var me = this;\r\n\r\n            me.$super('svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version,\r\n                'width': _.defaultTo(width, 200),\r\n                'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.collector = new Graph.util.Collector();\r\n            me.definer = new Graph.util.Definer();\r\n            me.linker = new Graph.util.Linker();\r\n            me.router = new Graph.util.Router();\r\n            me.spotlight = new Graph.util.Spotlight();\r\n            me.hinter = null; // new Graph.util.Hinter();\r\n\r\n            me.definer.defineArrowMarker('marker-arrow');\r\n\r\n            me.elem.on({\r\n                click: function(e) {\r\n                    me.fire('click', e, me);\r\n                }\r\n            });\r\n        },\r\n        \r\n        shape: function(name, config) {\r\n            var clazz, shape;\r\n\r\n            clazz = _.capitalize(name);\r\n            shape = new Graph.shape[clazz](config);\r\n            shape.render(this.elem);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(target) {\r\n            var me = this;\r\n\r\n            if (me.rendered) {\r\n                return;\r\n            }\r\n\r\n            target = Graph.$(target);\r\n            target.append(me.elem);\r\n            \r\n            me.container = target;\r\n\r\n            me.definer.render(me);\r\n            me.collector.render(me);\r\n            me.linker.render(me);\r\n            me.router.render(me);\r\n            me.spotlight.render(me);\r\n            // me.hinter.render(me);\r\n\r\n            me.attr({\r\n                width: target.width(),\r\n                height: target.height()\r\n            });\r\n\r\n            me.rendered = true;\r\n            me.fire('render');\r\n\r\n            me.cascade(function(c){\r\n                if (c !== me && ! c.rendered) {\r\n                    c.canvas = me;\r\n                    c.fire('render', c);\r\n                }\r\n            });\r\n        },\r\n\r\n        autoScroll: function(target) {\r\n            this.scroller = Graph.$(target);\r\n        }\r\n\r\n    });\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line',\r\n        connector: 'Connector'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Graph.svg.Paper.prototype[method] = function() {\r\n                var args, clazz, vector;\r\n\r\n                args   = _.toArray(arguments);\r\n                clazz  = Graph.svg[name];\r\n                vector = Graph.factory(clazz, args);\r\n                vector.canvas = this;\r\n\r\n                return vector;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            'class': 'graph-elem graph-elem-circle'\r\n        },\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n\r\n            me.$super('circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).apply();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.svg.Vector.extend({\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            // 'style': '',\r\n            'class': 'graph-elem graph-elem-ellipse'\r\n        },\r\n\r\n        constructor: function(cx, cy, rx, ry) {\r\n            this.$super('ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).apply();    \r\n            }\r\n\r\n            var bb = this.bbox(false, false).data();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            'class': 'graph-elem graph-elem-group'\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            this.$super('g');\r\n\r\n            if ( ! _.isUndefined(x) && ! _.isUndefined(y)) {\r\n                this.matrix.translate(x, y);\r\n                this.attr('transform', this.matrix.toString());\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none',\r\n            class: 'graph-elem graph-elem-image'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            me.$super('image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/gi, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/g, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.matrix.data().rotate;\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).apply();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'stroke-linecap': 'butt',\r\n            'class': 'graph-elem graph-elem-line'\r\n        },\r\n\r\n        constructor: function(x1, y1, x2, y2) {\r\n            this.$super('line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.svg.Vector.extend({\r\n        \r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            'class': 'graph-elem graph-elem-polygon'\r\n        },\r\n\r\n        constructor: function(points) {\r\n            this.$super('polygon', {\r\n                points: points\r\n            });\r\n\r\n            var me = this;\r\n\r\n        },\r\n\r\n        draggable: function(config) {\r\n            this.$super(config);\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix.clone(),\r\n                origin = this.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.pathinfo().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).apply();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.svg.Vector.extend({\r\n\r\n        attrs: {\r\n            // 'stroke': '#333333',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            // 'shape-rendering': 'crispEdges',\r\n            'class': 'graph-elem graph-elem-rect'\r\n        },\r\n\r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 0);\r\n\r\n            me.$super('rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.pathinfo();\r\n        },\r\n\r\n        attr: function() {\r\n            var args = _.toArray(arguments);\r\n\r\n            this.$super.apply(this, args);\r\n            this.attrs.r = this.attrs.rx;\r\n\r\n            return this;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            if (a.r) {\r\n                return Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                return Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix.clone(),\r\n                rotate = this.props.rotate;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).apply();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.svg.Vector.extend({\r\n        \r\n        attrs: {\r\n            // 'stroke': '#000000',\r\n            // 'stroke-width': .05,\r\n            // 'fill': '#000000',\r\n            // 'font-size': '12px',\r\n            // 'font-family': 'Arial',\r\n            'text-anchor': 'middle',\r\n            'class': 'graph-elem graph-elem-text'\r\n        },  \r\n\r\n        props: {\r\n            text: '',\r\n            angle: 0,\r\n            lineHeight: 1,\r\n            collectable: true,\r\n            selectable: true,\r\n            selected: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            this.$super('text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size,\r\n                'font-family': Graph.config.font.family\r\n            });\r\n            \r\n            this.text(text);\r\n\r\n            this.on('render', _.bind(this.arrange, this));\r\n        },\r\n\r\n        text: function(text) {\r\n            if (_.isUndefined(text)) {\r\n                return this.props.text;\r\n            }\r\n\r\n            var font = this.fontSize(),\r\n                parts = (text || '').split(\"\\n\"),\r\n                doc = Graph.doc(),\r\n                span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            _.forEach(parts, _.bind(function(t, i){\r\n                span = doc.createElementNS(Graph.config.xmlns.svg, 'tspan');\r\n                span.setAttribute('text-anchor', 'middle');\r\n                span.setAttribute('alignment-baseline', 'center');\r\n                span.appendChild(doc.createTextNode(t));\r\n                Graph.$(span).data('vector', this);\r\n\r\n                this.rows[i] = span;\r\n                this.elem.append(span);\r\n            }, this));\r\n\r\n            this.props.text = text;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.fontSize(),\r\n                line = this.lineHeight(),\r\n                bbox = this.bbox(false, false).data();\r\n\r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].setAttribute('x', this.attrs.x);\r\n                        rows[i].setAttribute('dy', size * line);\r\n                    }\r\n                }\r\n\r\n                rows[0].setAttribute('dy', 0);\r\n\r\n                // var box = this.bbox().data(),\r\n                //     off = this.attrs.y - (box.y + box.height / 2);\r\n\r\n                // if (off) {\r\n                //     rows[0].setAttribute('dy', off);    \r\n                // }\r\n                \r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox(false, false).data(),\r\n                    matrix = this.matrix.data();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox(false, false).data();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (matrix.rotate) {\r\n                    this.translate(dx, dy).rotate(matrix.rotate).apply();\r\n                } else {\r\n                    this.translate(dx, dy).apply();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        fontSize: function() {\r\n            return _.parseInt(this.attrs['font-size']);\r\n        },\r\n\r\n        lineHeight: function() {\r\n            return this.props.lineHeight;\r\n        },\r\n\r\n        toString: function() {\r\n            return this.props.text;\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.router.Manhattan = Graph.extend({\r\n\r\n        props: {\r\n            step: 10,\r\n            grid: 100,\r\n            perpendicular: true,\r\n            maxLoops: 2000,\r\n            maxAngle: 180,\r\n            angle: 0\r\n        },\r\n\r\n        startdirs: ['left', 'right', 'top', 'bottom'],\r\n        enddirs:   ['left', 'right', 'top', 'bottom'],\r\n\r\n        mapdirs: {\r\n            right:  {x:  1, y:  0},\r\n            bottom: {x:  0, y:  1},\r\n            left:   {x: -1, y:  0},\r\n            top:    {x:  0, y: -1}\r\n        },\r\n\r\n        source: null,\r\n        target: null,\r\n        canvas: null,\r\n        obstacle: null,\r\n\r\n        constructor: function(canvas, source, target, options) {\r\n            var me = this;\r\n\r\n            _.extend(me.props, options || {});\r\n\r\n            me.canvas   = canvas;\r\n            me.source   = source;\r\n            me.target   = target;\r\n\r\n            me.obstacle = new Graph.util.Obstacle(canvas, source, target);\r\n            me.obstacle.props.step = me.props.step;\r\n            me.obstacle.props.grid = me.props.grid;\r\n\r\n            me.obstacle.build();\r\n        },\r\n\r\n        directions: function() {\r\n            var step = this.props.step;\r\n\r\n            // var dirs = [\r\n            //     {dx:  step , dy:  0    , distance: step, angle: null},\r\n            //     {dx:  0    , dy:  step , distance: step, angle: null},\r\n            //     {dx: -step , dy:  0    , distance: step, angle: null},\r\n            //     {dx:  0    , dy: -step , distance: step, angle: null}\r\n            // ];\r\n\r\n            var dirs = [\r\n                {dx:  step , dy:  0    , distance: step, angle: null},\r\n                {dx:  0    , dy: -step , distance: step, angle: null},\r\n                {dx: -step , dy:  0    , distance: step, angle: null},\r\n                {dx:  0    , dy:  step , distance: step, angle: null}\r\n            ];\r\n\r\n            _.forEach(dirs, function(d){\r\n                d.angle = Graph.theta(0, 0, d.dx, d.dy);\r\n            });\r\n\r\n            return dirs;\r\n        },\r\n\r\n        penalties: function() {\r\n            var step = this.props.step;\r\n            \r\n            return {\r\n                0:  0,\r\n                45: step / 2,\r\n                90: step / 2\r\n            };\r\n        },\r\n\r\n        route: function() {\r\n            var me = this,\r\n                dirs = me.directions(),\r\n                ways = dirs.length,\r\n                pens = me.penalties(),\r\n                step = me.props.step,\r\n                loop = me.props.maxLoops,\r\n                \r\n                // source = me.source.location().snap(step, step),\r\n                // target = me.target.location().snap(step, step),\r\n\r\n                source = me.source.location().snap(step, step),\r\n                target = me.target.location().snap(step, step);\r\n\r\n            // var dot = me.canvas.circle(0,0,3);\r\n\r\n            // dot.selectable(false);\r\n            // dot.collectable(false);\r\n            // dot.style({'stroke-width': 0, 'fill': 'blue'});\r\n            // dot.render();\r\n                \r\n            if (me.obstacle.permit(source) && me.obstacle.permit(target)) {\r\n\r\n                var heap = new Heap(),\r\n                    parents = {},\r\n                    distances = {};\r\n\r\n                var srckey = source.toString(),\r\n                    tarkey = target.toString();\r\n\r\n                var prevangle;\r\n                var currkey, currpoint, currdist, currangle;\r\n                var nextkey, nextpoint;\r\n                var deltadir, dist;\r\n                var dir, i;\r\n                var c = 0;\r\n                var n = 0;\r\n\r\n                heap.add(srckey, distance(source, target));\r\n                distances[srckey] = 0;\r\n\r\n                while( ! heap.isEmpty() && loop > 0) {\r\n                    currkey = heap.pop();\r\n                    currpoint = new Graph.lang.Point(currkey);\r\n                    currdist = distances[currkey];\r\n\r\n                    prevangle = currangle;\r\n\r\n                    currangle = parents[currkey]\r\n                        ? dirangle(parents[currkey], currpoint, ways)\r\n                        : (me.props.angle !== null ? me.props.angle : dirangle(source, currpoint, ways));\r\n                    \r\n                    if (tarkey == currkey) {\r\n                        deltadir = dirchange(currangle, dirangle(currpoint, target, ways));\r\n\r\n                        if (currpoint.equals(target) || deltadir < 180) {\r\n                            me.props.angle = currangle;\r\n                            console.log(n);\r\n                            return backtrace(parents, currpoint);\r\n                        }\r\n                    }\r\n\r\n                    for (i = 0; i < ways; i++) {\r\n                        dir = dirs[i];\r\n                        deltadir = dirchange(currangle, dir.angle);\r\n                        \r\n                        if (deltadir > me.props.maxAngle) {\r\n                            continue;\r\n                        }   \r\n\r\n                        nextpoint = currpoint.clone().expand(dir.dx, dir.dy);\r\n                        nextkey   = nextpoint.toString();\r\n\r\n                        if (heap.isClose(nextkey) || ! me.obstacle.permit(nextpoint)) {\r\n                            continue;\r\n                        }\r\n\r\n                        _.delay(function(nextpoint){\r\n                            // dot.attr({\r\n                            //     cx: nextpoint.props.x,\r\n                            //     cy: nextpoint.props.y\r\n                            // });\r\n                            me.canvas.circle(nextpoint.props.x, nextpoint.props.y, 2).render()\r\n                                .collectable(false)\r\n                                .selectable(false)\r\n                                .style('stroke-width', '0')\r\n                                .style('fill', 'blue');\r\n                        }, (c += 100), nextpoint);\r\n\r\n                        dist = currdist + dir.distance; // + pens[deltadir];\r\n\r\n                        if ( ! heap.isOpen(nextkey) || dist < distances[nextkey]) {\r\n                            parents[nextkey] = currpoint;\r\n                            distances[nextkey] = dist;\r\n                            heap.add(nextkey, dist + distance(nextpoint, target));\r\n                        }\r\n                    }\r\n                    n++;\r\n                    loop--;\r\n                }\r\n\r\n            }\r\n        } \r\n\r\n    });\r\n\r\n    ///////// INTERNAL HEAP /////////\r\n    \r\n    var Heap = Graph.extend({\r\n\r\n        items: [],\r\n        state: {},\r\n        costs: {},\r\n\r\n        constructor: function() {},\r\n\r\n        add: function(key, value) {\r\n            var me = this, insert;\r\n\r\n            if (me.state[key]) {\r\n                me.items.splice(me.items.indexOf(key), 1);\r\n            } else {\r\n                me.state[key] = 'OPEN';\r\n            }\r\n\r\n            me.costs[key] = value;\r\n\r\n            insert = _.sortedIndexBy(me.items, key, function(k){\r\n                return me.costs[k];\r\n            });\r\n\r\n            this.items.splice(insert, 0, key);\r\n        },\r\n\r\n        remove: function(key) {\r\n            this.state[key] = 'CLOSE';\r\n        },\r\n\r\n        isOpen: function(key) {\r\n            return this.state[key] == 'OPEN';\r\n        },\r\n\r\n        isClose: function(key) {\r\n            return this.state[key] == 'CLOSE';  \r\n        },\r\n\r\n        isEmpty: function() {\r\n            return this.items.length === 0;\r\n        },\r\n\r\n        pop: function() {\r\n            var key = this.items.shift();\r\n            this.remove(key);\r\n            return key;\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function distance(start, end) {\r\n        return start.manhattan(end);\r\n    }\r\n\r\n    function dirangle(start, end, size) {\r\n        var q = 360 / size;\r\n        return Math.floor((start.theta(end) + q / 2) / q) * q;\r\n    }\r\n\r\n    function dirchange(angle1, angle2) {\r\n        var delta = Math.abs(angle1 - angle2);\r\n        return delta > 180 ? 360 - delta : delta;\r\n    }\r\n\r\n    function backtrace(parents, point) {\r\n        var route = [],\r\n            prevdiff = {\r\n                props: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            current = point,\r\n            parent;\r\n\r\n        while ((parent = parents[current])) {   \r\n\r\n            var diff = parent.difference(current);\r\n\r\n            if ( ! diff.equals(prevdiff)) {\r\n                route.unshift(current);\r\n                prevdiff = diff;\r\n            }\r\n\r\n            current = parent;\r\n        }\r\n\r\n        route.unshift(current);\r\n        return route;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Collector = Graph.extend({\r\n        \r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            dir: null,\r\n            top: 0,\r\n            left: 0,\r\n            width: 0,\r\n            height: 0,\r\n            offset: [0, 0],\r\n            suspended: true\r\n        },\r\n\r\n        canvas: null,\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        events: {\r\n            beforedrag: true,\r\n            afterdrag: true\r\n        },\r\n\r\n        constructor: function() {\r\n            this.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this, canvas = me.canvas;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            // me.container.on('scroll', function(){\r\n            //     var top = me.container.scrollTop(),\r\n            //         left = me.container.scrollLeft(),\r\n            //         dy = top - me.props.top,\r\n            //         dx = left - me.props.left;\r\n\r\n            //     me.props.height += dy;\r\n            //     me.props.width += dx;\r\n\r\n            //     me.props.top = top;\r\n            //     me.props.left = left;\r\n            // });\r\n\r\n            me.plugin = interact(canvas.node()).draggable({\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    me.reset();\r\n                    me.resize(0, 0);\r\n\r\n                    var offset = canvas.container.offset(),   \r\n                        x = e.pageX - offset.left,\r\n                        y = e.pageY - offset.top;\r\n\r\n                    me.translate(x, y);\r\n                    me.props.offset = [x, y];\r\n                },\r\n                \r\n                onmove: function(e) {\r\n                    var dw = 0,\r\n                        dh = 0,\r\n                        dx = 0,\r\n                        dy = 0;\r\n\r\n                    if ( ! me.props.dir) {\r\n                        switch(true) {\r\n                            case (e.dx > 0 && e.dy > 0):\r\n                                me.props.dir = 'nw';\r\n                                break;\r\n                            case (e.dx < 0 && e.dy < 0):\r\n                                me.props.dir = 'se';\r\n                                break;\r\n                            case (e.dx < 0 && e.dy > 0):\r\n                                me.props.dir = 'ne';\r\n                                break;\r\n                            case (e.dx > 0 && e.dy < 0):\r\n                                me.props.dir = 'sw';\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        switch(me.props.dir) {\r\n                            case 'nw':\r\n                                dw = e.dx;\r\n                                dh = e.dy;\r\n                                dx = 0;\r\n                                dy = 0;\r\n                                break;\r\n                            case 'ne':\r\n                                dw = -e.dx;\r\n                                dh =  e.dy;\r\n                                dx =  e.dx;\r\n                                dy =  0;\r\n                                break;\r\n                            case 'se':\r\n                                dw = -e.dx;\r\n                                dh = -e.dy;\r\n                                dx =  e.dx;\r\n                                dy =  e.dy;\r\n                                break;\r\n                            case 'sw':\r\n                                dw =  e.dx;\r\n                                dh = -e.dy;\r\n                                dx =  0;\r\n                                dy =  e.dy;\r\n                                break;\r\n                        }\r\n                        \r\n                        me.props.width  += dw;\r\n                        me.props.height += dh;\r\n\r\n                        if (me.props.width >= 0 && me.props.height >= 0) {\r\n                            me.translate(dx, dy); \r\n                            me.resize(me.props.width, me.props.height);\r\n                        } else {\r\n                            me.props.width  -= dw;\r\n                            me.props.height -= dh;\r\n                        }\r\n                        \r\n                    }\r\n                },\r\n\r\n                onend: function() {\r\n                    var bbox\r\n\r\n                    me.props.x2 = me.props.x + me.props.width;\r\n                    me.props.y2 = me.props.y + me.props.height;\r\n\r\n                    bbox = me.bbox();\r\n                    \r\n                    canvas.cascade(function(c){\r\n                        if (c !== canvas && c.selectable() && ! c.isGroup()) {\r\n                            if (bbox.contain(c)) {\r\n                                me.collect(c);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    me.resize(0, 0);\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.get(e.target);\r\n\r\n                if ( ! vector.selectable()) {\r\n                    single && me.clearCollection();    \r\n                    return;\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector.selectable()) {\r\n                    single && me.clearCollection(vector);\r\n                    me.collect(vector);\r\n                    return;\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var action = e.interaction,\r\n                    target = e.target;\r\n                if (action.pointerIsDown && action.interacting() === false && target === canvas.node()) {\r\n                    if (me.props.suspended) {\r\n                        me.resume();\r\n                    }\r\n                    action.start({name: 'drag'}, e.interactable, me.components.rubber.node());\r\n                }\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n        },\r\n\r\n        render: function(canvas) {\r\n            var me = this;\r\n\r\n            me.canvas = canvas;\r\n            me.canvas.container.append(me.components.rubber);\r\n\r\n            me.canvas.on({\r\n                render: function() {\r\n                    me.setup();\r\n                }\r\n            });\r\n            \r\n            if (me.canvas.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        bbox: function() {\r\n            var props = this.props;\r\n            \r\n            return new Graph.lang.BBox({\r\n                x: props.x,\r\n                y: props.y,\r\n                x2: props.x2,\r\n                y2: props.y2,\r\n                width: props.width,\r\n                height: props.height\r\n            });\r\n        },\r\n\r\n        collect: function(vector, silent) {\r\n            var me = this, offset;\r\n\r\n            vector.$collector = this;\r\n            vector.select();\r\n\r\n            silent = _.defaultTo(silent, false);\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n                if ( ! silent) {\r\n                    vector.fire('collect', this, vector);\r\n                }\r\n            }\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            var offset;\r\n            \r\n            vector.$collector = null;\r\n            vector.deselect();\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset > -1) {\r\n                this.collection.splice(offset, 1);\r\n                vector.fire('decollect', this, vector);\r\n            }\r\n        },\r\n\r\n        clearCollection: function(vector) {\r\n            var me = this;\r\n            me.canvas.cascade(function(c){\r\n                if (c !== me.canvas && c.props.selected) {\r\n                    me.decollect(c);\r\n                }\r\n            });\r\n        },\r\n\r\n        resume: function() {\r\n            this.components.rubber.addClass('visible');\r\n            this.props.suspended = false;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.components.rubber.removeClass('visible');\r\n            this.props.suspended = true;\r\n        },\r\n\r\n        reset: function() {\r\n            var top = this.canvas.container.scrollTop(),\r\n                left = this.canvas.container.scrollLeft();\r\n\r\n            this.props.x = 0;\r\n            this.props.y = 0;\r\n            this.props.x2 = this.props.x,\r\n            this.props.y2 = this.props.y,\r\n            this.props.top = top;\r\n            this.props.left = left;\r\n            this.props.dir = null;\r\n            this.props.width = 0;\r\n            this.props.height = 0;\r\n            this.props.offset = [0, 0];\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n            \r\n            this.components.rubber.css({\r\n                transform: 'translate(' + this.props.x + 'px,' + this.props.y + 'px)'\r\n            });\r\n        },\r\n\r\n        resize: function(width, height) {\r\n            this.components.rubber.width(width).height(height);\r\n        },\r\n\r\n        syncDragStart: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.dragger && v.dragger.props.enabled && v !== origin) {\r\n                    (function(){\r\n                        var mat = v.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.resizer) {\r\n                            v.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.dragger.components.helper) {\r\n                            v.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n                        \r\n                        v.fire('dragstart', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos\r\n                        }, v);\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDragMove: function(origin, e) {\r\n            var me = this, dx, dy;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.dragger && v.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.dragger.components.helper) {\r\n                            v.dragger.components.helper.translate(e.ox, e.oy).apply();\r\n                        } else {\r\n                            v.translate(dx, dy).apply();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('dragmove', {\r\n                            dx: dx,\r\n                            dy: dy\r\n                        }, v);\r\n\r\n                    }(v, e));    \r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDragEnd: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.dragger && v.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        \r\n                        if (v.dragger.components.helper) {\r\n                            v.translate(v.syncdrag.tdx, v.syncdrag.tdy).apply();\r\n                            v.dragger.suspend();\r\n                        }\r\n\r\n                        if (v.resizer) {\r\n                            v.resizer.resume();\r\n                            v.resizer.redraw();\r\n                        }\r\n\r\n                        v.fire('dragend', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy\r\n                        }, v);\r\n                        \r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n                        v.dirty = true;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.origin = origin;\r\n            me.fire('afterdrag', e, me);\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.common.Connector = Graph.shape.Base.extend({\r\n        props: {\r\n            source: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            target: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        },\r\n        constructor: function() {\r\n            this.$super();\r\n        },\r\n        initComponent: function() {\r\n            this.component = new Graph.svg.Group();\r\n            this.component.addClass('graph-shape-connector');\r\n\r\n            this.component.line()\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Definer = Graph.extend({\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        canvas: null,\r\n\r\n        constructor: function() {\r\n            var me = this;\r\n            me.components.holder = Graph.$svg('defs');\r\n        },\r\n\r\n        render: function(canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.elem.prepend(this.components.holder);\r\n        },\r\n\r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$svg('marker');\r\n\r\n            marker.attr({\r\n                id: id,\r\n                refX: '8',\r\n                refY: '4',\r\n                markerWidth: '8',\r\n                markerHeight: '8',\r\n                orient: 'auto'\r\n            });\r\n\r\n            var path = Graph.$svg('path');\r\n            \r\n            path.attr({\r\n                d: 'M 0 0 L 0 8 L 8 4 L 0 0',\r\n                fill: '#333',\r\n                'stroke-width': '0'\r\n            });\r\n\r\n            marker.append(path);\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        }\r\n    });\r\n\r\n}());","    \r\n(function(){\r\n\r\n    Graph.util.Hinter = Graph.extend({\r\n\r\n        components: {\r\n            G: null,\r\n            V: null,\r\n            H: null\r\n        },\r\n\r\n        collection: {},\r\n\r\n        sources: {\r\n            M: [],\r\n            C: []\r\n        },\r\n\r\n        targets: {\r\n            M: [],\r\n            C: []\r\n        },\r\n\r\n        constructor: function() {\r\n            var me = this, comp = this.components;\r\n\r\n            comp.G = new Graph.svg.Group();\r\n            comp.G.addClass('graph-util-hinter');\r\n            comp.G.removeClass('graph-elem graph-elem-group');\r\n\r\n            comp.H = new Graph.svg.Line(0, 0, 0, 0);\r\n            comp.H.attr('shape-rendering', 'crispEdges');\r\n            comp.H.removeClass('graph-elem graph-elem-line');\r\n            comp.H.render(comp.G);\r\n\r\n            comp.V = new Graph.svg.Line(0, 0, 0, 0);\r\n            comp.V.attr('shape-rendering', 'crispEdges');\r\n            comp.V.removeClass('graph-elem graph-elem-line');\r\n            comp.V.render(comp.G);\r\n        },\r\n\r\n        render: function(canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.append(this.components.G);\r\n        },\r\n\r\n        suspend: function(bearing) {\r\n            this.components[bearing].removeClass('visible');\r\n        },\r\n\r\n        resume: function(bearing) {\r\n            this.components[bearing].addClass('visible');\r\n        },\r\n\r\n        register: function(vector) {\r\n            var me = this,\r\n                id = vector.id(),\r\n                box = vector.bbox(false, false).data();\r\n\r\n            me.collection[id] = {\r\n                vector: vector,\r\n                dirty: false,\r\n                vertices: {\r\n                    M: [\r\n                        Math.round(box.x, 2),\r\n                        Math.round(box.y + box.height / 2, 2),\r\n                        box.width, \r\n                        box.height\r\n                    ],\r\n                    C: [\r\n                        Math.round(box.x + box.width / 2, 2),\r\n                        Math.round(box.y, 2),\r\n                        box.width, \r\n                        box.height\r\n                    ]\r\n                }\r\n            };\r\n\r\n            vector.on({\r\n                dragend: function() {\r\n                    me.collection[id].dirty = true;\r\n                },\r\n                resize: function() {\r\n                    me.collection[id].dirty = true;\r\n                }\r\n            });\r\n        },\r\n\r\n        activate: function(vector) {\r\n            var me = this,\r\n                id = vector.id();\r\n\r\n            // bring to front;\r\n            me.canvas.elem.append(me.components.G.elem);\r\n            \r\n            if (me.collection[id].dirty) {\r\n                var box = vector.bbox(false, false).data();\r\n                me.collection[id].vertices = {\r\n                    M: [\r\n                        Math.round(box.x, 2),\r\n                        Math.round(box.y + box.height / 2, 2),\r\n                        box.width, \r\n                        box.height\r\n                    ],\r\n                    C: [\r\n                        Math.round(box.x + box.width / 2, 2),\r\n                        Math.round(box.y, 2),\r\n                        box.width, \r\n                        box.height\r\n                    ]\r\n                }\r\n                me.collection[id].dirty = false;\r\n            }\r\n\r\n            me.sources.M = me.collection[id].vertices.M;\r\n            me.sources.C = me.collection[id].vertices.C;\r\n\r\n            me.targets.M = [];\r\n            me.targets.C = [];\r\n\r\n            _.forEach(me.collection, function(col, id){\r\n                if (col.vector !== vector) {\r\n                    if (col.dirty) {\r\n                        var box = col.vector.bbox(false, false).data();\r\n                        col.vertices = {\r\n                            M: [\r\n                                Math.round(box.x, 2),\r\n                                Math.round(box.y + box.height / 2, 2),\r\n                                box.width, \r\n                                box.height\r\n                            ],\r\n                            C: [\r\n                                Math.round(box.x + box.width / 2, 2),\r\n                                Math.round(box.y, 2),\r\n                                box.width, \r\n                                box.height\r\n                            ]\r\n                        }\r\n                        col.dirty = false;\r\n                    }\r\n                    me.targets.M.push(col.vertices.M);\r\n                    me.targets.C.push(col.vertices.C);\r\n                }\r\n            });\r\n        },\r\n\r\n        watch: function(dx, dy) {\r\n            var me = this;\r\n\r\n            // update source\r\n            _.forEach(me.sources, function(s){\r\n                s[0] += dx;\r\n                s[1] += dy;\r\n            });\r\n\r\n            var x1, y1, x2, y2;\r\n\r\n            // find `M`\r\n            var fm = _.find(me.targets.M, function(t){\r\n                return t[1] === me.sources.M[1];\r\n            });\r\n\r\n            if (fm) {\r\n                me.resume('H');\r\n\r\n                if (me.sources.M[0] < fm[0]) {\r\n                    x1 = me.sources.M[0];\r\n                    x2 = fm[0] + fm[2];\r\n                } else {\r\n                    x1 = me.sources.M[0] + me.sources.M[2];\r\n                    x2 = fm[0];\r\n                }\r\n\r\n                me.components.H.attr({\r\n                    x1: x1,\r\n                    y1: me.sources.M[1],\r\n                    x2: x2,\r\n                    y2: fm[1]\r\n                });\r\n            } else {\r\n                me.suspend('H');\r\n            }\r\n\r\n            // find `C`\r\n            var fc = _.find(me.targets.C, function(t){\r\n                return t[0] === me.sources.C[0];\r\n            });\r\n\r\n            if (fc) {\r\n                me.resume('V');\r\n\r\n                if (me.sources.C[1] < fc[1]) {\r\n                    y1 = me.sources.C[1];\r\n                    y2 = fc[1] + fc[3];\r\n                } else {\r\n                    y1 = me.sources.C[1] + me.sources.C[3];\r\n                    y2 = fc[1];\r\n                }\r\n\r\n                me.components.V.attr({\r\n                    x1: me.sources.C[0],\r\n                    y1: y1, //me.sources.C[1],\r\n                    x2: fc[0],\r\n                    y2: y2\r\n                    // x1: me.sources.C[0],\r\n                    // y1: y1,\r\n                    // x2: fc[0],\r\n                    // y2: y2\r\n                });\r\n            } else {\r\n                me.suspend('V');\r\n            }\r\n\r\n        },\r\n\r\n        deactivate: function() {\r\n            this.suspend('H');\r\n            this.suspend('V');\r\n\r\n            this.components.H.attr({\r\n                x1: 0,\r\n                y1: 0,\r\n                x2: 0,\r\n                y2: 0\r\n            });\r\n\r\n            this.components.V.attr({\r\n                x1: 0,\r\n                y1: 0,\r\n                x2: 0,\r\n                y2: 0\r\n            });\r\n\r\n            this.sources.M = [];\r\n            this.sources.C = [];\r\n\r\n            this.targets.M = [];\r\n            this.targets.C = [];\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.util.Link = Graph.extend({\r\n        \r\n        source: null,\r\n        target: null,\r\n\r\n        constructor: function(source, target) {\r\n            this.source = source;\r\n            this.target = target;\r\n        },\r\n\r\n        connect: function(router) {\r\n            \r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Linker = Graph.extend({\r\n        props: {\r\n            suspended: true,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        components: {\r\n            block: null,\r\n            point: null\r\n        },\r\n        ports: {\r\n            source: null,\r\n            target: null\r\n        },\r\n        constructor: function() {\r\n            var me = this, comp = me.components;\r\n\r\n            comp.block = new Graph.svg.Group();\r\n            comp.block.addClass('graph-util-linker');\r\n            comp.block.removeClass('graph-elem graph-elem-group');\r\n            comp.block.collectable(false);\r\n            comp.block.selectable(false);\r\n\r\n            comp.point = new Graph.svg.Ellipse(0, 0, 3, 3);\r\n            comp.point.addClass('graph-util-linker-point');\r\n            comp.point.removeClass('graph-elem graph-elem-ellipse');\r\n            comp.point.collectable(false);\r\n            comp.point.selectable(false);\r\n            comp.point.render(comp.block);\r\n\r\n            comp.link = new Graph.svg.Path('M 0 0');\r\n            comp.link.attr('marker-end', 'url(#marker-arrow)');\r\n            comp.link.addClass('graph-util-linker-link');\r\n            comp.link.removeClass('graph-elem graph-elem-path');\r\n            comp.link.selectable(false);\r\n            comp.link.collectable(false);\r\n            comp.link.render(comp.block);\r\n\r\n        },\r\n        component: function() {\r\n            return this.components.block;\r\n        },\r\n        pointer: function() {\r\n            return this.components.point;\r\n        },\r\n        render: function(canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.append(this.components.block);\r\n        },\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n            this.components.block.addClass('visible');\r\n        },\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.block.removeClass('visible');  \r\n        },\r\n        \r\n        reset: function() {\r\n            this.ports.source = null;\r\n            this.ports.target = null;\r\n            this.props.x = 0;\r\n            this.props.y = 0;\r\n            this.components.point.attr({cx: 0, cy: 0});\r\n            this.components.link.attr('d', 'M 0 0');\r\n        },\r\n        \r\n        source: function(port) {\r\n            var x = port.props.x,\r\n                y = port.props.y;\r\n\r\n            this.reset();\r\n\r\n            this.ports.source = port;\r\n            this.startAt(x, y);\r\n        },\r\n\r\n        target: function(port) {\r\n            var x = port.props.x,\r\n                y = port.props.y;\r\n\r\n            this.ports.target = port;\r\n            this.stopAt(x, y);\r\n        },\r\n        \r\n        startAt: function(x, y) {\r\n            var prop = this.props,\r\n                comp = this.components;\r\n\r\n            prop.x = x;\r\n            prop.y = y;\r\n\r\n            comp.point.attr({\r\n                cx: x,\r\n                cy: y\r\n            });\r\n\r\n            comp.link.startAt(x, y);\r\n        },\r\n        \r\n        stopAt: function(x, y) {\r\n            var prop = this.props,\r\n                comp = this.components;\r\n\r\n            prop.x = x;\r\n            prop.y = y;\r\n\r\n            comp.point.attr({\r\n                cx: x,\r\n                cy: y\r\n            });\r\n\r\n            comp.link.stopAt(x, y);\r\n        },\r\n        \r\n        closeTo: function(x, y) {\r\n            \r\n        },\r\n        \r\n        expandBy: function(dx, dy) {\r\n            var prop = this.props,\r\n                comp = this.components\r\n\r\n            prop.x += dx;\r\n            prop.y += dy;\r\n\r\n            comp.point.attr({\r\n                cx: prop.x,\r\n                cy: prop.y\r\n            });\r\n\r\n            var deg = comp.link.angle(),\r\n                rad = Graph.rad(deg),\r\n                sin = Math.sin(rad),\r\n                cos = Math.cos(rad);\r\n\r\n            var vdx = dx * cos + dy * sin,\r\n                vdy = dx * -sin + dy * cos;\r\n\r\n            comp.link.expandBy(dx, dy);\r\n        },\r\n\r\n        revert: function() {\r\n            this.ports.source = null;\r\n            this.ports.target = null;\r\n            this.suspend();\r\n        },\r\n\r\n        commit: function() {\r\n            var source = this.ports.source,\r\n                target = this.ports.target;\r\n\r\n            if (source && target) {\r\n                var connector = new Graph.util.Connector();\r\n                connector.connect(source, target);\r\n                connector.render(this.canvas);\r\n            }\r\n            \r\n            this.suspend();\r\n        }\r\n    });\r\n\r\n}());\r\n","(function(){\r\n\r\n    Graph.util.Obstacle = Graph.extend({\r\n        \r\n        props: {\r\n            step: 10,\r\n            grid: 100\r\n        },\r\n\r\n        hash: {},\r\n\r\n        source: null,\r\n        target: null,\r\n        canvas: null,\r\n\r\n        constructor: function(canvas, source, target, options) {\r\n            _.extend(this.props, options || {});\r\n\r\n            this.canvas = canvas;\r\n            this.source = source;\r\n            this.target = target;\r\n        },\r\n\r\n        padding: function() {\r\n            var step = this.props.step;\r\n\r\n            return {\r\n                x: step,\r\n                y: step,\r\n                width: -2 * step,\r\n                height: - 2 * step\r\n            };\r\n        },  \r\n\r\n        margin: function() {\r\n            var step = this.props.step;\r\n\r\n            return {\r\n                x: -step,\r\n                y: -step,\r\n                width: 2 * step,\r\n                height: 2 * step\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var me = this,\r\n                grid = me.props.grid,\r\n                margin = me.margin(),\r\n                padding = me.padding(),\r\n                canvas = me.canvas,\r\n                excludes = [];\r\n\r\n            if (me.source) {\r\n                excludes.push(me.source.vector);\r\n            }\r\n\r\n            if (me.target) {\r\n                excludes.push(me.target.vector);\r\n            }\r\n\r\n            _.chain(canvas.children().items)\r\n                .difference(excludes)\r\n                .map(function(c){\r\n                    var box;\r\n                    // if (c === me.source.vector || c === me.target.vector) {\r\n                    //     box = c.bbox(false, false).expand(padding.x, padding.y, padding.width, padding.height); \r\n                    //     box.snap = false;\r\n                    // } else {\r\n                    //     box = c.bbox(false, false).expand(margin.x, margin.y, margin.width, margin.height);\r\n                    //     box.snap = true;\r\n                    // }\r\n\r\n                    box = c.bbox(false, false).expand(margin.x, margin.y, margin.width, margin.height);\r\n                    box.snap = true;\r\n                    \r\n                    var dat = box.data();\r\n                    canvas.rect(dat.x, dat.y, dat.width, dat.height).render().style('fill', 'none');\r\n                    return box;\r\n                })\r\n                .reduce(function(hash, box){\r\n                    var origin, corner;\r\n\r\n                    // if (box.snap) {\r\n                    //     origin = box.origin().snap(grid, grid),\r\n                    //     corner = box.corner().snap(grid, grid);\r\n                    // } else {\r\n                    //     origin = box.origin();\r\n                    //     corner = box.corner();\r\n                    // }\r\n\r\n                    origin = box.origin().snap(grid, grid),\r\n                    corner = box.corner().snap(grid, grid);\r\n\r\n                    // canvas.circle(origin.props.x, origin.props.y, 3).render();\r\n                    // canvas.circle(corner.props.x, corner.props.y, 3).render();\r\n\r\n                    var x, y, k;\r\n\r\n                    for (x = origin.props.x; x <= corner.props.x; x += grid) {\r\n                        for (y = origin.props.y; y <= corner.props.y; y += grid) {\r\n                            k = x + ',' + y;\r\n                            hash[k] = hash[k] || [];\r\n                            hash[k].push(box);\r\n                        }\r\n                    }\r\n\r\n                    return hash;\r\n\r\n                }, me.hash).value();\r\n        },\r\n\r\n        permit: function(point) {\r\n            var me = this,\r\n                g = me.props.grid,\r\n                p = point.clone().snap(g, g),\r\n                // p = point.clone(),\r\n                k = p.toString();\r\n            // console.log(k, me.hash[k]);\r\n            var r = _.every(me.hash[k], function(box) {\r\n                return ! box.contain(point);\r\n            });\r\n\r\n            return r;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var guid = 0;\r\n\r\n    Graph.util.Port = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            x: 0,\r\n            y: 0,\r\n            empty: true,\r\n            width: 10,\r\n            height: 10,\r\n            segment: 0,\r\n            weight: 0\r\n        },\r\n        \r\n        vector: null,\r\n        canvas: null,\r\n        network: null,\r\n\r\n        components: {\r\n            port: null,\r\n            slot: null,\r\n            core: null\r\n        },\r\n\r\n        snapping: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n\r\n        connection: {\r\n            connecting: false,\r\n            valid: false\r\n        },\r\n\r\n        connectors: [],\r\n\r\n        constructor: function(x, y, options) {\r\n            \r\n            options = _.extend({\r\n                id: 'P' + (++guid),\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            }, options || {});\r\n\r\n            _.extend(this.props, options);\r\n            \r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components, \r\n                prop = me.props;\r\n\r\n            comp.port = new Graph.svg.Group();\r\n            comp.port.addClass('graph-util-port');\r\n            comp.port.removeClass('graph-elem graph-elem-group');\r\n            comp.port.on({\r\n                render: _.bind(me.onPortRender, me)\r\n            });\r\n\r\n            comp.slot = comp.port.append(new Graph.svg.Ellipse(\r\n                prop.x,\r\n                prop.y,\r\n                prop.width,\r\n                prop.height\r\n            ));\r\n\r\n            comp.slot.elem.data('port', me);\r\n\r\n            comp.slot.addClass('graph-util-port-slot');\r\n            comp.slot.removeClass('graph-elem graph-elem-ellipse');\r\n\r\n            comp.slot.elem.on({\r\n                click: function(e) {\r\n                    me.fire('click', e, me);\r\n                    e.stopPropagation();\r\n                }\r\n            });\r\n\r\n            comp.core = comp.port.append(new Graph.svg.Ellipse(\r\n                prop.x,\r\n                prop.y,\r\n                2,\r\n                2\r\n            ));\r\n\r\n            comp.core.addClass('graph-util-port-core');\r\n            comp.core.removeClass('graph-elem graph-elem-ellipse');\r\n            comp.core.attr({\r\n                'pointer-events': 'none'\r\n            });\r\n\r\n            comp.core.elem.on({\r\n                click: function(e) {\r\n                    e.stopPropagation();\r\n                }\r\n            });\r\n\r\n            for(var name in comp) {\r\n                comp[name].selectable(false);\r\n                comp[name].collectable(false);\r\n            }\r\n\r\n        },\r\n\r\n        component: function() {\r\n            return this.components.port;\r\n        },\r\n\r\n        render: function() {\r\n            var network = this.network;\r\n            this.canvas = network.canvas;\r\n            this.components.port.render(network.components.block);\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (_.isPlainObject(name)) {\r\n                _.extend(this.props, name);\r\n                return this;\r\n            }\r\n\r\n            if (_.isUndefined(name) && _.isUndefined(value)) {\r\n                return this.props;\r\n            }\r\n\r\n            if (_.isUndefined(value)) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        x: function(value) {\r\n            if (_.isUndefined(value)) {\r\n                return this.props.x;\r\n            }\r\n            this.props.y = value;\r\n            return this;\r\n        },\r\n\r\n        y: function(value) {\r\n            if (_.isUndefined(value)) {\r\n                return this.props.y;\r\n            }\r\n            this.props.y = value;\r\n            return this;\r\n        },\r\n        \r\n        location: function() {\r\n            return new Graph.lang.Point(this.props.x, this.props.y);\r\n        },\r\n\r\n        offset: function() {\r\n            var offset = {\r\n                left: this.props.x,\r\n                top: this.props.y\r\n            };\r\n\r\n            var pcanvas = this.canvas.elem.position();\r\n\r\n            offset.left += pcanvas.left;\r\n            offset.top  += pcanvas.top;\r\n\r\n            return offset;\r\n        },\r\n\r\n        position: function() {\r\n            var pos = this.components.slot.position();\r\n            return {\r\n                left: pos.left + this.props.width,\r\n                top: pos.top + this.props.height\r\n            };\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this,\r\n                comp = me.components,\r\n                prop = me.props,\r\n                linker = me.canvas.linker;\r\n\r\n            if (me.draggable) {\r\n                return;\r\n            }\r\n\r\n            me.draggable = interact(comp.slot.node()).draggable({\r\n                manualStart: true,\r\n                inertia: false,\r\n                snap: {\r\n                    targets: [\r\n                        interact.createSnapGrid({x: 1, y: 1})\r\n                    ]\r\n                },\r\n                onstart: function(e) {\r\n                    linker.source(me);\r\n\r\n                    me.connection.connecting = true;\r\n                    me.draggable.setOptions('snap', {\r\n                        targets: [\r\n                            interact.createSnapGrid({x: 1, y: 1})\r\n                        ]\r\n                    });\r\n                    \r\n                },\r\n                onmove: function(e) {\r\n                    linker.expandBy(e.dx, e.dy);\r\n                },\r\n                onend: function(e) {\r\n                    /*if (me.connection.connecting && ! me.connection.valid) {\r\n                        linker.revert();\r\n                    }*/\r\n                }\r\n            });\r\n\r\n            me.draggable.styleCursor(false);\r\n\r\n            me.draggable.on({\r\n                move: function(e) {\r\n                    var i = e.interaction;\r\n\r\n                    if (i.pointerIsDown && ! i.interacting() && e.currentTarget === comp.slot.node()) {\r\n                        linker.resume();\r\n                        i.start({name: 'drag'}, e.interactable, linker.pointer().node());    \r\n                    }\r\n                }\r\n            });\r\n\r\n            // droppable\r\n            me.droppable = interact(comp.slot.node()).dropzone({\r\n                overlap: .2,\r\n                accept: '.graph-util-linker-point'\r\n            });\r\n\r\n            me.droppable.on({\r\n                dropactivate: _.bind(me.onLinkerActivate, me),\r\n                dropdeactivate: _.bind(me.onLinkerDeactivate, me),\r\n                dragenter: _.bind(me.onLinkerEnter, me),\r\n                dragleave: _.bind(me.onLinkerLeave, me),\r\n                drop: _.bind(me.onLinkerDrop, me)\r\n            });\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            var c = this.components;\r\n            \r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n\r\n            c.core.attr({\r\n                cx: this.props.x,\r\n                cy: this.props.y\r\n            });\r\n\r\n            c.slot.attr({\r\n                cx: this.props.x,\r\n                cy: this.props.y\r\n            });\r\n        },\r\n\r\n        relocate: function(x, y) {\r\n            this.props.x = 0;\r\n            this.props.y = 0;\r\n            this.translate(x, y);\r\n        },\r\n\r\n        transform: function(matrix) {\r\n            var px = this.props.x,\r\n                py = this.props.y,\r\n                x = matrix.x(px, py),\r\n                y = matrix.y(px, py);\r\n\r\n            this.props.x = 0;\r\n            this.props.y = 0;\r\n\r\n            this.translate(x, y);\r\n        },\r\n\r\n        onPortRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onLinkerActivate: function(e) {\r\n            /*var port = Graph.$(e.target).data('port');\r\n            console.log(port.network != this.network);\r\n            if (port.network != this.network) {\r\n                port.network.resume();\r\n                console.log('called');\r\n                port.components.port.addClass('drop-active');    \r\n            }*/\r\n        },\r\n\r\n        onLinkerDeactivate: function(e) {\r\n            var port = Graph.$(e.target).data('port');\r\n            port.components.port.removeClass('drop-active');\r\n        },\r\n\r\n        onLinkerEnter: function(e) {\r\n            var me = this, \r\n                snap = me.snapping, \r\n                linker = me.canvas.linker;\r\n\r\n            var offset;\r\n\r\n            if (linker.ports.source !== me) {\r\n                offset = me.offset();\r\n\r\n                snap.x = offset.left;\r\n                snap.y = offset.top;\r\n                snap.range = Infinity;\r\n\r\n                e.draggable.setOptions('snap', {\r\n                    targets: [\r\n                        snap\r\n                    ],\r\n                    endOnly: true\r\n                });\r\n\r\n                me.connection.valid = true;\r\n                me.components.port.addClass('drop-enter');\r\n            }\r\n        },\r\n\r\n        onLinkerLeave: function(e) {\r\n            var me = this, linker = me.canvas.linker;\r\n            \r\n            if (linker.ports.source !== me) {\r\n                me.components.port.removeClass('drop-enter');\r\n                me.connection.valid = false;\r\n            }\r\n        },\r\n\r\n        onLinkerDrop: function(e) {\r\n            var me = this, linker = me.canvas.linker;\r\n\r\n            if (linker.ports.source !== me) {\r\n                linker.target(me);\r\n                linker.commit();\r\n                me.components.port.removeClass('drop-enter');\r\n                me.connection.connecting = false;\r\n            }\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.shape.activity.Router = Graph.shape.Base.extend({\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Spotlight = Graph.extend({\r\n        props: {\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            G: null,\r\n            N: null,\r\n            E: null,\r\n            S: null,\r\n            W: null\r\n        },\r\n\r\n        canvas: null,\r\n        \r\n        constructor: function() {\r\n            var me = this,\r\n                comp = me.components;\r\n\r\n            comp.G = new Graph.svg.Group();\r\n            comp.G.collectable(false);\r\n            comp.G.selectable(false);\r\n            comp.G.addClass('graph-util-spotlight');\r\n            comp.G.removeClass('graph-elem graph-elem-group');\r\n\r\n            _.forEach(['N', 'E', 'S', 'W'], function(name){\r\n                comp[name] = new Graph.svg.Line(0, 0, 0, 0);\r\n                comp[name].removeClass('graph-elem graph-elem-line');\r\n                comp[name].collectable(false);\r\n                comp[name].selectable(false);\r\n                comp[name].attr('shape-rendering', 'crispEdges');\r\n                comp[name].render(comp.G);\r\n            });\r\n        },\r\n        \r\n        component: function() {\r\n            return this.components.G;\r\n        },\r\n\r\n        render: function(canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.append(this.components.G);\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.G.removeClass('visible');\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n            this.components.G.addClass('visible');\r\n        },\r\n\r\n        focus: function(target, state) {\r\n            if ( ! state) {\r\n                this.suspend();\r\n                return;\r\n            }\r\n\r\n            var tbox = target.bbox(false, false).data(),\r\n                dots = target.dots(true),\r\n                tsvg = target.canvas,\r\n                comp = this.components;\r\n\r\n            var x, y, h, w;\r\n\r\n            x = dots[0][0];\r\n            y = dots[0][1];\r\n            h = tsvg.attrs.height;\r\n            w = tsvg.attrs.width;\r\n\r\n            this.resume();\r\n\r\n            comp.W.attr({\r\n                x1: x,\r\n                y1: 0,\r\n                x2: x,\r\n                y2: h\r\n            });\r\n\r\n            comp.E.attr({\r\n                x1: x + tbox.width,\r\n                y1: 0,\r\n                x2: x + tbox.width,\r\n                y2: h\r\n            });\r\n\r\n            comp.N.attr({\r\n                x1: 0,\r\n                y1: y,\r\n                x2: w,\r\n                y2: y\r\n            });\r\n\r\n            comp.S.attr({\r\n                x1: 0,\r\n                y1: y + tbox.height,\r\n                x2: w,\r\n                y2: y + tbox.height\r\n            });\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Animator = Graph.extend({\r\n        constructor: function(vector) {\r\n            this.vector = vector;\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend({\r\n        \r\n        props: {\r\n            enabled: true,\r\n            suspended: false,\r\n            inertia: false,\r\n            ghost: false,\r\n            bound: false,\r\n            grid: [10, 10],\r\n            axis: false,\r\n            hint: false\r\n        },\r\n\r\n        rotate: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        snaps: [\r\n\r\n        ],\r\n\r\n        trans: {\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        vector: null,\r\n        canvas: null,\r\n        \r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-draggable');\r\n\r\n            options = _.extend({\r\n                enabled: true,\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost', 'hint'], function(name){\r\n                if ( ! _.isUndefined(options[name])) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.extend(me.props, options);\r\n\r\n            if (me.vector.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.vector.on({\r\n                    transform: _.bind(me.onVectorTransform, me),\r\n                    render: _.bind(me.onVectorRender, me),\r\n                    reset: _.bind(me.onVectorReset, me)\r\n                });\r\n            }\r\n\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this, \r\n                canvas = me.vector.paper(),\r\n                options = {};\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            me.canvas = canvas;\r\n\r\n            if (canvas.scroller) {\r\n                // options.autoScroll = {\r\n                //     container: canvas.scroller.node()\r\n                // };\r\n            }\r\n\r\n            if (me.props.hint && canvas.hinter) {\r\n                canvas.hinter.register(me.vector);\r\n            }\r\n\r\n            _.extend(options, {\r\n                manualStart: me.props.ghost ? true : false,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            me.plugin = interact(me.vector.node()).draggable(options);\r\n            me.plugin.styleCursor(false);\r\n\r\n            me.plugin.on({\r\n                down: _.bind(me.onPointerDown, me),\r\n                move: _.bind(me.onPointerMove, me)\r\n            });\r\n\r\n            me.dragRotate(me.vector.props.rotate);\r\n\r\n            me.dragSnap({\r\n                mode: 'grid',\r\n                x: me.props.grid[0],\r\n                y: me.props.grid[1]\r\n            });\r\n\r\n            me.plugin.draggable(me.props.enabled);\r\n\r\n            me.render();\r\n            me.suspend();\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n            if (this.plugin) {\r\n                this.plugin.draggable(true);\r\n            }\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            if (this.plugin) {\r\n                this.plugin.draggable(false);\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            if (this.components.holder) {\r\n                this.components.holder.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n            if (this.components.holder) {\r\n                this.components.holder.addClass('visible');\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var canvas = this.canvas, // this.vector.paper(),\r\n                comp = this.components;\r\n\r\n            if (this.props.ghost) {\r\n                if ( ! comp.holder) {\r\n                    comp.holder = canvas.group();\r\n                    comp.holder.props.collectable = false;\r\n                    comp.holder.props.selectable = false;\r\n                    comp.holder.addClass('graph-dragger').removeClass('graph-elem graph-elem-group');\r\n                    this.vector.parent().append(comp.holder);\r\n                }\r\n\r\n                if ( ! comp.helper) {\r\n                    comp.helper = canvas.rect(0, 0, 0, 0);\r\n                    comp.helper.addClass('graph-dragger-helper').removeClass('graph-elem graph-elem-rect');\r\n                    comp.helper.props.collectable = false;\r\n                    comp.helper.props.selectable = false;\r\n                    comp.holder.append(comp.helper);\r\n\r\n                    comp.helper.attr({\r\n                        'fill': 'transparent',\r\n                        'stroke': '#333',\r\n                        'stroke-width': 1,\r\n                        'stroke-dasharray': '4 3'\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.redraw();\r\n        },\r\n\r\n        redraw: function() {\r\n            var comp = this.components;\r\n\r\n            this.resume();\r\n\r\n            if (comp.helper) {\r\n                var vbox = this.vector.bbox(false, false).data(),\r\n                    hbox = comp.helper.bbox(false, false).data();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                comp.helper.translate(dx, dy).apply();\r\n\r\n                comp.helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        dragRotate: function(deg) {\r\n            var rad = Graph.rad(deg);\r\n\r\n            this.rotate.deg = deg;\r\n            this.rotate.rad = rad;\r\n            this.rotate.sin = Math.sin(rad);\r\n            this.rotate.cos = Math.cos(rad);\r\n        },\r\n\r\n        dragSnap: function(snap) {\r\n            var me = this, snaps = me.snaps;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.unshift(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            if (this.plugin) {\r\n                this.plugin.setOptions('snap', {\r\n                    targets: snaps\r\n                });\r\n                \r\n                // this.plugin.setOptions('snap', {\r\n                //     targets: snaps\r\n                //     relativePoints: [\r\n                //         {x: .5, y: .5}\r\n                //     ]\r\n                // });\r\n            }\r\n\r\n            /////////\r\n            \r\n            function fixsnap(snap) {\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else if (snap.mode == 'anchor') {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.dragSnap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        dragBound: function(bound) {\r\n            /*if ( ! this.plugin) {\r\n                return;\r\n            }\r\n\r\n            if (_.isBoolean(bound) && bound === false) {\r\n                this.props.bound = false;\r\n                this.plugin.setOptions('restrict', null);\r\n                return;\r\n            }\r\n\r\n            bound = _.extend({\r\n                top: Infinity,\r\n                right: Infinity,\r\n                bottom: Infinity,\r\n                left: Infinity\r\n            }, bound || {});\r\n            \r\n            this.props.bound = _.extend({}, bound);\r\n\r\n            this.plugin.setOptions('restrict', {\r\n                restriction: bound\r\n            });\r\n\r\n            return;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onVectorTransform: function(e) {\r\n            if (e.rotate) {\r\n                this.dragRotate(this.rotate.deg + e.rotate.deg);\r\n            }\r\n        },\r\n\r\n        onVectorReset: function() {\r\n            this.dragRotate(0);\r\n        },\r\n\r\n        onPointerDown: function(e) {\r\n            this.fire('pointerdown', e, this);    \r\n        },\r\n\r\n        onPointerMove: function(e) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.ghost) {\r\n                if (i.pointerIsDown && ! i.interacting() && e.currentTarget === this.vector.node()) {\r\n                    if (this.props.suspended) {\r\n                        this.resume();\r\n                        this.redraw();\r\n                    }\r\n                    i.start({name: 'drag'}, e.interactable, this.components.helper.node());    \r\n                }    \r\n            }\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            this.vector.addClass('dragging');\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n\r\n            var edata = {\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            if (this.props.hint && this.canvas.hinter) {\r\n                this.canvas.hinter.activate(this.vector);\r\n            }\r\n\r\n            this.fire('dragstart', edata, this);\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n            var axs = this.props.axis,\r\n                deg = this.rotate.deg,\r\n                sin = this.rotate.sin,\r\n                cos = this.rotate.cos;\r\n\r\n            var dx, dy, hx, hy, tx, ty;\r\n            \r\n            dx = dy = hx = hy = tx = ty = 0;\r\n\r\n            if (axs == 'x') {\r\n                dx = hx = e.dx;\r\n                dy = hy = 0;\r\n\r\n                tx = e.dx *  cos + 0 * sin;\r\n                ty = e.dx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = e.dy;\r\n\r\n                tx = 0 *  cos + e.dy * sin;\r\n                ty = 0 * -sin + e.dy * cos;\r\n            } else {\r\n                hx = e.dx;\r\n                hy = e.dy;\r\n\r\n                dx = tx = e.dx *  cos + e.dy * sin;\r\n                dy = ty = e.dx * -sin + e.dy * cos;  \r\n            }\r\n\r\n            this.trans.dx += tx;\r\n            this.trans.dy += ty;\r\n\r\n            if (this.props.hint && this.canvas.hinter) {\r\n                this.canvas.hinter.watch(dx, dy);\r\n            }\r\n\r\n            if (this.components.helper) {\r\n                this.components.helper.translate(hx, hy).apply();\r\n            } else {\r\n                this.vector.translate(dx, dy).apply(); \r\n            }\r\n            \r\n            var edata = {\r\n                pageX: _.defaultTo(e.pageX, e.x0),\r\n                pageY: _.defaultTo(e.pageY, e.y0),\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n                \r\n                ox: hx, // _.defaultTo(e.dx, 0),\r\n                oy: hy, // _.defaultTo(e.dy, 0),\r\n                \r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragmove', edata, this);\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var dx = this.trans.dx,\r\n                dy = this.trans.dy;\r\n\r\n            if (this.props.hint && this.canvas.hinter) {\r\n                this.canvas.hinter.deactivate();\r\n            }\r\n\r\n            if (this.components.helper) {\r\n                this.vector.translate(dx, dy).apply();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            this.vector.removeClass('dragging');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragend', edata, this);\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend({\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        config: {},\r\n\r\n        constructor: function(vector, config) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n                \r\n            config = config || {};\r\n\r\n            _.forEach(['accept', 'overlap'], function(name){\r\n                me.props[name] = config[name];\r\n                delete config[name];\r\n            });\r\n\r\n            me.config = _.extend({}, config);\r\n\r\n            me.vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (me.vector.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            me.plugin = interact(me.vector.node()).dropzone({\r\n\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return true;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector.addClass('activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector.removeClass('activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector.removeClass('activate').addClass('enter');\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector.removeClass('enter').addClass('activate');\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector.removeClass('activate enter leave');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend({\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.vector = vector;\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n\r\n            console.log(this);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Network = Graph.extend({\r\n\r\n        props: {\r\n            segments: 4\r\n        },\r\n\r\n        cached: {\r\n            vertices: null\r\n        },\r\n\r\n        components: {\r\n            block: null\r\n        },\r\n\r\n        ports: [],\r\n\r\n        vector: null,\r\n        canvas: null,\r\n        rendered: false,\r\n        dragging: false,\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, delay;\r\n            \r\n            _.extend(me.props, options || {});\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-linkable');\r\n\r\n            me.initComponent();\r\n\r\n            me.vector.on({\r\n                render: function() {\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        me.render();\r\n                    }, 0);\r\n                }\r\n            });\r\n\r\n            if (me.vector.rendered) {\r\n                delay = _.delay(function(){\r\n                    clearTimeout(delay);\r\n                    me.render();\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n\r\n            comp.block = new Graph.svg.Group();\r\n            comp.block.selectable(false);\r\n            comp.block.collectable(false);\r\n            comp.block.addClass('graph-network');\r\n            comp.block.removeClass('graph-elem graph-elem-group');\r\n            \r\n            var vertices = me.vertices();\r\n            \r\n            _.forEach(vertices, function(v, i){\r\n                var p = me.createPort(v);\r\n                me.ports.push(p);\r\n            });\r\n\r\n        },\r\n\r\n        createPort: function(point) {\r\n            var matrix = this.vector.ctm(),\r\n                x = matrix.x(point.props.x, point.props.y),\r\n                y = matrix.y(point.props.x, point.props.y);\r\n\r\n            var port = new Graph.util.Port(x, y);\r\n            \r\n            port.props.weight  = point.weight;\r\n            port.props.segment = point.segment;\r\n            port.network = this;\r\n            port.vector = this.vector;\r\n            \r\n            return port;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, \r\n                comp = me.components,\r\n                vector = me.vector,\r\n                canvas = me.vector.paper();\r\n\r\n            if (me.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.rendered = true;\r\n            me.canvas = canvas;\r\n\r\n            comp.block.render(canvas);\r\n\r\n            _.forEach(me.ports, function(p){\r\n                p.render(); \r\n            });\r\n\r\n            vector.elem.on({\r\n                mouseenter: function(e) {\r\n                    me.resume();\r\n                },\r\n                mouseleave: function(e) {\r\n                    var t = Graph.$(e.relatedTarget),\r\n                        v = t.hasClass('graph-util-port') || \r\n                            t.hasClass('graph-util-port-slot') || \r\n                            t.hasClass('graph-util-pointer') || \r\n                            t.hasClass('graph-util-connector-marker');\r\n\r\n                    if ( ! v && ! me.vector.props.selected) {\r\n                        me.suspend();\r\n                    }\r\n\r\n                    t = null;\r\n                }\r\n            });\r\n\r\n            vector.on({\r\n                dragstart: _.bind(me.onVectorDragStart, me),\r\n                dragend: _.bind(me.onVectorDragEnd, me),\r\n                select: _.bind(me.onVectorSelect, me),\r\n                deselect: _.bind(me.onVectorDeselect, me),\r\n                resize: _.bind(me.onVectorResize, me)\r\n            });\r\n            \r\n            canvas.on('click', function(e){\r\n                var t = Graph.$(e.target);\r\n                if (t.hasClass('graph-linkable')) {\r\n                    return;\r\n                }\r\n                me.suspend();\r\n                t = null;\r\n            });\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this, \r\n                vector = me.vector, \r\n                matrix = me.vector.ctm(),\r\n                vertices = [];\r\n\r\n            var path, width, step, point;\r\n\r\n            if (me.vector.dirty || _.isNull(me.cached.vertices)) {\r\n                \r\n                path = vector.pathinfo().transform(vector.matrix);\r\n\r\n                switch(me.vector.type) {\r\n                    case 'ellipse':\r\n                    case 'circle':\r\n                        width = path.length();\r\n                        step = width / 8;\r\n\r\n                        point = Graph.point(path.segments[1][1], path.segments[1][2]);\r\n                        point.segment = 0;\r\n                        point.weight = 0;    \r\n                        vertices.push(point);\r\n\r\n                        for (var i = step; i <= width - step; i += step) {\r\n                            point = path.pointAt(i);\r\n                            point.segment = 0;\r\n                            point.weight = i / width;\r\n\r\n                            vertices.push(point);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        _.forEach(path.segments, function(s, i){\r\n                            var c, l, q, p, n;\r\n                            if (s[0] != 'M') {\r\n                                c = Graph.curve([s]);\r\n                                l = c.length();\r\n                                q = l / me.props.segments;\r\n                                for (n = q; n <= l; n +=q) {\r\n                                    p = c.pointAt(n, c.t(n));\r\n                                    p.segment = i;\r\n                                    p.weight = n / l;\r\n                                    vertices.push(p);\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                this.cached.vertices = vertices;\r\n            }\r\n            return this.cached.vertices;\r\n        },\r\n\r\n        component: function() {\r\n            return this.components.block;\r\n        },\r\n\r\n        suspend: function() {\r\n            if (this.components.block) {\r\n                this.components.block.removeClass('visible');    \r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.dragging) {\r\n                return;\r\n            }\r\n\r\n            if (this.vector.props.selected) {\r\n                return;\r\n            }\r\n\r\n            if (this.components.block) {\r\n                this.components.block.addClass('visible');        \r\n            }\r\n        },\r\n\r\n        port: function(index) {\r\n            return this.ports[index];\r\n        },\r\n\r\n        onVectorDragStart: function() {\r\n            this.dragging = true;\r\n            this.suspend();\r\n        },\r\n\r\n        onVectorDragEnd: function(e) {\r\n            var me = this,\r\n                ro = this.vector.props.rotate;\r\n\r\n            var rad, sin, cos, dx, dy;\r\n\r\n            if (ro) {\r\n                rad = Graph.rad(-ro),\r\n                sin = Math.sin(rad),\r\n                cos = Math.cos(rad);\r\n                dx = e.dx *  cos + e.dy * sin;\r\n                dy = e.dx * -sin + e.dy * cos;\r\n            } else {\r\n                dx = e.dx;\r\n                dy = e.dy;\r\n            }\r\n\r\n            _.forEach(me.ports, function(p){\r\n                p.translate(dx, dy);\r\n            });\r\n\r\n            me.dragging = false;\r\n            me.resume();\r\n        },\r\n\r\n        onVectorSelect: function() {\r\n            this.suspend();\r\n        },\r\n\r\n        onVectorDeselect: function() {\r\n            // this.suspend();\r\n        },\r\n\r\n        onVectorResize: function(e) {\r\n            var me = this,\r\n                path = me.vector.pathinfo().transform(me.vector.ctm());\r\n                \r\n            var current, distance, segment, curve, width, point, width, path;\r\n\r\n            switch(me.vector.type) {\r\n                case 'ellipse':\r\n                case 'circle':\r\n                    width = path.length();\r\n\r\n                    _.forEach(me.ports, function(port){\r\n                        distance = port.props.weight * width;\r\n                        point = path.pointAt(distance);\r\n                        \r\n                        if (point) {\r\n                            port.relocate(point.props.x, point.props.y);\r\n                            point = null;\r\n                        }\r\n                    });\r\n                    break;\r\n                default:\r\n                    _.forEach(me.ports, function(port){\r\n                        segment = path.segments[port.props.segment];\r\n                        if (segment) {\r\n                            if (port.props.segment !== current || ! curve) {\r\n                                curve = Graph.curve([segment]);\r\n                                width = curve.length();\r\n                            }\r\n\r\n                            distance = width * port.props.weight;\r\n                            point = curve.pointAt(distance, curve.t(distance));\r\n                            \r\n                            if (point) {\r\n                                port.relocate(point.props.x, point.props.y);\r\n                                point = null;\r\n                            }\r\n                        }\r\n\r\n                        current = port.props.segment;\r\n                    });\r\n            }\r\n\r\n            curve = null;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend({\r\n        \r\n        props: {\r\n            snap: [1, 1],\r\n            suspended: true,\r\n            handlePath: Graph.config.base + 'img/resize-control.png',\r\n            handleSize: 17\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: {}\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n            \r\n            me.vector = vector;\r\n            me.vector.addClass('graph-resizable');\r\n\r\n            me.props.handlePath = Graph.config.base + 'img/resize-control.png';\r\n            me.props.handleSize = 17;\r\n\r\n            me.cached = {\r\n                vertices: null\r\n            };\r\n\r\n            me.vector.on({\r\n                select: function() {\r\n                    if ( ! me.components.holder) {\r\n                        me.render();\r\n                        me.resume();\r\n                    } else {\r\n                        me.resume();\r\n                    }\r\n                },\r\n                deselect: function() {\r\n                    if ( ! me.props.suspended) {\r\n                        me.suspend();    \r\n                    }\r\n                },\r\n                dragstart: function(e, v) {\r\n                    me.suspend();\r\n                },\r\n                dragend: function(e, v) {\r\n                    me.resume();\r\n                    if  (v.props.selected) {\r\n                        me.redraw();\r\n                    } else {\r\n                        me.redraw();\r\n                        me.suspend();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, \r\n                comp = me.components,\r\n                canvas = me.vector.paper();\r\n\r\n            if (comp.holder) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n            \r\n            comp.holder = canvas.group();\r\n            comp.holder.addClass('graph-resizer').removeClass('graph-elem graph-elem-group');\r\n            comp.holder.props.collectable = false;\r\n            comp.holder.props.selectable = false;\r\n            me.vector.parent().append(comp.holder);\r\n\r\n            comp.helper = canvas.rect(0, 0, 0, 0);\r\n            comp.helper.addClass('graph-resizer-helper').removeClass('graph-elem graph-elem-rect');\r\n            comp.helper.props.collectable = false;\r\n            comp.helper.props.selectable = false;\r\n            comp.holder.append(comp.helper);\r\n\r\n            me.handle = {};\r\n\r\n            var snap = me.props.snap;\r\n\r\n            var handle = {\r\n                ne: {snap: snap},\r\n                se: {snap: snap},\r\n                sw: {snap: snap},\r\n                nw: {snap: snap},\r\n                 n: {snap: snap, axis: 'y'},\r\n                 e: {snap: snap, axis: 'x'},\r\n                 s: {snap: snap, axis: 'y'},\r\n                 w: {snap: snap, axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n\r\n                    comp.handle[dir] = canvas.image(me.props.handlePath, 0, 0, me.props.handleSize, me.props.handleSize);\r\n                    comp.handle[dir].props.collectable = false;\r\n                    comp.handle[dir].props.selectable = false;\r\n                    comp.handle[dir].props.dir = dir;\r\n\r\n                    comp.handle[dir].removeClass('graph-elem graph-elem-image');\r\n                    comp.handle[dir].addClass('graph-resizer-handle handle-' + dir);\r\n                    comp.handle[dir].draggable(c).on('pointerdown', function(e){\r\n                        e.stopImmediatePropagation();\r\n                    });\r\n                    \r\n                    comp.handle[dir].on('dragstart', _.bind(me.onHandleMoveStart, me));\r\n                    comp.handle[dir].on('dragmove', _.bind(me.onHandleMove, me));\r\n                    comp.handle[dir].on('dragend', _.bind(me.onHandleMoveEnd, me));\r\n\r\n                    comp.holder.append(comp.handle[dir]);\r\n                }(dir));\r\n            });\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        grid: function(dx, dy) {\r\n            this.props.snap = [dx, dy];\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this, \r\n                vertices = me.cached.vertices;\r\n\r\n            var dt, m1, m2, b1, b2, ro, p1, p2, cx, cy;\r\n\r\n            if (this.vector.dirty || ! vertices) {\r\n\r\n                m1 = me.vector.matrix.clone();\r\n                b1 = me.vector.bbox(true, false).data();\r\n                p1 = me.vector.pathinfo().transform(m1);\r\n                \r\n                ro = m1.data().rotate;\r\n                cx = b1.x + b1.width / 2;\r\n                cy = b1.y + b1.height / 2;\r\n                \r\n                m2 = Graph.matrix();\r\n                m2.rotate(-ro, cx, cy);\r\n\r\n                p2 = p1.transform(m2);\r\n                b2 = p2.bbox().data();\r\n\r\n                var bx = b2.x,\r\n                    by = b2.y,\r\n                    bw = b2.width,\r\n                    bh = b2.height,\r\n                    hw = bw / 2,\r\n                    hh = bh / 2,\r\n                    hs = me.props.handleSize / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bx + bw - hs,\r\n                        y: by - hs\r\n                    },\r\n                    se: {\r\n                        x: bx + bw - hs,\r\n                        y: by + bh - hs\r\n                    },\r\n                    sw: {\r\n                        x: bx - hs,\r\n                        y: by + bh - hs\r\n                    },\r\n                    nw: {\r\n                        x: bx - hs,\r\n                        y: by - hs\r\n                    },\r\n                    n: {\r\n                        x: bx + hw - hs,\r\n                        y: by - hs\r\n                    },\r\n                    e: {\r\n                        x: bx + bw - hs,\r\n                        y: by + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bx + hw - hs,\r\n                        y: by + bh - hs\r\n                    },\r\n                    w: {\r\n                        x: bx - hs,\r\n                        y: by + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bx,\r\n                        y: by,\r\n                        width: bw,\r\n                        height: bh\r\n                    },\r\n\r\n                    offset: {\r\n                        x: b1.x,\r\n                        y: b1.y\r\n                    }\r\n                };\r\n\r\n                me.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this, comp = me.components, dirty, vx;\r\n\r\n            if ( ! comp.holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n            \r\n            comp.helper.reset();\r\n\r\n            comp.helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n            \r\n            comp.helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).apply();\r\n\r\n            _.forOwn(comp.handle, function(h, d){\r\n                (function(h, d){\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[d]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).apply();\r\n                }(h, d));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            if (this.components.holder) {\r\n                this.components.holder.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if (this.components.holder) {\r\n                this.components.holder.addClass('visible');\r\n            }\r\n        },\r\n\r\n        onHandleMoveStart: function(e, handle) {\r\n            var me = this;\r\n\r\n            _.forOwn(me.components.handle, function(a, b){\r\n                if (a !== handle) {\r\n                    a.hide();\r\n                }\r\n            });\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleMove: function(e, handle) {\r\n            var me = this;\r\n            \r\n            var tr = this.trans,\r\n                dx = _.defaultTo(e.dx, 0),\r\n                dy = _.defaultTo(e.dy, 0);\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    me.components.helper.translate(0, dy).apply();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.components.helper.translate(dx, 0).apply();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    me.components.helper.translate(dx, dy).apply();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    me.components.helper.translate(0, dy).apply();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.components.helper.translate(dx, 0).apply();\r\n                    break;\r\n            }\r\n\r\n            me.components.helper.attr({\r\n                width: tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleMoveEnd: function(e, handle) {\r\n            var me = this,\r\n                tr = this.trans;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            var resize = me.vector.resize(sx, sy, cx, cy, dx, dy);\r\n            \r\n            me.redraw();\r\n            me.fire('resize', resize, me);          \r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Sorter = Graph.extend({\r\n\r\n        props: {\r\n            height: 0,\r\n            width: 0,\r\n            suspended: true,\r\n            enabled: true,\r\n            offsetTop: 0,\r\n            offsetLeft: 0\r\n        },\r\n\r\n        sortables: [],\r\n        origins: [],\r\n        guests: [],\r\n        batch: [],\r\n        helper: null,\r\n        \r\n        trans: {\r\n            sorting: false,\r\n            valid: false,\r\n            drag: null,\r\n            drop: null\r\n        },\r\n\r\n        components: {\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-sorter');\r\n\r\n            me.components.helper = new Graph.svg.Rect(0, 0, 0, 0);\r\n            me.components.helper.addClass('graph-sorter-helper');\r\n            me.components.helper.removeClass('graph-elem graph-elem-rect');\r\n            me.components.helper.props.selectable = false;\r\n            me.components.helper.render(me.vector);\r\n            me.components.helper.$sorter = me;\r\n            \r\n            me.sortables.push(me.components.helper);\r\n\r\n            me.vector.on({\r\n                render: _.bind(me.onVectorRender, me),\r\n                appendchild: _.bind(me.onItemAdded, me),\r\n                prependchild: _.bind(me.onItemAdded, me)\r\n            });\r\n\r\n            if (me.vector.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        // setup plugin\r\n        setup: function() {\r\n            var me = this,\r\n                vector = me.vector,\r\n                canvas = vector.paper(),\r\n                context = vector.node();\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            \r\n            me.plugin = interact('.graph-sortable', {context: context}).dropzone({\r\n                accept: '.graph-sortable',\r\n                // overlap: 'center',\r\n                overlap: .1,\r\n                // checker: _.bind(me.snapping, me),\r\n                ondropactivate: _.bind(me.onSortActivate, me),\r\n                ondropdeactivate: _.bind(me.onSortDeactivate, me),\r\n                ondragenter: _.bind(me.onSortEnter, me),\r\n                ondragleave: _.bind(me.onSortLeave, me),\r\n                ondrop: _.bind(me.onSort, me)\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n\r\n            if (canvas.collector) {\r\n                canvas.collector.on({\r\n                    afterdrag: function(e) {\r\n                        var origin = e.origin;\r\n                        if (_.indexOf(me.sortables, origin) > -1) {\r\n                           me.props.offsetTop += e.dy;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        snapping: function(drage, pointe, dropped, dropzone, dropel, draggable, dragel) {\r\n            return dropped;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n\r\n            if (this.components.helper) {\r\n                this.components.helper.focus(false);\r\n                this.components.helper.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var me = this;\r\n\r\n            me.props.suspended = false;\r\n\r\n            if (me.components.helper) {\r\n                me.components.helper.addClass('visible');\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this;\r\n\r\n            if (me.trans.valid) {\r\n\r\n                if (me.props.suspended) {\r\n                    me.resume();    \r\n                }\r\n\r\n                me.swap(me.components.helper, me.trans.drop);\r\n                me.components.helper.focus();\r\n            }\r\n        },\r\n\r\n        commit: function() {\r\n            var me = this;\r\n\r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$master  = false;\r\n                s.$sorter  = null;\r\n                s.$sorting = false;\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            \r\n            if (me.batch.length) {\r\n                me.permute();\r\n            } else {\r\n                me.swap(me.trans.drag, me.components.helper);\r\n            }\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.reset();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },\r\n\r\n        revert: function() {\r\n            var me = this;\r\n            \r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$sorting = false;\r\n                s.$sorter  = null;\r\n                s.$master  = false;\r\n            });\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            me.reset();\r\n            me.arrange();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },  \r\n\r\n        permute: function() {\r\n            var me = this,\r\n                target = _.indexOf(me.sortables, me.components.helper),\r\n                stacks = _.map(me.sortables, function(s, i){ return i; });\r\n\r\n            me.batch.sort(function(a, b){\r\n                var ta = a.offset().top,\r\n                    tb = b.offset().top;\r\n                return ta === tb ? 0 : (ta < tb ? -1 : 1);\r\n            });\r\n\r\n            orders = _.map(me.batch, function(b){\r\n                return _.indexOf(me.sortables, b);\r\n            });\r\n\r\n            var swaps  = _.difference(stacks, orders),\r\n                repos = _.indexOf(swaps, target);\r\n\r\n            _.insert(swaps, repos, orders);\r\n\r\n            me.sortables = _.permute(me.sortables, swaps);\r\n            me.arrange();\r\n        },\r\n\r\n        swap: function(source, target) {\r\n            var me = this,\r\n                from = _.indexOf(me.sortables, source),\r\n                to = _.indexOf(me.sortables, target);\r\n\r\n            _.move(me.sortables, from, to);\r\n            me.arrange();\r\n        },\r\n\r\n        arrange: function() {\r\n            var me = this;\r\n\r\n            me.props.height = 0;\r\n            me.props.width  = 0;\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                if ( ! s.$sorting) {\r\n                    var sbox = s.bbox(false, false).data(),\r\n                        dy = me.props.height- sbox.y + me.props.offsetTop;\r\n\r\n                    s.translate(0, dy).apply();\r\n                    me.props.height += sbox.height;\r\n\r\n                    if (sbox.width > me.props.width) {\r\n                        me.props.width = sbox.width;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        suspendBatch: function(batch, predicate) {\r\n            _.forEach(batch, function(b){\r\n                b.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        c.resizer.suspend();\r\n                    }\r\n                });\r\n\r\n                if (predicate) {\r\n                    predicate.call(b, b);\r\n                }\r\n            });\r\n        },\r\n\r\n        resumeBatch: function(batch) {\r\n            var me = this, timer;\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                _.forEach(batch, function(b){\r\n                    b.cascade(function(c){\r\n                        if (c.props.selected && c.resizer) {\r\n                            c.resizer.resume();\r\n                        }\r\n                    });\r\n                })\r\n            }, 0);\r\n        },\r\n\r\n        reset: function() {\r\n            this.guests = [];\r\n            this.origins = [];\r\n            this.trans.drag = null;\r\n            this.trans.sorting = false;\r\n            this.trans.valid = false;\r\n            this.trans.drop = null;\r\n        },\r\n\r\n        enroll: function(item) {\r\n            var me = this, sorter;\r\n\r\n            if (_.indexOf(me.sortables, item) === -1)  {\r\n                sorter = item.$sorter;\r\n                sorter.release(item);\r\n\r\n                if (_.indexOf(me.origins, sorter) === -1) {\r\n                    me.origins.push(sorter);\r\n                }\r\n\r\n                item.$sorter  = me;\r\n\r\n                if (item.$master) {\r\n                    me.trans.drag = item;\r\n                }\r\n                \r\n                item.off('.sorter');\r\n                item.tree.parent = me.vector;\r\n                me.vector.children().push(item);\r\n                me.guests.push(item);    \r\n            }\r\n            \r\n        },\r\n\r\n        release: function(item) {\r\n            var me = this, \r\n                sorter = item.$sorter || me;\r\n\r\n            var offset;\r\n\r\n            item.off('.sorter');\r\n            item.$sorter = null;\r\n            item.tree.parent = null;\r\n\r\n            if (item.$master) {\r\n                sorter.trans.drag = null;\r\n            }\r\n\r\n            sorter.vector.children().pull(item);\r\n            \r\n            if ((offset = _.indexOf(sorter.sortables, item)) > -1) {\r\n                sorter.sortables.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.batch, item)) > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.guests, item)) > -1) {\r\n                sorter.guests.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            var me = this, canvas = me.vector.paper();\r\n            me.setup();\r\n        },\r\n\r\n        onItemAdded: function(item) {\r\n            var me = this, delay;\r\n\r\n            if (_.indexOf(me.sortables, item) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (item.hasClass('graph-sorter-helper')) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = this;\r\n            item.addClass('graph-sortable');\r\n            \r\n            item.off('.sorter');\r\n\r\n            item.on('render.sorter',    _.bind(me.onItemRender, me));\r\n            item.on('resize.sorter',    _.bind(me.onItemResize, me));\r\n            item.on('dragstart.sorter', _.bind(me.onItemDragStart, me));\r\n            item.on('dragend.sorter',   _.bind(me.onItemDragEnd, me));\r\n            item.on('collect.sorter',   _.bind(me.onItemCollect, me));\r\n            item.on('decollect.sorter', _.bind(me.onItemDecollect, me));\r\n\r\n            me.sortables.push(item);\r\n\r\n            if (item.rendered && ! item.$sorting) {\r\n                delay = _.delay(function(){\r\n                    clearTimeout(delay);\r\n                    me.arrange();\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        onItemRender: function(e) {\r\n            var me = this, delay;\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                me.arrange();\r\n            }, 0);\r\n        },\r\n\r\n        onItemResize: function(e, item) {\r\n            var sorter = item.$sorter || this, defer;\r\n\r\n            suppress(item, true);\r\n\r\n            _.forEach(sorter.sortables, function(s){\r\n                if (s !== item) {\r\n                    s.fire('resize.sortable', e, s);\r\n                }\r\n            });\r\n\r\n            defer = _.defer(function(item){\r\n                clearTimeout(defer);\r\n                sorter.arrange();\r\n                suppress(item, false);\r\n            }, item);\r\n\r\n            /////////\r\n            \r\n            function suppress(item, state) {\r\n                item.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        var method = state ? 'suspend' : 'resume';\r\n                        c.resizer[method].call(c.resizer);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        onItemDragStart: function(e, item) {\r\n            var me = this, \r\n                bsize = me.batch.length;\r\n\r\n            var bbox;\r\n            \r\n            me.props.enabled = bsize && (bsize + 1) === me.sortables.length ? false : true;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = me;\r\n            item.$master = true;\r\n            item.$sorting = true;\r\n\r\n            me.trans.drag = item;\r\n            me.trans.sorting = true;\r\n\r\n            bbox = item.bbox(false, false).data();  \r\n            width = me.props.width;\r\n            height = bbox.height;\r\n\r\n            if (bsize) {\r\n                if ( ! item.$collector) {\r\n                    me.batch.pop().$collector.clearCollection();\r\n                    me.batch = [];\r\n                } else {\r\n                    height = 0;\r\n                    me.suspendBatch(me.batch, function(b){\r\n                        var box = b.bbox(false, false).data();\r\n                        height += box.height;\r\n\r\n                        b.$sorter = me;\r\n                        b.$sorting = true;\r\n                    });\r\n                }\r\n            }\r\n\r\n            me.components.helper.attr({\r\n                width: width,\r\n                height: height\r\n            });   \r\n        },\r\n\r\n        onItemDragEnd: function(e, item) {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (me.trans.sorting) {\r\n                if ( ! me.trans.valid) {\r\n                    me.revert();\r\n                }\r\n            } else {\r\n                me.revert();\r\n            }\r\n        },\r\n\r\n        onItemCollect: function(e, item) {\r\n            var sorter = item.$sorter || this;\r\n            sorter.batch.push(item);\r\n        },\r\n\r\n        onItemDecollect: function(e, item) {\r\n            var sorter = item.$sorter || this, offset;\r\n            offset = _.indexOf(sorter.batch, item);\r\n            if (offset > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onSortActivate: function() {},\r\n\r\n        onSortDeactivate: function() {},\r\n\r\n        onSortEnter: function(e) {\r\n            var me = this;\r\n            var drag, drop, bbox, width, height;\r\n            \r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            drag = Graph.get(e.relatedTarget);\r\n            drop = Graph.get(e.target);\r\n\r\n            if (drag.$collector) {\r\n                \r\n                height = 0;\r\n                width  = me.props.width;\r\n\r\n                _.forEach(drag.$collector.collection, function(v){\r\n                    var box;\r\n\r\n                    if (v.$sorter) {\r\n\r\n                        if (v.$sorter !== me) {\r\n                            me.enroll(v);\r\n                            me.batch.push(v);\r\n                        }\r\n                        \r\n                        box = v.bbox(false, false).data();\r\n                        height += box.height;\r\n\r\n                        if (box.width > width) {\r\n                            width = box.width;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                me.components.helper.attr({\r\n                    width: width,\r\n                    height: height\r\n                });\r\n            } else {\r\n                if (drag.$sorter) {\r\n                    if (drag.$sorter !== me) {\r\n                        if (me.batch.length) {\r\n                            me.suspendBatch(me.batch);\r\n                        }\r\n\r\n                        me.enroll(drag);\r\n\r\n                        bbox = drag.bbox(false, false).data();\r\n                        height = bbox.height;\r\n                        width = me.props.width;\r\n\r\n                        me.components.helper.attr({\r\n                            width: width,\r\n                            height: height    \r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            me.trans.drop  = drop;\r\n            me.trans.valid = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        onSortLeave: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.trans.drop = null;\r\n            me.trans.valid = false;\r\n            me.suspend();\r\n        },\r\n\r\n        onSort: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.commit();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend({\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.vector = vector;\r\n        },\r\n        transform: function(command) {\r\n            var me = this, transform = Graph.cmd2transform(command);\r\n\r\n            _.forEach(transform, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n        \r\n        apply: function(absolute) {\r\n            var me = this,\r\n                actions = this.actions,\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = this.vector.matrix.clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || me.vector.bbox(true, false).data();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || me.vector.bbox(true, false).data();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n            \r\n            this.vector.matrix = mat;\r\n            this.vector.attr('transform', mat);\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n            }\r\n\r\n            this.fire('transform', events, this);\r\n            this.actions = [];\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var guid = 0;\r\n\r\n    var Base = Graph.shape.Base = Graph.extend({\r\n        props: {},\r\n\r\n        page: null,\r\n        ports: [],\r\n        rendered: false,\r\n        connectors: [],\r\n        components: {},\r\n\r\n        tree: {\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        events: {\r\n            render: true,\r\n            resize: true,\r\n            rotate: true\r\n        },\r\n\r\n        constructor: function(config) {\r\n            var me = this;\r\n\r\n            me.props.id = 'graph-shape-' + (++guid);\r\n\r\n            _.extend(me.props, config || {});\r\n\r\n            me.tree.children = new Graph.collection.Shape();\r\n            me.initComponent();\r\n\r\n            if (me.components.group) {\r\n                me.components.group.on('render', function(){\r\n                    me.rendered = true;\r\n                    me.fire('render', me);\r\n                });\r\n            } else {\r\n                console.warn(\"Component group is required!\");\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        // @Virtual\r\n        initComponent: function() {},\r\n\r\n        parent: function() {\r\n            return this.tree.parent;\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        render: function(parent, method) {\r\n            var me = this, comp = this.components;\r\n            var drawer;\r\n\r\n            if (comp.group) {\r\n                \r\n                parent = _.defaultTo(parent, me.page);\r\n                method = _.defaultTo(method, 'append');\r\n\r\n                if (parent.canvas) {\r\n                    me.page = parent;\r\n                    drawer  = parent.canvas;\r\n                } else {\r\n                    me.page = parent.page;\r\n                    drawer  = parent.components.group;\r\n                }\r\n\r\n                me.tree.parent = parent;\r\n\r\n                switch(method) {\r\n                    case 'append':\r\n                        parent.children().push(me);\r\n                        drawer.append(comp.group);\r\n                        break;\r\n\r\n                    case 'prepend':\r\n                        parent.children().unshift(me);\r\n                        drawer.prepend(comp.group);\r\n                        break;\r\n                }\r\n            }\r\n            \r\n            return me;\r\n        },\r\n\r\n        append: function(shape) {\r\n            shape.render(this, 'append');\r\n            return shape;\r\n        },\r\n\r\n        prepend: function(shape) {\r\n            shape.render(this, 'prepend');\r\n            return shape;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.data(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (_.isUndefined(name) && _.isUndefined(value)) {\r\n                return this.props;\r\n            }\r\n            \r\n            if (_.isUndefined(value)) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        text: function() {\r\n            return this.components.text ? this.components.text.props.text : '';\r\n        },\r\n\r\n        isPage: function() {\r\n            return false;\r\n        }\r\n\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Page = Graph.shape.Page = Graph.extend({\r\n\r\n        canvas: null,\r\n        rendered: true,\r\n        tree: {\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        constructor: function() {\r\n            this.canvas = new Graph.svg.Paper(1000, 1000);\r\n            this.canvas.addClass('graph-page');\r\n            this.tree.children = new Graph.collection.Shape();\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this;\r\n            me.rendered = true;\r\n            me.canvas.render(container);\r\n            return this;\r\n        },\r\n\r\n        append: function(shape) {\r\n            shape.render(this, 'append');\r\n            return shape;\r\n        },\r\n\r\n        prepend: function(shape) {\r\n            shape.render(this, 'prepend');\r\n            return shape;\r\n        },\r\n\r\n        draw: function(/* ns, arg1, arg2, ...argN */) {\r\n            var args = _.toArray(arguments),\r\n                part = _.split(args.shift(), '.'),\r\n                tail = _.capitalize(part.pop() || ''),\r\n                name  = 'Graph.shape.' + _.join(part.concat([tail]), '.'),\r\n                clazz = Graph.ns(name);\r\n\r\n            var shape;\r\n\r\n            if (clazz) {\r\n                shape = Graph.factory(clazz, args);\r\n                shape.page = this;\r\n\r\n                // shape.tree.parent = this;\r\n                // this.children().push(shape);\r\n\r\n                // shape.render(this);\r\n            } else {\r\n                console.warn(\"Class {\" + name + \"} doesn't exists!\");\r\n                shape = null;\r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        erase: function() {\r\n\r\n        },\r\n\r\n        isPage: function() {\r\n            return true;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.shape.activity.Action = Graph.shape.Base.extend({\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            \r\n            width: 200,\r\n            height: 50,\r\n\r\n            text: 'Action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                prop = this.props;\r\n\r\n            // component: `group`\r\n            comp.group = new Graph.svg.Group();\r\n            comp.group.draggable();\r\n\r\n            comp.group.on({\r\n                render: _.bind(this.onGroupRender, this)\r\n            });\r\n\r\n            // component: `block`\r\n            comp.block = comp.group.append(new Graph.svg.Rect(0, 0, prop.width, prop.height));\r\n            comp.block.resizable();\r\n            comp.block.linkable();\r\n            comp.block.on({\r\n                resize: _.bind(this.onBlockResize, this)\r\n            });\r\n\r\n            // component: `text`\r\n            comp.text = comp.group.append(new Graph.svg.Text(0, 0, prop.text));\r\n            comp.text.selectable(false);\r\n            comp.text.clickable(false);\r\n\r\n            comp.text.on({\r\n                render: _.bind(this.onTextRender, this)\r\n            });\r\n\r\n        },\r\n\r\n        centerText: function() {\r\n            this.components.text.center(this.components.block);\r\n        },\r\n\r\n        onGroupRender: function() {\r\n            var comp = this.components;\r\n            comp.group.translate(this.props.x, this.props.y).apply();\r\n        },\r\n\r\n        onBlockResize: function() {\r\n            this.centerText();\r\n        },\r\n\r\n        onTextRender: function() {\r\n            this.centerText();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.shape.activity.Initial = Graph.shape.Base.extend({\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Pool = Graph.shape.Base.extend({\r\n        \r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            offsetTop: 0,\r\n            offsetLeft: 0\r\n        },\r\n        \r\n        constructor: function(config) {\r\n            this.$super(config);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                prop = this.props;\r\n\r\n            comp.group = new Graph.svg.Group();\r\n            comp.group.sortable();\r\n            \r\n            comp.group.addClass('graph-shape graph-shape-activity-pool');\r\n            comp.group.translate(prop.x, prop.y).apply();\r\n            comp.group.data('selectable', false);\r\n            comp.group.on('render', _.bind(this.onGroupRender, this));\r\n        },\r\n\r\n        onGroupRender: function() {\r\n            var me = this;\r\n            \r\n            me.props.offsetTop  = me.props.y;\r\n            me.props.offsetLeft = me.props.x;\r\n\r\n            me.children().each(function(lane){\r\n                console.log(lane.text());\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Swimlane = Graph.shape.activity.Swimlane = Graph.shape.Base.extend({\r\n\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n\r\n            offsetLeft: 0,\r\n            offsetTop: 0,\r\n\r\n            height: 150,\r\n            width: 200,\r\n            rotate: 0,\r\n\r\n            headerHeight: 30,\r\n\r\n            text: 'Swimlane',\r\n            textRotate: 270\r\n\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                prop = this.props;\r\n\r\n            // component `group`\r\n            comp.group = new Graph.svg.Group();\r\n            comp.group.addClass('graph-shape graph-shape-activity-swimlane');\r\n            comp.group.draggable({axis: 'y'});\r\n            comp.group.on({\r\n                'render': _.bind(this.onGroupRender, this),\r\n                'resize.sortable': _.bind(this.onGroupResize, this)\r\n            });\r\n            \r\n            // component `block (rectangle)`\r\n            comp.block = comp.group.append(new Graph.svg.Rect(0, 0, prop.width, prop.height));\r\n            comp.block.resizable();\r\n            comp.block.on({\r\n                resize: _.bind(this.onBlockResize, this),\r\n                collect: _.bind(this.onBlockCollect, this),\r\n                render: _.bind(this.onBlockRender, this)\r\n            });\r\n\r\n            // component `header`\r\n            comp.headGroup = comp.group.append(new Graph.svg.Group());\r\n            comp.headGroup.selectable(false);\r\n\r\n            comp.head = comp.headGroup.append(new Graph.svg.Rect(0, 0, prop.headerHeight, prop.height));\r\n            comp.head.selectable(false);\r\n\r\n            // component `text`\r\n            comp.text = comp.headGroup.append(new Graph.svg.Text(0, 0, prop.text));\r\n            comp.text.selectable(false);\r\n            comp.text.on({\r\n                render: _.bind(this.onTextRender, this)\r\n            });\r\n        },  \r\n\r\n        render: function(parent, method) {\r\n            var me = this;\r\n            me.$super(parent, method);\r\n            me.page.on('scroll', _.bind(me.onPageScroll, me));\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n            this.components.group.translate(dx, dy).apply();\r\n        },\r\n\r\n        rotate: function(deg, cx, cy) {\r\n\r\n        },\r\n\r\n        width: function(width) {\r\n            if (_.isUndefined(width)) {\r\n                return this.props.width;\r\n            }\r\n            this.props.width = width;\r\n            return this;\r\n        },\r\n\r\n        height: function(height) {\r\n            if (_.isUndefined(height)) {\r\n                return this.props.height;\r\n            }\r\n            this.props.height = height;\r\n            return this;\r\n        },\r\n\r\n        centerText: function() {\r\n            this.components.text.reset();\r\n            this.components.text.center(this.components.head);\r\n            this.components.text.rotate(this.props.textRotate).apply();\r\n        },\r\n\r\n        onPageScroll: function(e) {\r\n            var comp = this.components,\r\n                prop = this.props;\r\n            \r\n            if (e.dir == 'right' || e.dir == 'left') {\r\n                comp.headGroup.reset();\r\n                if (e.currX >= prop.offsetLeft) {\r\n                    comp.headGroup.translate((e.currX - prop.offsetLeft - e.origX), 0).apply();    \r\n                }\r\n            }\r\n        },\r\n\r\n        onGroupRender: function() {\r\n            var comp = this.components;\r\n            comp.group.translate(this.props.x, this.props.y).apply();\r\n        },\r\n\r\n        onGroupResize: function(e, group) {\r\n            var comp = this.components;\r\n            comp.block.attr({\r\n                width: e.width\r\n            });\r\n            comp.block.resizer.redraw();\r\n        },\r\n\r\n        onBlockRender: function() {\r\n            var comp = this.components,\r\n                data = this.props,\r\n                bbox = comp.block.bbox(false, false).data(),\r\n                bmat = comp.block.ctm();\r\n\r\n            this.props.offsetLeft = bmat.x(bbox.x, bbox.y);\r\n            this.props.offsetTop  = bmat.y(bbox.x, bbox.y);\r\n\r\n            // comp.block.attr('width', comp.block.canvas.attrs.width - data.x * 2);\r\n            // comp.block.dirty = true;\r\n        },\r\n\r\n        onBlockCollect: function(e) {\r\n            e.collect(this.components.group);\r\n            this.components.group.forward();\r\n        },\r\n\r\n        onBlockResize: function(e) {\r\n            var comp = this.components,\r\n                bbox = comp.block.bbox(false, false).data();\r\n\r\n            // resize head\r\n            comp.head.resize(1, e.sy, e.cx, e.cy, 0, 0);\r\n            \r\n            // center text\r\n            this.centerText();\r\n\r\n            this.props.width  = bbox.width;\r\n            this.props.height = bbox.height;\r\n\r\n            e.width  = this.props.width;\r\n            e.height = this.props.height;\r\n\r\n            comp.group.fire('resize', e, comp.group);\r\n        },\r\n\r\n        onTextRender: function() {\r\n            this.centerText();\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.shape.activity.Terminal = Graph.shape.Base.extend({\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Shape = Graph.extend({\r\n        \r\n        items: [],\r\n\r\n        constructor: function(shapes) {\r\n            this.items = shapes || [];\r\n        },\r\n\r\n        length: function() {\r\n            return this.items.length;\r\n        },\r\n        \r\n        push: function(shape) {\r\n            this.items.push(shape);\r\n            this.fire('push', shape, this);\r\n        },\r\n\r\n        pop: function() {\r\n\r\n        },\r\n\r\n        shift: function() {\r\n\r\n        },\r\n\r\n        unshift: function(shape) {\r\n            this.items.unshift(shape);\r\n            this.fire('unshift', shape, this);\r\n        },\r\n\r\n        last: function() {\r\n            return _.last(this.items);\r\n        },\r\n\r\n        each: function(predicate) {\r\n            var me = this;\r\n            _.forEach(me.items, function(c, i){\r\n                (function(c){\r\n                    predicate.call(c, c, i);\r\n                }(c));\r\n            });\r\n        }\r\n    });\r\n\r\n}());"],"sourceRoot":"/source/"}