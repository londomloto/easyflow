{"version":3,"sources":["poly.js","core.js","util.js","loader.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","link.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","collector.js","dragger.js","dropper.js","sorter.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","exporter.js","activity.js","diagram.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","CACHE_SIZE","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","chr","charCodeAt","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","substr","layout","router","link","plugin","proto","diagram","console","log","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","util","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","max","min","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","l","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","i18n","isLocal","protocol","fetch","ajax","url","dataType","async","done","json","graph","","domain","plural_forms","assign","Jed","locale_data","initializing","defaults","$super","Object","init","prop","me","listeners","classdef","superdef","inherits","once","o","part","fire","orig","one","off","rgex","slice","RegExp","escapeRegExp","event","isString","Event","originalData","originalType","publisher","onces","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","preventDefault","isEvent","ESC","ENTER","DELETE","SHIFT","fix","original","originalEvent","position","clientX","clientY","relative","clone","invert","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","rd","si","rx","ry","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","curve","intersectnum","isCurve","BBox","pathinfo","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","offset","pull","reverse","methods","method","Shape","shapes","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","domParser","REGEX_SVG_BUILDER","selector","context","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","getBoundingClientRect","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","resizer","reactor","dragger","dropper","network","history","sorter","panzoom","toolmgr","toolpad","snapper","editor","utils","originalBBox","elem","createElementNS","Transformer","onTransformTranslate","onTransformRotate","onTransformScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","globalMatrix","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","resize","onResizerResize","draggable","Dragger","dragstart","onDraggerStart","dragmove","onDraggerMove","dragend","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","sortable","Sorter","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","removeAttribute","cursor","predicate","added","removed","removal","pullAll","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","viewport","isViewport","setContext","attach","isContainer","isRendered","isTraversable","ancestors","descendants","lasso","decollect","destroy","unregister","select","batch","resume","deselect","suspend","animate","duration","easing","callback","label","sendToFront","sendToBack","isGroup","isSelectable","isDraggable","isResizable","isConnectable","isSnappable","tool","syncDragStart","syncDragMove","syncDragEnd","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","onPointerDown","onKeynavDown","onKeynavUp","listenLinkUpdate","listenLinkRemove","listenShapeDraw","vp","flush","activate","selections","removeSelection","connect","isShape","provider","createRouter","createLink","addPallet","bindPaper","removePallet","unbindPaper","parse","links","save","alert","keyCode","saveAsImage","filename","exporter","Exporter","exportPNG","saveAsBlob","exportBlob","arrangeLinks","arrangeShapes","ellipse","circle","rect","polyline","polygon","image","arg","storage","Registry","keys","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smootness","grabVector","grabLink","grabLocation","dragSnapping","mode","convex","idx","sweeper","Sweeplink","findConvex","updateConvex","removeConvex","Router","waypoints","bendpoints","bending","route","repair","component","port","relocate","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","srcnet","srcbox","sbound","tarnet","tarbox","tbound","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","bends","repaired","ranges","sourceBox","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","Link","labelDistance","labelX","labelY","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatDragStart","onCoatDragEnd","onCoatEdit","onCoatBeforeEdit","onCoatRemove","onLabelRender","onLabelDragend","labelVendor","vendor","onLabelDoubletap","tools","title","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","bindSource","bindTarget","unbindSource","unbindTarget","addLink","disconnect","update","silent","redraw","bound","isNull","resumeControl","suspendControl","renderControl","removeLink","near","startEdit","onSourceRotate","onSourceDragstart","onSourceDragmove","onSourceDragend","onSourceResize","onTargetRotate","onTargetDragstart","onTargetDragmove","onTargetDragend","onTargetResize","linkid","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","drag","createTree","findIndex","swap","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","contextId","enable","disable","definitions","holder","defineArrowMarker","marker","vendors","navigationKeys","CTRL","interact","currentTarget","isNavigation","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","suspended","handleImage","handleSize","helper","handle","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleMoveStart","onHandleMove","onHandleMoveEnd","hs","hw","hh","rmatrix","oldcen","newcen","vdx","vdy","rubber","collecting","styleCursor","manualStart","onstart","onmove","onend","single","clearCollection","interaction","pointerIsDown","interacting","action","prepared","setEventXY","startCoords","pointers","except","syncdrag","tdx","tdy","inertia","grid","dragClass","rotation","scaling","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerMove","vbox","hbox","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","edata","axs","edx","edy","pageX","pageY","ex","ey","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","offsetTop","offsetLeft","sortables","origins","guests","sorting","drop","$sorter","appendchild","onItemAdded","prependchild","onSortActivate","onSortDeactivate","onSortEnter","onSortLeave","onSort","afterdrag","drage","pointe","$master","$sorting","resumeBatch","revert","ta","tb","orders","swaps","repos","sbox","suspendBatch","enroll","release","onItemRender","onItemResize","onItemDragStart","onItemDragEnd","onItemCollect","onItemDecollect","suppress","bsize","relatedTarget","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_RESET","CLS_CONNECT_CLEAR","CLS_CONNECT_HOVER","wiring","linking","pole","cables","pairs","invalidateTrans","canConnect","refbox","isSource","isTarget","pair","conn","hasConnection","getConnection","connections","conns","opts","History","limit","lim","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","moveHandler","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","pointer","visits","anchor","build","cropping","spath","scrop","tpath","tcrop","coord","crop","deactivateAll","deactivate","toggle","drawing","draw","coords","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","OFFSET_TRESHOLD","editing","commitHandler","onDoubleTap","snapped","clients","stubx","stuby","client","clientId","dragStartHandler","dragEndHandler","removeHandler","osnaps","onClientDragStart","onClientDragEnd","onClientRemove","getClientCenter","showStub","hideStub","stub","diffx","diffy","snapx","snapy","pt","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onToolClick","meta","body","innerMatrix","outerMatrix","innerBBox","outerBBox","onConfigToolClick","onLinkToolClick","manager","addChild","removeChild","addChild_","removeChild_","srcmat","currentId","bbox1","bbox2","onLabelEdit","onSelect","onDeselect","onResize","onRemove","activity","Start","Final","inner","Action","Fork","Join","TRANSFER_RECEIVE","Lane","header","pool","transfer","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","Pool","startHandler","onTransferStart","onTransferEnd","bringToFront","maps","addSiblingAbove","createSpaceAbove","addSiblingBellow","createSpaceBellow","translateBy","resizeBy","moveUp","moveDown","shapeComp","lanes","lane","laneIndex","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","exportDataURI","exportSVG","exportJPEG","Activity","template","onShapeClick","Diagram","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-ios-shuffle-strong',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hash = 0, chr, len, i;\r\n        \r\n        if ( ! str.length) {\r\n            return hash;\r\n        }\r\n\r\n        for (i = 0, len = str.length; i < len; i++) {\r\n            chr   = str.charCodeAt(i);\r\n            hash  = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram[_.capitalize(name)];\r\n        diagram = Graph.factory(clazz, [options]);\r\n        console.log(diagram);\r\n    };\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                (function(){\r\n                    handler.call(null, message, scope);\r\n                }(handler));\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            } else {\r\n                Graph.cached.paper = null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n\r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n\r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var isLocal = /file/.test(location.protocol);\r\n    var i18n;\r\n\r\n    if (isLocal) {\r\n        i18n = {\r\n            translate: function(message) {\r\n                return {\r\n                    fetch: function() {\r\n                        return message;\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    } else {\r\n        \r\n        $.ajax({\r\n            url: Graph.config.base + 'i18n/languages/' + Graph.config.locale + '.json',\r\n            type: 'GET',\r\n            dataType: 'json',\r\n            async: false\r\n        })\r\n        .done(function(json){\r\n            var data = {\r\n                graph: {\r\n                    '': {\r\n                        domain: 'graph',\r\n                        lang: Graph.config.locale,\r\n                        plural_forms: 'nplurals=2; plural=(n != 1)'\r\n                    }\r\n                }\r\n            };\r\n\r\n            _.assign(data.graph, json);\r\n            \r\n            i18n = new Jed({\r\n                domain: 'graph',\r\n                locale_data: data\r\n            });\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    Graph._ = function(message) {\r\n        return i18n.translate(message).fetch();\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var initializing = false;\r\n    // var inherit = /xyz/.test(function(){ xyz; }) ? /\\$super/ : /.*/;\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() {\r\n        return 'Graph.lang.Class';\r\n    };\r\n\r\n    Class.defaults = {};\r\n\r\n    Class.extend = function(config) {\r\n        var $super, proto, name, value, defaults;\r\n        \r\n        $super = this.prototype;\r\n        defaults = {};\r\n        \r\n        initializing = true;\r\n        \r\n        // proto = new this();\r\n        proto = Object.create($super);\r\n\r\n        initializing = false;\r\n        \r\n        var name;\r\n\r\n        for (name in config) {\r\n            value = config[name];\r\n            if ( ! _.isFunction(value)) {\r\n\r\n                proto[name] = value;\r\n                defaults[name] = value;\r\n                \r\n            } else {\r\n                proto[name] = value;\r\n\r\n                // NOTE: perfomance penalty!!!\r\n                // ---------------------------\r\n                // proto[name] = _.isFunction($super[name])  && inherit.test(value) \r\n                //     ? (function(name, func){\r\n                //         return function() {\r\n                //             var tmp, ret;\r\n                //             tmp = this.$super;\r\n                //             this.$super = $super[name];\r\n                //             ret = func.apply(this, arguments);\r\n                //             this.$super = tmp;\r\n                //             return ret;\r\n                //         };\r\n                //     }(name, value)) : value;\r\n            }\r\n        }\r\n\r\n        var clazz, init;\r\n\r\n        if ( ! _.isUndefined(proto.constructor)) {\r\n            init = proto.constructor;\r\n            delete proto.constructor;\r\n        }\r\n\r\n        clazz = function() {\r\n\r\n            var me = this;\r\n            var prop, value;\r\n\r\n            me.listeners = {};\r\n\r\n            var classdef = me.constructor.defaults,\r\n                superdef = me.superclass.defaults;\r\n\r\n            var inherits = {};\r\n\r\n            if (superdef) {\r\n                for(prop in superdef) {\r\n                    me[prop] = _.cloneDeep(superdef[prop]);\r\n                    inherits[prop] = true;\r\n                }\r\n            }\r\n\r\n            if (classdef) {\r\n                for(prop in classdef) {\r\n                    value = _.cloneDeep(classdef[prop]);\r\n                    if (inherits[prop]) {\r\n                        if (_.isPlainObject(value) || _.isArray(value)) {\r\n                            _.assign(me[prop], value);\r\n                        }\r\n                    } else {\r\n                        me[prop] = value;    \r\n                    }\r\n                }\r\n            }\r\n\r\n            inherits = superdef = classdef = null;\r\n            \r\n            // if ( ! initializing && init) {\r\n            init && init.apply(me, arguments);\r\n            // }\r\n        };\r\n\r\n        // statics\r\n        clazz.extend = Class.extend;\r\n        clazz.defaults = defaults;\r\n\r\n        // instance\r\n        clazz.prototype = proto;\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.prototype.superclass = $super.constructor;\r\n        \r\n        clazz.prototype.on = function(type, handler, once) {\r\n            var me = this, data;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    if (_.isPlainObject(h)) {\r\n                        var o = h;\r\n                        h = o.handler;\r\n                        s = o.once;\r\n                        me.on(t, h, s);\r\n                    } else {\r\n                        me.on(t, h, false);\r\n                    }\r\n                });\r\n                return me;\r\n            }\r\n\r\n            var part = _.split(type, '.'),\r\n                fire = part.shift();\r\n\r\n            me.listeners[fire] = me.listeners[fire] || [];\r\n            \r\n            once = _.defaultTo(once, false);\r\n\r\n            data = {\r\n                type: type,\r\n                once: once,\r\n                orig: handler,\r\n                func: _.bind(handler, this)\r\n            };\r\n\r\n            me.listeners[fire].push(data);\r\n            return this;\r\n        };\r\n\r\n        clazz.prototype.one = function(type, handler) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    me.on(t, h, true);\r\n                });\r\n                return me;\r\n            }\r\n\r\n            return me.on(type, handler, true);\r\n        };\r\n\r\n        /**\r\n         * Unregister event handler\r\n         */\r\n        clazz.prototype.off = function(type, handler) {\r\n            var part, fire, lsnr, rgex;\r\n            \r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = fire ? (this.listeners[fire] || []).slice() : [];\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n            \r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n            \r\n            if (lsnr.length) {\r\n                for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                    if (handler) {\r\n                        if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    } else {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var me = this;\r\n                for (fire in me.listeners) {\r\n                    (function(lsnr){\r\n                        for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                            if (handler) {\r\n                                if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            } else {\r\n                                if (rgex.test(lsnr[i].type)) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }(me.listeners[fire]))\r\n                }\r\n            }\r\n\r\n            rgex = null;\r\n            lsnr = null;\r\n            \r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Execute event handler\r\n         */\r\n        clazz.prototype.fire = function(type, data) {\r\n            var func = clazz.prototype.fire;\r\n            var args = [];\r\n            var event, part, fire, lsnr, rgex;\r\n\r\n            if (_.isString(type)) {\r\n                event = new Graph.lang.Event(type, data);\r\n            } else {\r\n                event = type;\r\n                event.originalData = event.originalData || {};\r\n                type = event.originalType || event.type;\r\n            }\r\n\r\n            // add default publisher props for later use\r\n            event.publisher = this;\r\n            \r\n            args.push(event);\r\n\r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = (this.listeners[fire] || []).slice();\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n\r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n\r\n            var onces = [];\r\n\r\n            if (lsnr.length) {\r\n                for (var i = 0, ii = lsnr.length; i < ii; i++) {\r\n                    if (fire != type) {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            if (lsnr[i].once) {\r\n                                onces.push(lsnr[i]);\r\n                            }\r\n                            lsnr[i].func.apply(lsnr[i].func, args);\r\n                        }\r\n                    } else {\r\n                        if (lsnr[i].once) {\r\n                            onces.push(lsnr[i]);\r\n                        }\r\n\r\n                        lsnr[i].func.apply(lsnr[i].func, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                var me = this;\r\n                _.forEach(onces, function(lsnr){\r\n                    me.off(lsnr.type, lsnr.orig);\r\n                });\r\n            }\r\n\r\n            rgex = lsnr = null;\r\n            return event;\r\n        };\r\n\r\n        return clazz;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.defaults = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n    \r\n    Evt.defaults = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n    \r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;    \r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n    \r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n    \r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Line.toString = function() {\r\n        return \"function(x1, y1, x2, y2)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n            \r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n        \r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.defaults = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n    \r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({x: 0, y: 0, x2: 0, y2: 0, width: 0, height: 0}, bounds || {});\r\n    };\r\n\r\n    BBox.defaults = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n    \r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.pathinfo = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y], \r\n            ['l', prop.width, 0], \r\n            ['l', 0, prop.height], \r\n            ['l', -prop.width, 0], \r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  && \r\n                          dot[0] <= bbox.x2 && \r\n                          dot[1] >= bbox.y  && \r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n            \r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n        \r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n        \r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n        \r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n    \r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.pathinfo().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.pathinfo().intersection(path.pathinfo(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.pathinfo().intersectnum(path.pathinfo());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.pathinfo().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.pathinfo().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.pathinfo().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.pathinfo();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.pathinfo(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Path.toString = function() {\r\n        return 'function(d)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.defaults = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n        \r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var \r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e], \r\n                [this.props.b, this.props.d, this.props.f], \r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e], \r\n                [b, d, f], \r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n\r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e], \r\n                [a.props.b, a.props.d, a.props.f], \r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;    \r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        if (angle === undefined) {\r\n            \r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad\r\n            };\r\n        }\r\n\r\n        angle = Graph.util.rad(angle);\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n\r\n        var cos = +Math.cos(angle).toFixed(9),\r\n            sin = +Math.sin(angle).toFixed(9);\r\n\r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n        \r\n        return this;\r\n    };\r\n        \r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            rotate: skewX,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" + \r\n           \"M11=\" + this.get('a') + \", \" + \r\n           \"M12=\" + this.get('c') + \", \" + \r\n           \"M21=\" + this.get('b') + \", \" + \r\n           \"M22=\" + this.get('d') + \", \" + \r\n           \"Dx=\"  + this.get('e') + \", \" + \r\n           \"Dy=\"  + this.get('f') + \", \" + \r\n           \"sizingmethod='auto expand'\"  + \r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')], \r\n            [this.get('b'), this.get('d'), this.get('f')], \r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };  \r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a, \r\n            this.props.b, \r\n            this.props.c, \r\n            this.props.d, \r\n            this.props.e, \r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n    \r\n    var Registry = Graph.extend({\r\n        \r\n        context: {},\r\n\r\n        constructor: function() {\r\n            this.context = context;\r\n        },\r\n\r\n        register: function(vector) {\r\n            var id = vector.guid(), found = this.get(id);\r\n            \r\n            if (found !== vector) {\r\n                // vector.on('resize', function(){\r\n                //     if (vector.isConnectable()) {\r\n                //         var delay = _.delay(function(){\r\n                //             clearTimeout(delay);\r\n                //             Graph.registry.link.synchronize(vector);\r\n                //         }, 1);\r\n                //     }\r\n                // });\r\n\r\n                // vector.on('translate', function(){\r\n                //     if (vector.isConnectable()) {\r\n                //         var delay = _.delay(function(){\r\n                //             clearTimeout(delay);\r\n                //             Graph.registry.link.synchronize(vector);\r\n                //         }, 1);\r\n                //     }\r\n                // });\r\n            }\r\n\r\n            storage[id] = vector;\r\n        },\r\n\r\n        unregister: function(vector) {\r\n            var id = vector.guid();\r\n            if (storage[id]) {\r\n                delete storage[id];\r\n            }\r\n\r\n            if (context[id]) {\r\n                delete context[id];\r\n            }\r\n        },\r\n\r\n        setContext: function(id, scope) {\r\n            if (storage[id]) {\r\n                context[id] = scope;\r\n            }\r\n        },\r\n\r\n        count: function() {\r\n            return _.keys(storage).length;\r\n        },\r\n\r\n        toArray: function() {\r\n            var keys = _.keys(storage);\r\n            return _.map(keys, function(k){\r\n                return storage[k];\r\n            });\r\n        },\r\n\r\n        get: function(key) {\r\n\r\n            if (_.isUndefined(key)) {\r\n                return this.toArray();\r\n            }\r\n\r\n            if (key instanceof SVGElement) {\r\n                if (key.tagName == 'tspan') {\r\n                    // we only interest to text\r\n                    key = key.parentNode;\r\n                }\r\n                key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n            } else if (key instanceof Graph.dom.Element) {\r\n                key = key.data(Graph.string.ID_VECTOR);\r\n            }\r\n            return storage[key];\r\n        },\r\n\r\n        collect: function(scope) {\r\n            var vectors = [];\r\n            for (var id in context) {\r\n                if (context[id] == scope && storage[id]) {\r\n                    vectors.push(storage[id]);\r\n                }\r\n            }\r\n            return vectors;\r\n        },\r\n\r\n        wipe: function(paper) {\r\n            var pid = paper.guid();\r\n\r\n            for (var id in storage) {\r\n                if (storage.hasOwnProperty(id)) {\r\n                    if (storage[id].tree.paper == pid) {\r\n                        delete storage[id];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (storage[pid]) {\r\n                delete storage[pid];\r\n            }\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.registry.Vector';\r\n        }\r\n\r\n    });\r\n\r\n    /**\r\n     * Singleton vector manager\r\n     */\r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            width: 0,\r\n            height: 0,\r\n            label: ''\r\n        },\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            name: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null\r\n        },\r\n\r\n        cached: {\r\n            innerMatrix: null,\r\n            outerMatrix: null,\r\n            innerBBox: null,\r\n            outerBBox: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE;\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n                \r\n                this.component().addClass(style);\r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config', \r\n                    icon: Graph.icons.CONFIG, \r\n                    title: Graph._('Click to config shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link', \r\n                    icon: Graph.icons.LINK, \r\n                    title: Graph._('Click to start shape linking'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.innerMatrix = null;\r\n            this.cached.outerMatrix = null;\r\n            this.cached.innerBBox = null;\r\n            this.cached.outerBBox = null;\r\n        },\r\n\r\n        provider: function(plugin) {    \r\n            var provider;\r\n\r\n            switch(plugin) {\r\n                case 'network':\r\n                case 'resizer':\r\n                case 'dragger':\r\n                case 'snapper':\r\n                    provider = this.components.block;\r\n                    break;\r\n                default:\r\n                    provider = this.components.block;\r\n                    break;\r\n            }\r\n\r\n            return Graph.registry.vector.get(provider);\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        addChild: function(shape) {\r\n            var parent = shape.parent();\r\n\r\n            if (parent) {\r\n                parent.removeChild(shape);\r\n            }\r\n\r\n            this.children().push(shape);\r\n            shape.tree.parent = this.guid();\r\n\r\n            if (this.components.child) {\r\n                this.component('child').append(shape.component());\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        removeChild: function(shape) {\r\n            this.children().pull(shape);\r\n            shape.tree.parent = null;\r\n\r\n            var paper = shape.paper();\r\n\r\n            if (paper) {\r\n                paper.viewport().append(shape.component());\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        addChild_: function(child, relocate) {\r\n            this.children().push(child);\r\n            child.tree.parent = this.guid();\r\n\r\n            if (this.components.child) {\r\n                var context = this.component(),\r\n                    target = this.component('child'),\r\n                    source = child.component();\r\n                \r\n                // sync vector tree\r\n                target.children().push(source);\r\n                source.tree.parent = target.guid();\r\n\r\n                relocate = _.defaultTo(relocate, true);\r\n\r\n                if (relocate) {\r\n\r\n                    target.elem.append(source.elem);\r\n\r\n                    var matrix = source.innerMatrix(context);\r\n\r\n                    source.graph.matrix = matrix;\r\n                    source.attr('transform', matrix.toValue());\r\n                    source.dirty(true);\r\n\r\n                    // update child props\r\n                    _.assign(child.props, {\r\n                        left: matrix.props.e,\r\n                        top:  matrix.props.f\r\n                    });\r\n\r\n                    matrix = null;\r\n                }\r\n            }\r\n        },\r\n\r\n        removeChild_: function(child, relocate) {\r\n            // sync shape tree\r\n            this.children().pull(child);\r\n            child.tree.parent = null;\r\n\r\n            // sync vector tree => revert back to paper\r\n            var paper = child.paper();\r\n\r\n            if (paper) {\r\n                var source = child.component(),\r\n                    target = paper.viewport();\r\n\r\n                // need relocate node ?\r\n                relocate = _.defaultTo(relocate, true);\r\n\r\n                if (relocate) {\r\n                    var context = this.component(),\r\n                        srcmat = Graph.matrix();\r\n\r\n                    source.bubble(function(curr){\r\n                        srcmat.multiply(curr.matrix());\r\n                        if (curr === context) {\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    source.graph.matrix = srcmat;\r\n                    source.attr('transform', srcmat.toValue());\r\n                    source.dirty(true);\r\n\r\n                    // update child props\r\n                    _.assign(child.props, {\r\n                        left: srcmat.props.e,\r\n                        top: srcmat.props.f\r\n                    });\r\n\r\n                    srcmat = null;\r\n\r\n                    target.children().push(source);\r\n                    source.tree.parent = target.guid();    \r\n                    target.elem.append(source.elem);\r\n\r\n                } else {\r\n                    target.children().push(source);\r\n                    source.tree.parent = target.guid();    \r\n                }\r\n            }\r\n        },\r\n        \r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            var me = this;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.data(k, v);\r\n                });\r\n                return me;\r\n            }\r\n            \r\n            if (value === undefined) {\r\n                return me.props[name];\r\n            }\r\n            \r\n            me.props[name] = value;\r\n            return me;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        innerMatrix: function() {\r\n            var paper = this.paper();\r\n            var matrix;\r\n\r\n            if (paper) {\r\n                matrix = this.cached.innerMatrix;\r\n\r\n                if ( ! matrix) {\r\n\r\n                    var context = paper.viewport(),\r\n                        contextId = context.guid(),\r\n                        current = this.component(),\r\n                        currentId = current.guid(),\r\n                        component = this.component(),\r\n                        outerMatrix = Graph.matrix();\r\n\r\n                    component.bubble(function(curr){\r\n                        var guid = curr.guid();\r\n\r\n                        if (guid == contextId) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (guid != currentId) {\r\n                            outerMatrix.multiply(curr.matrix());    \r\n                        }\r\n                    });\r\n\r\n                    outerMatrix.invert();\r\n                    matrix = component.matrix().clone().multiply(outerMatrix);\r\n\r\n                    this.cached.innerMatrix = matrix;\r\n\r\n                    outerMatrix = null;\r\n                }\r\n            } else {\r\n                matrix = this.matrix();\r\n            }\r\n\r\n            return matrix.clone();\r\n        },\r\n\r\n        outerMatrix: function() {\r\n            var paper = this.paper();\r\n            var matrix;\r\n\r\n            if (paper) {\r\n                matrix = this.cached.outerMatrix;\r\n\r\n                if ( ! matrix) {\r\n                    var context = paper.viewport(),\r\n                        contextId = context.guid(),\r\n                        component = this.component();\r\n\r\n                    matrix = Graph.matrix();\r\n\r\n                    component.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n\r\n                    this.cached.outerMatrix = matrix;\r\n\r\n                    context = component = null;\r\n                }\r\n            } else {\r\n                matrix = this.matrix();\r\n            }\r\n\r\n            return matrix.clone();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        innerBBox: function() {\r\n            var bbox = this.cached.innerBBox;\r\n        },\r\n\r\n        outerBBox: function() {\r\n            var bbox = this.cached.outerBBox;\r\n\r\n            if ( ! bbox) {\r\n                var matrix = this.outerMatrix(),\r\n                    path = this.component().pathinfo().transform(matrix);\r\n\r\n                bbox = path.bbox();\r\n                this.cached.outerBBox = bbox;\r\n            }\r\n\r\n            return bbox.clone();\r\n        },\r\n\r\n        contains: function(shape) {\r\n            var bbox1, bbox2;\r\n\r\n            bbox1 = this.outerBBox();\r\n            bbox2 = shape.outerBBox();\r\n\r\n            return bbox1.contains(bbox2);\r\n        },\r\n\r\n        render: function(paper) {\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n            \r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n        \r\n        redraw: _.debounce(function() {\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2, \r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n        \r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n            \r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var paper = this.paper();\r\n            paper.viewport().elem.append(this.component().elem);\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n            \r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n            \r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n        \r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n            \r\n            return this.attr('height', value);\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n            \r\n            return this.attr('left', value);\r\n        },\r\n        \r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n            \r\n            return this.attr('top', value);\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n            this.component('label').props.text = text;\r\n            this.redraw();\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var shape = this.component();\r\n            shape.addClass('shape-dragging');\r\n        },\r\n        \r\n        onDragEnd: function(e) {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                matrix = block.matrix();\r\n\r\n            block.reset();\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            \r\n            // update props\r\n            var matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n\r\n            shape.removeClass('shape-dragging');\r\n        },\r\n        \r\n        onSelect: function() {\r\n            this.component('shape').addClass('shape-selected');\r\n            Graph.topic.publish('shape/select', {shape: this});\r\n        },\r\n\r\n        onDeselect: function() {\r\n            this.component('shape').removeClass('shape-selected');\r\n            Graph.topic.publish('shape/deselect', {shape: this});\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n        \r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n            \r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n        \r\n        onConfigToolClick: function(e) {\r\n            \r\n        },\r\n        \r\n        onTrashToolClick: function(e) {\r\n            this.remove();\r\n        },\r\n        \r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n            \r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.grabLocation(e);\r\n                \r\n                paper.tool().activate('linker');\r\n                linker.start(this.provider('network'), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Shape.guid = 0;\r\n\r\n    Shape.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.count = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        return this.query.offset();\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function() {\r\n        this.query.focus();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Ellipse.toString = function() {\r\n        return \"function(cx, cy, rx, ry)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Circle.toString = function() {\r\n        return \"function(cx, cy, r)\";\r\n    };  \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.pathinfo();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Rect.toString = function() {\r\n        return 'function(x, y, width, height, r)';\r\n    };\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polyline.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.pathinfo().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polygon.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Group.toString = function() {\r\n        return 'function(x, y)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n\r\n                rows[0].attr('dy', 0);\r\n\r\n                // var box = this.bbox().toJson(),\r\n                //     off = this.attrs.y - (box.y + box.height / 2);\r\n\r\n                // if (off) {\r\n                //     rows[0].setAttribute('dy', off);    \r\n                // }\r\n                \r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Text.toString = function() {\r\n        return 'function(x, y, text)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Image.toString = function() {\r\n        return 'function(src, x, y, width, height)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        constructor: function(width, height, options) {\r\n            var me = this;\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n            \r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n            \r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n\r\n            me.on('pointerdown', _.bind(me.onPointerDown, me));\r\n            me.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            me.on('keynavup', _.bind(me.onKeynavUp, me));\r\n            \r\n            // subscribe topics\r\n            Graph.topic.subscribe('link/update', _.bind(me.listenLinkUpdate, me));\r\n            Graph.topic.subscribe('link/remove', _.bind(me.listenLinkRemove, me));\r\n            Graph.topic.subscribe('shape/draw',  _.bind(me.listenShapeDraw, me));\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n            \r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-origin\">' + \r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' + \r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' + \r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' + \r\n                    '</g>'\r\n                );\r\n                \r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n            \r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n            \r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this, \r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n            \r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n            \r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n                \r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n                    \r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n                \r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        selections: function() {\r\n            return this.plugins.collector.selections;\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selections = this.plugins.collector.collection;\r\n            \r\n            for (var v, i = selections.length - 1; i >= 0; i--) {\r\n                v = selections[i];\r\n                selections.splice(i, 1);\r\n                v.remove();\r\n            }\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n\r\n        connect: function(source, target, start, end, options) {\r\n            var layout, router, link;\r\n\r\n            if (start) {\r\n                if ( ! Graph.isPoint(start)) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;    \r\n                }\r\n            }\r\n\r\n            source = Graph.isShape(source) ? source.provider('network') : source;\r\n            target = Graph.isShape(target) ? target.provider('network') : target;\r\n            layout = this.layout();\r\n            router = layout.createRouter(source, target, options);\r\n            \r\n            link = layout.createLink(router);\r\n            \r\n            link.connect(start, end);\r\n            link.render(this);\r\n\r\n            return link;\r\n        },\r\n        \r\n        addPallet: function(pallet) {\r\n            pallet.bindPaper(this);\r\n        },\r\n        \r\n        removePallet: function(pallet) {\r\n            pallet.unbindPaper(this);\r\n        },\r\n\r\n        parse: function(json) {\r\n            var paper  = this;\r\n            var shapes = {};\r\n\r\n            _.forEach(json.shapes, function(o){\r\n                (function(o){\r\n                    var s = Graph.shape(o.type, o.data);\r\n                    s.render(paper);\r\n                    shapes[o.data.id] = s;    \r\n                }(o));\r\n            });\r\n\r\n            _.forEach(json.links, function(o){\r\n                (function(o){\r\n                    paper.connect(shapes[o.source], shapes[o.target]);\r\n                }(o))\r\n            });\r\n\r\n        },\r\n\r\n        save: function() {\r\n            alert('save');\r\n        },\r\n\r\n        diagram: function(diagram) {\r\n            if (diagram !== undefined) {\r\n\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onPointerDown: function(e) {\r\n\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.DELETE:\r\n                    me.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n\r\n                case Graph.event.SHIFT:\r\n                    \r\n                    break;\r\n\r\n                case Graph.event.ESC:\r\n\r\n                    break;\r\n            }   \r\n\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.SHIFT:\r\n\r\n                    break;\r\n            }\r\n        },\r\n\r\n        saveAsImage: function(filename) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            exporter.exportPNG(filename);\r\n            exporter = null;\r\n        },\r\n        \r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        /**\r\n         * save workspace\r\n         */\r\n        save: function() {\r\n\r\n        },\r\n\r\n        ///////// TOPIC LISTENERS /////////\r\n        \r\n        listenLinkUpdate: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n        \r\n        listenLinkRemove: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10),\r\n\r\n        listenShapeDraw: _.debounce(function() {\r\n            this.layout().arrangeShapes();\r\n        }, 1)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Paper.toString = function() {\r\n        return 'function( width, height )';\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n        \r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: null,\r\n            labelX: null,\r\n            labelY: null,\r\n            source: null,\r\n            target: null,\r\n            connected: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n        \r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n        \r\n        router: null,\r\n        \r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            options = _.extend({\r\n                id: 'graph-link-' + (++Link.guid)\r\n            }, options || {});\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.guid = this.props.id; // Graph.uuid();\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n            \r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n            \r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n                \r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n            \r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('dragstart.link', _.bind(this.onCoatDragStart, this));\r\n            coat.on('dragend.link', _.bind(this.onCoatDragEnd, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('remove.link', _.bind(this.onCoatRemove, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-arrow)')\r\n                .render(block);\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n            \r\n            label.draggable({ghost: true});\r\n            \r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('dragend.link', _.bind(this.onLabelDragend, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n                \r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n                \r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n        \r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove link'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n        \r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n            \r\n            if (existing && handlers) {\r\n                existing = Graph.registry.vector.get(existing);\r\n                if (existing) {\r\n                    var name, ns;\r\n                    for (name in handlers) {\r\n                        ns = name + '.link';\r\n                        existing.off(ns, handlers[name]);\r\n                        ns = null;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            handlers = null;\r\n            \r\n            return this;\r\n        },\r\n        \r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n            \r\n            this.unbindResource(type, resource);\r\n            \r\n            handlers = {};\r\n    \r\n            handlers.resize    = _.bind(getHandler(this, type, 'resize'), this);\r\n            handlers.rotate    = _.bind(getHandler(this, type, 'rotate'), this);\r\n            handlers.dragstart = _.bind(getHandler(this, type, 'dragstart'), this, _, resource);\r\n            handlers.dragmove  = _.bind(getHandler(this, type, 'dragmove'), this);\r\n            handlers.dragend   = _.bind(getHandler(this, type, 'dragend'), this);\r\n\r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n            \r\n            resource.on('resize.link', handlers.resize);\r\n            resource.on('rotate.link', handlers.rotate);\r\n            \r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('dragstart.link', handlers.dragstart);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('dragmove.link', handlers.dragmove);\r\n                } else {\r\n                    resource.on('dragend.link', handlers.dragend);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n        \r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n        \r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.bendpoints = null;\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        connect: function(/*start, end*/) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n            \r\n            this.router.route();\r\n\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            source.connectable().addLink(this, 'outgoing', target);\r\n            target.connectable().addLink(this, 'incoming', source);\r\n\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function() {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n            \r\n            // unbind resource\r\n            // this.unbindResource('source');\r\n            // sthis.unbindResource('target');\r\n            \r\n            this.props.connected = false;\r\n            this.router.reset();\r\n            this.update(this.router.command());\r\n        },\r\n        \r\n        update: function(command, silent) {\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n            \r\n            if ( ! silent) {\r\n                this.redraw();\r\n                this.fire('update');\r\n                Graph.topic.publish('link/update');\r\n            }\r\n        },\r\n        \r\n        refresh: function(silent) {\r\n            var command = this.router.command();\r\n            this.update(command, silent);\r\n        },\r\n\r\n        updateConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n        \r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n        \r\n        redraw: function() {\r\n            // TODO: update label position\r\n            \r\n            if (this.props.label) {\r\n                var label = this.component('label'),\r\n                    bound = label.bbox().toJson(),\r\n                    distance = this.props.labelDistance || .5,\r\n                    scale = this.router.layout().scale(),\r\n                    path = this.router.pathinfo(),\r\n                    dots = path.pointAt(distance * path.length(), true),\r\n                    align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n                \r\n                if (align == 'h') {\r\n                    dots.x += ((10 + bound.width / 2) / scale.x);\r\n                } else {\r\n                    dots.y -= ((10 + bound.height / 2) / scale.y);\r\n                }\r\n                \r\n                label.attr({\r\n                    x: dots.x,\r\n                    y: dots.y\r\n                });\r\n                \r\n                path = null;\r\n                dots = null;\r\n\r\n                label.dirty(true);\r\n            }\r\n            \r\n        },\r\n        \r\n        label: function(text, x, y) {\r\n            var path, distance, point, align;\r\n            \r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            if (x !== undefined && y !== undefined) {\r\n                path = this.router.pathinfo();\r\n                point = path.nearest({x: x, y: y});\r\n                distance = point.distance / path.length();\r\n            } else if (_.isNull(this.props.labelDistance)) {\r\n                path = this.router.pathinfo();\r\n                distance = 0.5;\r\n                point = path.pointAt(path.length() / 2, true);\r\n            }\r\n            \r\n            if (point) {\r\n                this.props.labelDistance = distance;\r\n                path = point = null;\r\n            }\r\n            \r\n            this.component('label').write(text);\r\n            this.component('coat').data('text', text);\r\n            \r\n            this.redraw();\r\n            return this;\r\n        },\r\n\r\n        select: function(batch) {\r\n            this.props.selected = true;\r\n            this.component('block').addClass('selected');\r\n            \r\n            if ( ! batch) {\r\n                //this.sendToFront();\r\n                this.resumeControl();\r\n\r\n                Graph.topic.publish('link/select', {link: this});\r\n            }\r\n        },\r\n\r\n        deselect: function(batch) {\r\n            this.props.selected = false;\r\n            this.component('block').removeClass('selected');\r\n\r\n            if ( ! batch) {\r\n                this.suspendControl();\r\n                Graph.topic.publish('link/deselect', {link: this});    \r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n        \r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n        \r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n            \r\n            // disconnect first\r\n            this.disconnect();\r\n            \r\n            // remove from source & target\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n            \r\n            source.connectable().removeLink(this);\r\n            target.connectable().removeLink(this);\r\n            \r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n            \r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n            \r\n            // publish\r\n            Graph.topic.publish('link/remove');\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.update(command);\r\n        },\r\n        \r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n            this.sendToFront();\r\n        },\r\n        \r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n        \r\n        onLabelDragend: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n            \r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n            \r\n            // update label distance\r\n            var path = this.router.pathinfo(),\r\n                near = path.nearest(p);\r\n            \r\n            this.props.labelDistance = near.distance / path.length();\r\n            \r\n            label.reset();\r\n            \r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            this.select(e.batch);\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            this.deselect(e.batch);\r\n        },\r\n\r\n        onCoatDragStart: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatDragEnd: function(e) {\r\n            var dx = e.dx,\r\n                dy = e.dy;\r\n            this.router.relocate(dx, dy);\r\n            this.update(this.router.command());\r\n        },\r\n\r\n        onCoatRemove: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onSourceRotate: function() {\r\n    \r\n        },\r\n\r\n        onSourceDragstart: function(e, source) {\r\n            var lasso = this.component('coat').lasso;\r\n            \r\n            if ( ! source.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDragmove: function() {\r\n            this.router.repair('source');\r\n        },\r\n\r\n        onSourceDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.tail();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n                    this.router.repair(this.router.source(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceResize: function(e) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n            \r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        onTargetRotate: function() {\r\n            \r\n        },\r\n\r\n        onTargetDragstart: function(e, target) {\r\n            var lasso = this.component('coat').lasso;\r\n\r\n            if ( ! target.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDragmove: function() {\r\n            this.router.repair('target');\r\n        },\r\n\r\n        onTargetDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.head();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n                    \r\n                    this.router.repair(this.router.target(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetResize: function(e) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n                \r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n        \r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            \r\n        },\r\n\r\n        destroy: function() {\r\n            \r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Link.guid = 0;\r\n\r\n    Link.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + _.capitalize(handler),\r\n            func = scope[name];\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: true,\r\n                smootness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        offset: function() {\r\n            var offset = this.cached.offset;\r\n            var view, node;\r\n\r\n            if ( ! offset) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                offset = node.getBoundingClientRect();\r\n                this.cached.offset = offset;\r\n            }\r\n\r\n            return offset;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var offset = this.offset();\r\n\r\n                center = {\r\n                    x: offset.width / 2,\r\n                    y: offset.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n\r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        grabLocation: function(event) {\r\n            var x = event.clientX,\r\n                y = event.clientY,\r\n                offset = this.offset(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= offset.left / scale.x;\r\n            location.y -= offset.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n\r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.updateConvex(convex[key]);\r\n                    link.refresh(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.refresh(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.router',\r\n            icon: Graph.icons.SHAPE_ROUTER,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var shape, block, label;\r\n\r\n            var points = [\r\n                me.props.width / 2, 0,\r\n                me.props.width, me.props.height / 2,\r\n                me.props.width / 2, me.props.height,\r\n                0, me.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, me.guid());\r\n\r\n            block.draggable({ghost: true, dragClass: 'shape-draggable'});\r\n            block.resizable();\r\n            block.editable();\r\n            block.connectable({wiring: 'h:v'});\r\n            block.snappable();\r\n\r\n            block.on('edit', _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart', _.bind(me.onDragStart, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize', _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Router.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable();\r\n                control.cursor('default');\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.link.Directed.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n        \r\n        update: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n            \r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n                \r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n                        \r\n                    var item;\r\n                    \r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n                    \r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smootness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n                \r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n                \r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n                    \r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n                    \r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n                        \r\n                        prev = segments[i - 1];\r\n                        \r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr, \r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n                            \r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                command = Graph.util.segments2path(segments);\r\n                // var p = Graph.path(command);\r\n                // this.router.source().paper().path(p).style('stroke', 'red');\r\n                \r\n            }\r\n\r\n            if (command) {\r\n                this.component('coat').attr('d', command).dirty(true);\r\n                this.component('path').attr('d', command);\r\n                \r\n                this.invalidate();\r\n                \r\n                if ( ! silent) {\r\n                    \r\n                    this.redraw();\r\n                    \r\n                    this.fire('update');\r\n                    Graph.topic.publish('link/update');\r\n                }\r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n                \r\n                control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                drag = {};\r\n                axis = null;\r\n                cursor = 'default';\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n                    \r\n                    drag = {axis: axis};\r\n                }\r\n                \r\n                var context = {\r\n                    \r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    \r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n                    \r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n                \r\n                \r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n                \r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2, dx, dy;\r\n            \r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n            \r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.link.Orthogonal.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.pathinfo().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            path: null,\r\n            bbox: null\r\n        },\r\n\r\n        /**\r\n         * Update options\r\n         */\r\n        options: function(options) {\r\n            options = options || {};\r\n\r\n            var context = _.defaultTo(options.context, this.vector()),\r\n                contextId = context.guid();\r\n\r\n            if (contextId != this.props.context) {\r\n                this.props.context = contextId;\r\n                this.cached.bbox = null;\r\n                this.cached.path = null;\r\n            }\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        context: function() {\r\n            if (this.props.context == this.props.vector) {\r\n                return this.vector();\r\n            }\r\n            return Graph.registry.vector.get(this.props.context);    \r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.path = null;\r\n            this.cached.bbox = null;\r\n        },\r\n\r\n        bbox: function() {\r\n            var bbox = this.cached.bbox;\r\n\r\n            if ( ! bbox) {\r\n                // TODO: grab outer matrix based on current context\r\n                var vector = this.vector(),\r\n                    path = vector.pathinfo();\r\n\r\n                var matrix, contextId;\r\n\r\n                if (this.props.context == this.props.vector) {\r\n                    matrix = vector.matrix();\r\n                } else {\r\n                    matrix = Graph.matrix();\r\n                    contextId = this.props.context;\r\n\r\n                    vector.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n                }\r\n\r\n                // TODO: transform path based on calculated matrix\r\n                path = path.transform(matrix);\r\n                \r\n                bbox = path.bbox();\r\n                this.cached.bbox = bbox;\r\n\r\n                matrix = path = null;\r\n            }\r\n\r\n            return bbox.clone();\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var path = this.cached.path;\r\n\r\n            if ( ! path) {\r\n                // TODO: grab outer matrix based on current context\r\n                var vector = this.vector(),\r\n                    path = vector.pathinfo();\r\n\r\n                var matrix, contextId;\r\n\r\n                if (this.props.context == this.props.vector) {\r\n                    matrix = vector.matrix();\r\n                } else {\r\n                    matrix = Graph.matrix();\r\n                    contextId = this.props.context;\r\n\r\n                    vector.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n                }\r\n\r\n                // TODO: transform path\r\n                path = path.transform(matrix);\r\n                this.cached.path = path;\r\n\r\n                matrix = null;\r\n            }\r\n\r\n            return path.clone();\r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-arrow');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        navigationKeys: [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ],\r\n\r\n        constructor: function(vector, listeners) {\r\n            var me = this, \r\n                node = vector.node(),\r\n                guid = vector.guid();\r\n\r\n            var vendor;\r\n\r\n            me.props.vector = guid;\r\n            me.listeners = listeners || {};\r\n\r\n            vendor = vendors[guid] = interact(node);\r\n\r\n            vendor.on('down', function reactorDown(e){\r\n                if (e.target === node) {\r\n                    e.originalType = 'pointerdown';\r\n                    vector.fire(e);    \r\n                }\r\n            }, true);\r\n\r\n            vector.elem.on({\r\n                contextmenu: function(e) {\r\n                    if (e.currentTarget === node) {\r\n                        vector.fire(e);\r\n                        // e.preventDefault();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (vector.isPaper()) {\r\n                var doc = Graph.$(document);\r\n\r\n                doc.on('keydown', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavdown';\r\n                        vector.fire(e); \r\n                    }\r\n                });\r\n\r\n                doc.on('keyup', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavup';\r\n                        vector.fire(e);\r\n                    }\r\n                });\r\n\r\n                doc = null;\r\n            }\r\n\r\n            vendor = null;\r\n        },\r\n\r\n        isNavigation: function(e) {\r\n            var key = e.keyCode;\r\n            return _.indexOf(this.navigationKeys, key) > -1;\r\n        },\r\n        \r\n        vendor: function() {\r\n            return vendors[this.props.vector];\r\n        },\r\n\r\n        draggable: function(options) {\r\n            return this.vendor().draggable(options);\r\n        },\r\n\r\n        dropzone: function(options) {\r\n            return this.vendor().dropzone(options);\r\n        },\r\n\r\n        gesturable: function(options) {\r\n            return this.vendor().gesturable(options);\r\n        },\r\n\r\n        destroy: function() {\r\n            var guid = this.props.vector,\r\n                vendor = vendors[guid];\r\n\r\n            if (vendor) {\r\n                vendor.unset();\r\n            }\r\n\r\n            delete vendors[guid];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Reactor';\r\n        }\r\n    });\r\n\r\n    var on  = Reactor.prototype.on,\r\n        off = Reactor.prototype.off;\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.on = function(event, handler) {\r\n        var vector = this.vector();\r\n        return on.apply(vector, [event, handler]);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.off = function(event, handler) {\r\n        var vector = this.vector();\r\n        return off.apply(vector, [event, handler]);\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('translate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('rotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('scale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: Graph.config.base + 'img/resize-control.png',\r\n            handleSize: 17,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.context) {\r\n                options.context = options.context.guid();\r\n            } else {\r\n                options.context = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/resize-control.png';\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {cursor: 'nesw-resize'},\r\n                se: {cursor: 'nwse-resize'},\r\n                sw: {cursor: 'nesw-resize'},\r\n                nw: {cursor: 'nwse-resize'},\r\n                 n: {cursor: 'ns-resize', axis: 'y'},\r\n                 e: {cursor: 'ew-resize', axis: 'x'},\r\n                 s: {cursor: 'ns-resize', axis: 'y'},\r\n                 w: {cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('dragstart', _.bind(me.onHandleMoveStart, me));\r\n                    h.on('dragmove', _.bind(me.onHandleMove, me));\r\n                    h.on('dragend', _.bind(me.onHandleMoveEnd, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n            \r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path = vector.pathinfo(),\r\n                    bbox = path.bbox().toJson(),\r\n                    rotate = vector.globalMatrix().rotate();\r\n\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n\r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = me.pathinfo();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    if (this.props.context != this.props.vector) {\r\n                        path = me.pathinfo();\r\n                        bbox = path.bbox().toJson();\r\n                    }\r\n                }\r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n            \r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleMoveStart: function(e) {\r\n            var me = this, handle = e.publisher;\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleMove: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleMoveEnd: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('resize', resize);\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            \r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Lasso tool only available for paper !');\r\n            }\r\n            \r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n\r\n                    _.assign(collecting, {\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,    \r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,    \r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - offset.left) + 'px, ' + (collecting.start.y - offset.top) + 'px)'   \r\n                    });\r\n                },\r\n                \r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - offset.left) + 'px,' + (bounds.y - offset.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.grabLocation({\r\n                        clientX: bounds.x, \r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.grabLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n                    \r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');    \r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( ! vector.elem.belong('graph-resizer') && ! vector.elem.belong('graph-link')) {\r\n                            if (single) {\r\n                                me.clearCollection(); \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n                \r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n                    \r\n                    me.collect(vector, ! single);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        collect: function(vector, batch) {\r\n            var me = this, offset;\r\n\r\n            vector.lasso = this;\r\n            vector.batch = batch;\r\n\r\n            vector.select(batch);\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n\r\n            Graph.cached.paper = me.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            var batch, offset;\r\n            \r\n            batch = vector.batch;\r\n\r\n            delete vector.lasso;\r\n            delete vector.batch;\r\n\r\n            vector.deselect(batch);\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset > -1) {\r\n                this.collection.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        clearCollection: function(except) {\r\n            var me = this, \r\n                collection = me.collection.slice();\r\n\r\n            _.forEach(collection, function(v){\r\n                if (v !== except) {\r\n                    me.decollect(v);\r\n                }\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncDragStart: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(){\r\n                        var mat = v.graph.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n                        \r\n                        v.fire('dragstart', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            batch: true\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDragMove: function(origin, e) {\r\n            var me = this, dx, dy;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(e.ox, e.oy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('dragmove', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            batch: true\r\n                        });\r\n\r\n                    }(v, e));    \r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDragEnd: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v, i){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();    \r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n                        \r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);    \r\n                        }\r\n\r\n                        v.fire('dragend', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true\r\n                        });\r\n                        \r\n                        v.removeClass('dragging');\r\n                        \r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.origin = origin;\r\n            e.type = 'afterdrag';\r\n            \r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }   \r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n            \r\n            ghost: false,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            dragClass: '',\r\n\r\n            // batching operation\r\n            batchSync: true\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        trans: {\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n            \r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n\r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n            \r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                var style = 'graph-dragger-helper' + (me.props.dragClass ? ' ' + me.props.dragClass : '');\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass(style)\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                style = null;\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin   = vendor.origin();\r\n            me.cached.snapping = [];\r\n            \r\n            vendor.on('down', function draggerDown(e){\r\n                e.preventDefault();\r\n                // e.stopPropagation();\r\n            });\r\n\r\n            if ( ! me.props.manual) {\r\n                vendor.on('move', _.bind(me.onPointerMove, me, _, vector));    \r\n            }\r\n            \r\n            var matrix = vector.globalMatrix(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            me.rotate(rotate.deg);\r\n            me.scale(scale.x, scale.y);\r\n            \r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, vector = me.vector();\r\n\r\n            if ( ! me.props.rendered) {\r\n                me.props.rendered = true;\r\n                me.holder().render(vector.parent());\r\n            }\r\n\r\n            if (me.props.ghost) {\r\n                me.redraw();\r\n            }   \r\n            \r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.vector().parent().elem.append(this.holder().elem);\r\n                this.redraw();\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                helper = this.helper();\r\n\r\n            if (helper) {\r\n                var vbox = vector.bbox().toJson(),\r\n                    hbox = helper.bbox().toJson();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                helper.translate(dx, dy).commit();\r\n\r\n                helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        rotate: function(deg) {\r\n            var rad = Graph.util.rad(deg);\r\n            this.rotation.deg = deg;\r\n            this.rotation.rad = rad;\r\n            this.rotation.sin = Math.sin(rad);\r\n            this.rotation.cos = Math.cos(rad);\r\n        },\r\n\r\n        scale: function(sx, sy) {\r\n            sy = _.defaultTo(sy, sx);\r\n            this.scaling.x = sx;\r\n            this.scaling.y = sy;\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n            \r\n            function fixsnap(snap) {\r\n                \r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n                \r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n                \r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        bound: function(bound) {\r\n            \r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n                            \r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');    \r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n                        \r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }    \r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(), \r\n                paper = vector.paper(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.trans.vector = vector;\r\n            this.trans.paper = paper;\r\n            this.trans.helper = helper;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n\r\n            this.fire('dragstart', edata);\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n            \r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                axs = this.props.axis,\r\n                deg = this.rotation.deg,\r\n                sin = this.rotation.sin,\r\n                cos = this.rotation.cos,\r\n                scaleX = this.scaling.x,\r\n                scaleY = this.scaling.y;\r\n\r\n            // check current scaling\r\n            var scaling = vector.globalMatrix().scale();\r\n            \r\n            if (scaling.x !== scaleX || scaling.y !== scaleY) {\r\n                this.scale(scaling.x, scaling.y);\r\n                scaleX = scaling.x;\r\n                scaleY = scaling.y;\r\n            }\r\n            \r\n            var edx = _.defaultTo(e.dx, 0),\r\n                edy = _.defaultTo(e.dy, 0);\r\n            \r\n            var dx, dy, hx, hy, tx, ty;\r\n            \r\n            dx = dy = hx = hy = tx = ty = 0;\r\n                \r\n            edx /= scaleX;\r\n            edy /= scaleY;\r\n\r\n            if (axs == 'x') {\r\n                dx = hx = edx;\r\n                dy = hy = 0;\r\n\r\n                tx = edx *  cos + 0 * sin;\r\n                ty = edx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = edy;\r\n\r\n                tx = 0 *  cos + edy * sin;\r\n                ty = 0 * -sin + edy * cos;\r\n            } else {\r\n                hx = edx;\r\n                hy = edy;\r\n                \r\n                dx = tx = edx *  cos + edy * sin;\r\n                dy = ty = edx * -sin + edy * cos;  \r\n            }\r\n\r\n            this.trans.dx += tx;\r\n            this.trans.dy += ty;\r\n\r\n            this.trans.hx += hx;\r\n            this.trans.hy += hy;\r\n            \r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n            \r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n                \r\n                ex: edx,\r\n                ey: edy,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n                \r\n                hx: hx,\r\n                hy: hy,\r\n                \r\n                ox: hx,\r\n                oy: hy,\r\n                \r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n\r\n            this.fire('dragmove', event);\r\n            \r\n            if (helper) {\r\n                helper.translate(event.hx, event.hy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                dx = trans.dx,\r\n                dy = trans.dy,\r\n                hx = trans.hx,\r\n                hy = trans.hy;\r\n\r\n            if (helper) {\r\n                vector.translate(dx, dy).commit();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n            \r\n            this.fire('dragend', edata);\r\n            \r\n            this.trans.vector = null;\r\n            this.trans.paper = null;\r\n            this.trans.helper = null;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Sorter = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            height: 0,\r\n            width: 0,\r\n            suspended: true,\r\n            enabled: true,\r\n            offsetTop: 0,\r\n            offsetLeft: 0\r\n        },\r\n\r\n        sortables: [],\r\n        origins: [],\r\n        guests: [],\r\n        batch: [],\r\n        \r\n        trans: {\r\n            sorting: false,\r\n            valid: false,\r\n            drag: null,\r\n            drop: null\r\n        },\r\n\r\n        components: {\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-sorter');\r\n\r\n            me.components.helper = new Graph.svg.Rect(0, 0, 0, 0);\r\n            me.components.helper.addClass('graph-sorter-helper');\r\n            me.components.helper.removeClass('graph-elem graph-elem-rect');\r\n            me.components.helper.props.selectable = false;\r\n            me.components.helper.render(me.vector);\r\n            me.components.helper.$sorter = me;\r\n            \r\n            me.sortables.push(me.components.helper);\r\n\r\n            me.vector.on({\r\n                render: _.bind(me.onVectorRender, me),\r\n                appendchild: _.bind(me.onItemAdded, me),\r\n                prependchild: _.bind(me.onItemAdded, me)\r\n            });\r\n\r\n            if (me.vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        // setup plugin\r\n        setup: function() {\r\n            var me = this,\r\n                vector = me.vector,\r\n                paper = vector.paper(),\r\n                context = vector.node();\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            \r\n            me.plugin = interact('.graph-sortable', {context: context}).dropzone({\r\n                accept: '.graph-sortable',\r\n                // overlap: 'center',\r\n                overlap: .1,\r\n                // checker: _.bind(me.snapping, me),\r\n                ondropactivate: _.bind(me.onSortActivate, me),\r\n                ondropdeactivate: _.bind(me.onSortDeactivate, me),\r\n                ondragenter: _.bind(me.onSortEnter, me),\r\n                ondragleave: _.bind(me.onSortLeave, me),\r\n                ondrop: _.bind(me.onSort, me)\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n\r\n            if (paper.plugins.collector) {\r\n                paper.plugins.collector.on({\r\n                    afterdrag: function(e) {\r\n                        var origin = e.origin;\r\n                        if (_.indexOf(me.sortables, origin) > -1) {\r\n                           me.props.offsetTop += e.dy;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        snapping: function(drage, pointe, dropped, dropzone, dropel, draggable, dragel) {\r\n            return dropped;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n\r\n            if (this.components.helper) {\r\n                this.components.helper.focus(false);\r\n                this.components.helper.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var me = this;\r\n\r\n            me.props.suspended = false;\r\n\r\n            if (me.components.helper) {\r\n                me.components.helper.addClass('visible');\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this;\r\n\r\n            if (me.trans.valid) {\r\n\r\n                if (me.props.suspended) {\r\n                    me.resume();    \r\n                }\r\n\r\n                me.swap(me.components.helper, me.trans.drop);\r\n                me.components.helper.focus();\r\n            }\r\n        },\r\n\r\n        commit: function() {\r\n            var me = this;\r\n\r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$master  = false;\r\n                s.$sorter  = null;\r\n                s.$sorting = false;\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            \r\n            if (me.batch.length) {\r\n                me.permute();\r\n            } else {\r\n                me.swap(me.trans.drag, me.components.helper);\r\n            }\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.reset();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },\r\n\r\n        revert: function() {\r\n            var me = this;\r\n            \r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$sorting = false;\r\n                s.$sorter  = null;\r\n                s.$master  = false;\r\n            });\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            me.reset();\r\n            me.arrange();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },  \r\n\r\n        permute: function() {\r\n            var me = this,\r\n                target = _.indexOf(me.sortables, me.components.helper),\r\n                stacks = _.map(me.sortables, function(s, i){ return i; });\r\n\r\n            me.batch.sort(function(a, b){\r\n                var ta = a.offset().top,\r\n                    tb = b.offset().top;\r\n                return ta === tb ? 0 : (ta < tb ? -1 : 1);\r\n            });\r\n\r\n            orders = _.map(me.batch, function(b){\r\n                return _.indexOf(me.sortables, b);\r\n            });\r\n\r\n            var swaps  = _.difference(stacks, orders),\r\n                repos = _.indexOf(swaps, target);\r\n\r\n            _.insert(swaps, repos, orders);\r\n\r\n            me.sortables = _.permute(me.sortables, swaps);\r\n            me.arrange();\r\n        },\r\n\r\n        swap: function(source, target) {\r\n            var me = this,\r\n                from = _.indexOf(me.sortables, source),\r\n                to = _.indexOf(me.sortables, target);\r\n\r\n            _.move(me.sortables, from, to);\r\n            me.arrange();\r\n        },\r\n\r\n        arrange: function() {\r\n            var me = this;\r\n\r\n            me.props.height = 0;\r\n            me.props.width  = 0;\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                if ( ! s.$sorting) {\r\n                    var sbox = s.bbox().toJson(),\r\n                        dy = me.props.height- sbox.y + me.props.offsetTop;\r\n\r\n                    s.translate(0, dy).commit();\r\n                    me.props.height += sbox.height;\r\n\r\n                    if (sbox.width > me.props.width) {\r\n                        me.props.width = sbox.width;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        suspendBatch: function(batch, predicate) {\r\n            _.forEach(batch, function(b){\r\n                b.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        c.resizer.suspend();\r\n                    }\r\n                });\r\n\r\n                if (predicate) {\r\n                    predicate.call(b, b);\r\n                }\r\n            });\r\n        },\r\n\r\n        resumeBatch: function(batch) {\r\n            var me = this, timer;\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                _.forEach(batch, function(b){\r\n                    b.cascade(function(c){\r\n                        if (c.props.selected && c.resizer) {\r\n                            c.resizer.resume();\r\n                        }\r\n                    });\r\n                })\r\n            }, 0);\r\n        },\r\n\r\n        reset: function() {\r\n            this.guests = [];\r\n            this.origins = [];\r\n            this.trans.drag = null;\r\n            this.trans.sorting = false;\r\n            this.trans.valid = false;\r\n            this.trans.drop = null;\r\n        },\r\n\r\n        enroll: function(item) {\r\n            var me = this, sorter;\r\n\r\n            if (_.indexOf(me.sortables, item) === -1)  {\r\n                sorter = item.$sorter;\r\n                sorter.release(item);\r\n\r\n                if (_.indexOf(me.origins, sorter) === -1) {\r\n                    me.origins.push(sorter);\r\n                }\r\n\r\n                item.$sorter  = me;\r\n\r\n                if (item.$master) {\r\n                    me.trans.drag = item;\r\n                }\r\n                \r\n                item.off('.sorter');\r\n                item.tree.parent = me.vector;\r\n                me.vector.children().push(item);\r\n                me.guests.push(item);    \r\n            }\r\n            \r\n        },\r\n\r\n        release: function(item) {\r\n            var me = this, \r\n                sorter = item.$sorter || me;\r\n\r\n            var offset;\r\n\r\n            item.off('.sorter');\r\n            item.$sorter = null;\r\n            item.tree.parent = null;\r\n\r\n            if (item.$master) {\r\n                sorter.trans.drag = null;\r\n            }\r\n\r\n            sorter.vector.children().pull(item);\r\n            \r\n            if ((offset = _.indexOf(sorter.sortables, item)) > -1) {\r\n                sorter.sortables.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.batch, item)) > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.guests, item)) > -1) {\r\n                sorter.guests.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onItemAdded: function(item) {\r\n            var me = this, delay;\r\n\r\n            if (_.indexOf(me.sortables, item) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (item.hasClass('graph-sorter-helper')) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = this;\r\n            item.addClass('graph-sortable');\r\n            \r\n            item.off('.sorter');\r\n\r\n            item.on('render.sorter',    _.bind(me.onItemRender, me));\r\n            item.on('resize.sorter',    _.bind(me.onItemResize, me));\r\n            item.on('dragstart.sorter', _.bind(me.onItemDragStart, me));\r\n            item.on('dragend.sorter',   _.bind(me.onItemDragEnd, me));\r\n            item.on('collect.sorter',   _.bind(me.onItemCollect, me));\r\n            item.on('decollect.sorter', _.bind(me.onItemDecollect, me));\r\n\r\n            me.sortables.push(item);\r\n\r\n            if (item.props.rendered && ! item.$sorting) {\r\n                delay = _.delay(function(){\r\n                    clearTimeout(delay);\r\n                    me.arrange();\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        onItemRender: function(e) {\r\n            var me = this, delay;\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                me.arrange();\r\n            }, 0);\r\n        },\r\n\r\n        onItemResize: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, defer;\r\n\r\n            suppress(item, true);\r\n\r\n            _.forEach(sorter.sortables, function(s){\r\n                if (s !== item) {\r\n                    e.type = 'resize.sortable';\r\n                    s.fire(e);\r\n                }\r\n            });\r\n\r\n            defer = _.defer(function(item){\r\n                clearTimeout(defer);\r\n                sorter.arrange();\r\n                suppress(item, false);\r\n            }, item);\r\n\r\n            /////////\r\n            \r\n            function suppress(item, state) {\r\n                item.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        var method = state ? 'suspend' : 'resume';\r\n                        c.resizer[method].call(c.resizer);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        onItemDragStart: function(e) {\r\n            var me = this, \r\n                item = e.publisher,\r\n                bsize = me.batch.length;\r\n\r\n            var bbox;\r\n            \r\n            me.props.enabled = bsize && (bsize + 1) === me.sortables.length ? false : true;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = me;\r\n            item.$master = true;\r\n            item.$sorting = true;\r\n\r\n            me.trans.drag = item;\r\n            me.trans.sorting = true;\r\n\r\n            bbox = item.bbox().toJson();  \r\n            width = me.props.width;\r\n            height = bbox.height;\r\n\r\n            if (bsize) {\r\n                if ( ! item.lasso) {\r\n                    me.batch.pop().lasso.clearCollection();\r\n                    me.batch = [];\r\n                } else {\r\n                    height = 0;\r\n                    me.suspendBatch(me.batch, function(b){\r\n                        var box = b.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        b.$sorter = me;\r\n                        b.$sorting = true;\r\n                    });\r\n                }\r\n            }\r\n\r\n            me.components.helper.attr({\r\n                width: width,\r\n                height: height\r\n            });   \r\n        },\r\n\r\n        onItemDragEnd: function(e) {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (me.trans.sorting) {\r\n                if ( ! me.trans.valid) {\r\n                    me.revert();\r\n                }\r\n            } else {\r\n                me.revert();\r\n            }\r\n        },\r\n\r\n        onItemCollect: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this;\r\n\r\n            sorter.batch.push(item);\r\n        },\r\n\r\n        onItemDecollect: function(e, item) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, offset;\r\n\r\n            offset = _.indexOf(sorter.batch, item);\r\n            \r\n            if (offset > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onSortActivate: function() {},\r\n\r\n        onSortDeactivate: function() {},\r\n\r\n        onSortEnter: function(e) {\r\n            var me = this;\r\n            var drag, drop, bbox, width, height;\r\n            \r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            drag = Graph.registry.vector.get(e.relatedTarget);\r\n            drop = Graph.registry.vector.get(e.target);\r\n\r\n            if (drag.lasso) {\r\n                \r\n                height = 0;\r\n                width  = me.props.width;\r\n\r\n                _.forEach(drag.lasso.collection, function(v){\r\n                    var box;\r\n\r\n                    if (v.$sorter) {\r\n\r\n                        if (v.$sorter !== me) {\r\n                            me.enroll(v);\r\n                            me.batch.push(v);\r\n                        }\r\n                        \r\n                        box = v.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        if (box.width > width) {\r\n                            width = box.width;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                me.components.helper.attr({\r\n                    width: width,\r\n                    height: height\r\n                });\r\n            } else {\r\n                if (drag.$sorter) {\r\n                    if (drag.$sorter !== me) {\r\n                        if (me.batch.length) {\r\n                            me.suspendBatch(me.batch);\r\n                        }\r\n\r\n                        me.enroll(drag);\r\n\r\n                        bbox = drag.bbox().toJson();\r\n                        height = bbox.height;\r\n                        width = me.props.width;\r\n\r\n                        me.components.helper.attr({\r\n                            width: width,\r\n                            height: height    \r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            me.trans.drop  = drop;\r\n            me.trans.valid = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        onSortLeave: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.trans.drop = null;\r\n            me.trans.valid = false;\r\n            me.suspend();\r\n        },\r\n\r\n        onSort: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.commit();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover';\r\n    \r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            wiring: 'h:h'\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.context) {\r\n                options.context = options.context.guid();\r\n            } else {\r\n                options.context = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n            \r\n            // setup link droppable\r\n            \r\n            var vendor = vector.interactable().vendor();\r\n            \r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                \r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n                \r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n                    \r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n                    \r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n                    \r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n                \r\n                me.linking.valid = false;\r\n                \r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });    \r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .on('drop', function(e){\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n                    } else {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },  \r\n        \r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n        \r\n        direction: function (network) {\r\n            var orient = this.orientation(network);\r\n            \r\n            switch(orient) {\r\n                case 'intersect':\r\n                    return null;\r\n                case 'top':\r\n                case 'bottom':\r\n                    return 'v:v';\r\n                case 'left':\r\n                case 'right':\r\n                    return 'h:h';\r\n                default:\r\n                    return this.props.wiring;\r\n            }\r\n        },\r\n        \r\n        orientation: function(network) {\r\n            var srcbox = this.bbox().toJson(),\r\n                refbox = network.bbox().toJson(),\r\n                orient = Graph.util.boxOrientation(srcbox, refbox, this.treshold());\r\n            \r\n            srcbox = refbox = null;\r\n            \r\n            return orient;\r\n        },\r\n        \r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n        \r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n        \r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n            \r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n            \r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n            \r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n                \r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n        \r\n        hasConnection: function(network) {\r\n            var conn = this.getConnection();\r\n            return conn.length ? conn : false;\r\n        },\r\n        \r\n        connections: function(network) {\r\n            var me = this, \r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n            \r\n            if (network !== undefined) {\r\n                \r\n                var pair = network.vector().guid();\r\n                \r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                \r\n                return conns;\r\n            }\r\n            \r\n            var cables = me.cached.cables;\r\n            \r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n            \r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n        \r\n        /**\r\n         * Can connect to target network\r\n         */\r\n        canConnect: function(network, link) {\r\n            var a = this.vector().guid(),\r\n                b = network.vector().guid();\r\n            \r\n            if (a != b) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this, conns = this.connections();\r\n\r\n            _.forEach(conns, function(conn){\r\n                conn.link.remove(); \r\n            });\r\n            \r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n\r\n            console.log(this);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' + \r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' + \r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' + \r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' + \r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n        \r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n            \r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');    \r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n            \r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y    \r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5), \r\n                    event.deltaY * factor / (-8), \r\n                    origin\r\n                );\r\n            }\r\n        }, \r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (tool == 'collector') {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n            \r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = { \r\n                    x: e.clientX - offset.x, \r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n            \r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300)\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function pointerLocation(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x, \r\n            y: y\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            context: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-arrow)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n            this.props.context = paper.viewport().guid();\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path'),\r\n                    context = this.context();\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path, context);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        // update context\r\n                        source.connectable({\r\n                            context: context\r\n                        });\r\n\r\n                        sbox = source.connectable().bbox();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.connectable().pathinfo();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.connectable().pathinfo();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var paper = this.vector();\r\n                paper.connect(\r\n                    this.linking.source, \r\n                    this.linking.target,\r\n                    tail,\r\n                    head\r\n                );\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path, context) {\r\n\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.grabLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n                            \r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            // update target context\r\n                            target.connectable({\r\n                                context: context\r\n                            });\r\n\r\n                            tbox = target.connectable().bbox();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        paper: null,\r\n\r\n        drawing: {\r\n            offset: {\r\n                x: 0, \r\n                y: 0\r\n            },\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            this.paper = paper;\r\n        },\r\n        \r\n        draw: function() {\r\n            var paper, shape, vendor;\r\n            \r\n            // activate panzoom\r\n            this.paper.tool().activate('panzoom');\r\n\r\n            shape = Graph.shape.apply(null, arguments);\r\n\r\n            if (shape) {\r\n\r\n                shape.render(this.paper);\r\n                shape.move(-500, -500);\r\n                \r\n                this.refresh(shape);\r\n                this.paper.state('drawing');\r\n\r\n                vendor = this.paper.interactable().vendor();\r\n\r\n                this.drawing.offset = this.paper.layout().offset();\r\n                this.drawing.moveHandler = _.bind(this.onPointerMove, this, _, shape);\r\n                this.drawing.stopHandler = _.bind(this.onPointerStop, this, _, shape);\r\n\r\n                vendor.on('move', this.drawing.moveHandler);\r\n                vendor.on('up', this.drawing.stopHandler);    \r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        refresh: function(shape) {\r\n            var snapping = this.paper.layout().dragSnapping();\r\n\r\n            shape.component().cascade(function(comp){\r\n                if (comp.isDraggable()) {\r\n                    comp.draggable().snap(snapping);\r\n                }\r\n\r\n                if (comp.isResizable()) {\r\n                    comp.resizable().snap(snapping);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        onPointerMove: function(e, shape) {\r\n            var offset = this.drawing.offset,   \r\n                viewport = this.paper.viewport(),\r\n                coords = Graph.event.relative(e, viewport),\r\n                scale = viewport.scale();\r\n\r\n            var x = coords.x - (offset.left / scale.x),\r\n                y = coords.y - (offset.top / scale.y);\r\n\r\n            shape.move(x, y);\r\n        },\r\n\r\n        onPointerStop: function(e, shape) {\r\n            var vendor = this.paper.interactable().vendor();\r\n            var delay;\r\n\r\n            delay = _.delay(_.bind(function(){\r\n                if (this.drawing.moveHandler) {\r\n                    vendor.off('move', this.drawing.moveHandler);    \r\n                    this.drawing.moveHandler = null;\r\n                }\r\n\r\n                if (this.drawing.stopHandler) {\r\n                    vendor.off('up', this.drawing.stopHandler);    \r\n                    this.drawing.stopHandler = null;\r\n                }\r\n            }, this), 0);\r\n            \r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.on('keypress', function(e){\r\n                if (e.keyCode === Graph.event.ENTER) {\r\n                    me.commit();\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n            var text = this.components.editor.text();\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper/beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper/beforescroll', this.editing.commitHandler);\r\n                this.vector().paper().off('pointerdown', this.editing.commitHandler);\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.globalMatrix(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(Math.min(this.props.width, width), MIN_BOX_WIDTH);\r\n                left = vbox.x + (vbox.width - width) / 2;\r\n            }\r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max((Math.min(this.props.height, height)), MIN_BOX_HEIGHT);\r\n                top = vbox.y + (vbox.height - height) / 2;\r\n            }\r\n\r\n            left = left + 4 * scale.x;\r\n            top = top + 4 * scale.y;\r\n            width = width - 8 * scale.x;\r\n            height = height - 8 * scale.y;\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            if (vector.lasso) {\r\n                vector.lasso.decollect(vector);\r\n            }\r\n\r\n            if (vector.paper().tool().current() == 'linker') {\r\n                vector.paper().tool().activate('panzoom');\r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    scale = paper.layout().scale();\r\n\r\n                var offset, coords, left, top;\r\n\r\n                if (paper) {\r\n                    offset = paper.offset();\r\n                    coords = paper.layout().grabLocation(e);\r\n\r\n                    left = e.clientX - offset.left + (OFFSET_TRESHOLD * scale.x);\r\n                    top = e.clientY - offset.top + (OFFSET_TRESHOLD * scale.y);\r\n\r\n                    editor.css({\r\n                        left: left,\r\n                        top: top\r\n                    });\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top = coords.y;\r\n                }\r\n            }\r\n\r\n            me.editing.commitHandler = function() {\r\n                me.commit();\r\n            };\r\n\r\n            Graph.topic.subscribe('paper/beforezoom', me.editing.commitHandler);\r\n            Graph.topic.subscribe('paper/beforescroll', me.editing.commitHandler);\r\n\r\n            vector.paper().on('pointerdown', me.editing.commitHandler);\r\n            vector = null;\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null,\r\n            context: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n            this.props.context = vector.viewport().guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);    \r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                contextId = this.props.context,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.off('dragend',  me.clients[clientId].dragEndHandler);\r\n                client.off('remove',  me.clients[clientId].removeHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    dragStartHandler: _.bind(me.onClientDragStart, me, _, client),\r\n                    dragEndHandler: _.bind(me.onClientDragEnd, me, _, client),\r\n                    removeHandler: _.bind(me.onClientRemove, me, _, client)\r\n                };\r\n\r\n                client.on('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.on('dragend', me.clients[clientId].dragEndHandler);\r\n                client.on('remove',  me.clients[clientId].removeHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var clientId = client.guid(),\r\n                contextId = this.props.context,\r\n                matrix = Graph.matrix(),\r\n                path = client.pathinfo();\r\n\r\n            var center, bbox;\r\n\r\n            client.bubble(function(curr){\r\n                if (curr.guid() == contextId) {\r\n                    return false;\r\n                }\r\n                matrix.multiply(curr.matrix());\r\n            });\r\n\r\n            path = path.transform(matrix);\r\n            bbox = path.bbox();\r\n\r\n            center = bbox.center().toJson();\r\n\r\n            matrix = path = bbox = null;\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientDragStart: function(e, client) {\r\n            var me = this,\r\n                paper = me.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = this.context().matrix(),\r\n                dx = ma.props.e,\r\n                dy = ma.props.f,\r\n                point = layout.grabLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - point.x,\r\n                diffy = center.y - point.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n                \r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.grabLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientDragEnd: function(e, client) {\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n                \r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var key, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[key]) {\r\n                    snapping.coords[key] = center;\r\n                    options.coords = key;\r\n                }\r\n                \r\n                key = null;\r\n                center = null;\r\n            }\r\n            \r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientRemove: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function bboxCenter(client, context) {\r\n        if (client.guid() == context.guid()) {\r\n            return client.bbox().center(true);\r\n        }\r\n\r\n        var matrix = Graph.matrix();\r\n        var path, bbox, center;\r\n\r\n        client.bubble(function(curr){\r\n            matrix.multiply(curr.matrix());\r\n            if (curr === context) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        path = client.pathinfo().transform(matrix);\r\n        bbox = path.bbox();\r\n\r\n        center = bbox.center(true);\r\n        path = bbox = null;\r\n\r\n        return center;\r\n    }\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n        \r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            \r\n            Graph.topic.subscribe('shape/select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape/deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link/select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link/deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n            \r\n            if (tool && tool.handler) {\r\n                tool.handler(e);\r\n            }\r\n            \r\n            e.preventDefault();\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'START',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({\r\n                ghost: true,\r\n                dragClass: Graph.styles.SHAPE_DRAG\r\n            });\r\n            \r\n            block.connectable({wiring: 'h:v'});\r\n            block.resizable();\r\n            block.editable();\r\n            block.snappable();\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            block.on('edit.shape',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart.shape', _.bind(me.onDragStart, me));\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape',  _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Start.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'STOP',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        }, \r\n\r\n        metadata: {\r\n            name: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass('comp-block')\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable();\r\n            block.resizable();\r\n            block.editable();\r\n\r\n            block.on('edit',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize',  _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n            \r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Final.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, me.guid());\r\n\r\n            block.draggable({ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            block.resizable();\r\n            block.editable();\r\n            block.connectable({wiring: 'h:v'});\r\n            block.snappable();\r\n\r\n            block.on('edit.shape',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart.shape', _.bind(me.onDragStart, me));\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape',  _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n            \r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Action.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            width: 100,\r\n            height: 50,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            comp.shape = shape.guid();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Fork.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 140,\r\n            height: 12,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, beam, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass('block')\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable();\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Join.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        metadata: {\r\n            name: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n        \r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config', \r\n                    icon: Graph.icons.CONFIG, \r\n                    title: Graph._('Click to config shape'), \r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above', \r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below', \r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.resizable();\r\n\r\n            block.draggable({\r\n                ghost: true,\r\n                batchSync: false\r\n            });\r\n\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape', _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, me.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', me.props.label);\r\n            header.editable({\r\n                width: 200,\r\n                height: 100\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(me.onLabelEdit, me));\r\n\r\n            var tx = 15,\r\n                ty = me.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            me.tree.pool = new Graph.shape.activity.Pool();\r\n            me.tree.pool.insert(me);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: [],\r\n                                startHandler: _.bind(me.onTransferStart, me),\r\n                                stopHandler: _.bind(me.onTransferEnd, me)\r\n                            };\r\n\r\n                            shape.on('dragend', me.transfer.stopHandler);\r\n\r\n                            // handle batch\r\n                            if (vector.lasso) {\r\n                                batch = vector.lasso.collection.slice();\r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s !== shape) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n                                batch = null;\r\n                            }\r\n\r\n                            // handle shape\r\n                            if ( ! children.has(shape)) {\r\n                                me.transfer.trans = TRANSFER_RECEIVE;\r\n                                comp.addClass('receiving');\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (me.transfer.trans == TRANSFER_RECEIVE) {\r\n                        comp.addClass('receiving');\r\n                    }\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                if (me.transfer) {\r\n                    comp.removeClass('receiving');\r\n                }\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    comp.removeClass('receiving');\r\n                }\r\n            });\r\n\r\n            block = null;\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n            \r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n        \r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n            \r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            \r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n            \r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n            \r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n        \r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n                \r\n            var block, key, val;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                \r\n                block = this.component('block');\r\n                \r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n                \r\n                this.redraw();\r\n                \r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n                \r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n                \r\n                this.redraw();\r\n            }\r\n            \r\n            return result;\r\n        },\r\n        \r\n        addSiblingAbove: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n                \r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n                \r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n            \r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n            \r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n            \r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n            }\r\n            \r\n            sibling = null;\r\n        },\r\n        \r\n        addSiblingBellow: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n            \r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n            \r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n            \r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n            \r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n            \r\n            var result = pool.insert(sibling);\r\n            \r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n            }\r\n            \r\n            sibling = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n        \r\n        onDragEnd: function(e) {\r\n            this.superclass.prototype.onDragEnd.call(this, e);\r\n\r\n            if ( ! e.batch) {\r\n                this.pool().translateBy(this, e.dx, e.dy);\r\n            }\r\n        },\r\n\r\n        onResize: function(e) {\r\n            this.superclass.prototype.onResize.call(this, e);\r\n            this.pool().resizeBy(this);\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.addSiblingAbove();\r\n        },\r\n        \r\n        onBelowToolClick: function(e) {\r\n            this.addSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n        },\r\n\r\n        onTransferStart: function(e) {\r\n\r\n        },\r\n\r\n        onTransferEnd: function(e) {\r\n            var delay;\r\n\r\n            _.delay(function(me){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                var children = me.children(),\r\n                    transfer = me.transfer;\r\n\r\n                var shapeMatrix, shapeComp;\r\n\r\n                console.log(me.contains(transfer.shape));\r\n\r\n                // handle shape\r\n                if (me.contains(transfer.shape)) {\r\n                    \r\n                    shapeComp = transfer.shape.component(); \r\n                    \r\n                    if ( ! children.has(transfer.shape)) {\r\n                        me.addChild(transfer.shape);\r\n\r\n                        // sync matrix\r\n                        // shapeMatrix = transfer.shape.innerMatrix();\r\n\r\n                        // shapeComp.graph.matrix = shapeMatrix;\r\n                        // shapeComp.attr('transform', shapeMatrix.toValue());\r\n                        // shapeComp.dirty(true);\r\n\r\n                    } else {\r\n                        // shapeMatrix = shapeComp.matrix();\r\n                    }\r\n                    \r\n                    // update props\r\n                    // transfer.shape.data({\r\n                    //     left: shapeMatrix.props.e,\r\n                    //     top: shapeMatrix.props.f\r\n                    // });\r\n                    \r\n                    // invalidate\r\n                    transfer.shape.invalidate();\r\n\r\n                    // shapeMatrix = null;\r\n                } else {\r\n                    if (children.has(transfer.shape)) {\r\n                        me.removeChild(transfer.shape);\r\n\r\n                        // sync matrix\r\n                        \r\n                    }\r\n\r\n                    transfer.shape.invalidate();\r\n                }\r\n\r\n                /*console.log(me.contains(transfer.shape));\r\n\r\n                var parent;\r\n                \r\n                // handle shape\r\n                if (children.has(transfer.shape)) {\r\n                    if ( ! bbox.contains(transfer.shape.outerBBox(me))) {\r\n                        //me.removeChild(transfer.shape);\r\n                    } else {\r\n                        // just update matrix\r\n                        var matrix = transfer.shape.matrix();\r\n\r\n                        transfer.shape.data({\r\n                            left: matrix.props.e,\r\n                            top: matrix.props.f\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (bbox.contains(transfer.shape.bbox())) {\r\n                        parent = transfer.shape.parent();\r\n                        if (parent) {\r\n                            //parent.removeChild(transfer.shape, false);\r\n                        }\r\n                        //me.addChild(transfer.shape);\r\n                        console.log(transfer.shape.outerBBox(me).toJson());\r\n                        console.log(bbox.contains(transfer.shape.outerBBox(me)));\r\n                    }\r\n                }\r\n\r\n                \r\n\r\n                // handle batch\r\n                _.forEach(me.transfer.batch, function(shape){\r\n                    if (children.has(shape)) {\r\n                        if ( ! bbox.contains(shape.innerBBox(me))) {\r\n                            me.removeChild(shape);\r\n                        }\r\n                    } else {\r\n                        if (bbox.contains(shape.outerBBox(me))) {\r\n                            parent = shape.parent();\r\n                            if (parent) {\r\n                                parent.removeChild(shape, false);\r\n                            }\r\n                            me.addChild(shape);\r\n                        }\r\n                    }\r\n                });*/\r\n\r\n                transfer.shape.off('dragend', transfer.stopHandler);\r\n                me.transfer = transfer = null;\r\n\r\n                console.log(me.children().items);\r\n\r\n            }, 0, this);\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Lane.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n        \r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){ \r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n        \r\n        // raw nodes\r\n        this.cached = {};\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [], \r\n             y = [], \r\n            x2 = [], \r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n    \r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n            \r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n    \r\n    Pool.prototype.last = function() {\r\n        var index = this.count() - 1,\r\n            last = this.lanes.get(index);\r\n            \r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n    \r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1);\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1);\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.translateBy = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n        \r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n            \r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        \r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n                        \r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        } \r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n\r\n                        shape.redraw();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n        \r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - prevBox.y;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.count = function() {\r\n        return this.lanes.count();\r\n    };\r\n    \r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n        \r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n        \r\n        index = this.lanes.insert(node);\r\n        \r\n        if (index !== undefined) {\r\n            this.cached[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n        \r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            delete this.cached[guid];\r\n        }\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.index(node);\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Pool.guid = 0;\r\n\r\n    Pool.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            width  = vector.elem.width();\r\n            height = vector.elem.height();\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            var bounds = vector.bbox().toJson();\r\n            \r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.globalMatrix().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function() {\r\n        \r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 0.8;\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                document(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n        \r\n        cloned = holder = null;\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n                            \r\n                            found = element.querySelector(rule.selectorText);\r\n                            \r\n                            if (found) {\r\n                                result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                            } else if(rule.cssText.match(/^@font-face/)) {\r\n                                result += rule.cssText + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null,\r\n            paper: null\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Graph.pallet.Activity.guid);\r\n            this.initComponent();\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        bindPaper: function(paper) {\r\n            this.props.paper = paper.guid();\r\n        },\r\n        \r\n        unbindPaper: function(paper) {\r\n            this.props.paper = null;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, pallet;\r\n            \r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">Stop</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\"></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\"></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\"></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.lane\" transform=\"matrix(1,0,0,1,40,500)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>' + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n            \r\n            pallet = Graph.$(template);\r\n            \r\n            pallet.on('click', '[data-shape]', _.bind(this.onShapeClick, this));\r\n            \r\n            var me = this;\r\n\r\n            // setup draggable\r\n            var draggable = interact('.graph-pallet-item', pallet.node()).draggable({\r\n                manualStart: true,\r\n                onstart: function(e) {\r\n                    var target = Graph.$(e.target),\r\n                        transform = Graph.util.transform2segments(target.attr('transform'));\r\n\r\n                    transform = transform[0].slice(1);\r\n                    me.cached.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n\r\n                    target.addClass('grabbing');\r\n\r\n                    var paper = me.paper();\r\n                    if (paper) {\r\n                        var diagram = paper.diagram();\r\n                        console.log(diagram);\r\n                    }\r\n\r\n                    /*var paper = me.paper(),\r\n                        shape = Graph.shape(target.data('shape'));\r\n\r\n                    console.log(shape);*/\r\n\r\n                    transform = target = null;\r\n                    \r\n                },\r\n                onmove: function(e) {\r\n                    me.cached.matrix.translate(e.dx, e.dy);\r\n                    e.target.setAttribute('transform', me.cached.matrix.toValue());\r\n                },\r\n                onend: function(e) {\r\n                    var target = Graph.$(e.target);\r\n                    \r\n                    target.removeClass('grabbing');\r\n                    pallet.node().removeChild(me.cached.clone);\r\n\r\n                    me.cached.matrix = null;\r\n                    target = null;\r\n                }\r\n            })\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    me.cached.clone = e.currentTarget.cloneNode(true);\r\n                    pallet.node().appendChild(me.cached.clone);\r\n                    i.start(action, e.interactable, me.cached.clone);\r\n                }\r\n            });\r\n            \r\n            draggable.styleCursor(false);\r\n            \r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        render: function(container) {\r\n            container = Graph.$(container);\r\n            container.prepend(this.components.pallet);\r\n            container = null;\r\n        },\r\n        \r\n        onShapeClick: function(e) {\r\n            // var namespace = Graph.$(e.currentTarget).data('shape');\r\n            // var shape = Graph.shape(namespace, {});\r\n            // console.log(shape);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Graph.pallet.Activity.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Diagram = Graph.extend({\r\n        \r\n        constructor: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.popup.Dialog.toString = function() {\r\n        return 'function(element, options)';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"],"sourceRoot":"/source/"}